{"version":3,"sources":["common/api/axios.js","store/actions/songs.js","store/actions/posts.js","store/actions/users.js","store/actions/frameworks.js","store/actions/postsAndUsers.js","store/actions/streams.js","store/actions/index.js","store/actions/types.js","store/example-from-docs/reducers/todos.js","store/example-from-docs/actions/index.js","store/example-from-docs/reducers/visibilityFilter.js","store/example-from-docs/reducers/index.js","store/example-from-docs/containers/AddTodo.js","store/example-from-docs/presentational/Todo.js","store/example-from-docs/containers/VisibleTodoList.js","store/example-from-docs/presentational/TodoList.js","store/example-from-docs/containers/FilterLink.js","store/example-from-docs/presentational/Link.js","store/example-from-docs/presentational/Footer.js","store/example-from-docs/ReduxReactDocs.js","store/example-from-docs/index.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/posts-and-users/PostsAndUsers.js","store/Redux.js","components/router/RouterExactRoute.js","components/router/RouterRoute1.js","pages/RouterPage.js","context/LanguageContext.js","components/context/ContextButton.js","components/context/ContextField.js","components/context/ContextCreate.js","components/context/ContextTest.js","context/ThemeContext.js","components/theme/ThemeContextStore.js","components/theme/ThemeSelector.js","App.js","serviceWorker.js","store/reducers/posts.js","store/reducers/frameworks.js","store/reducers/users.js","store/reducers/auth.js","store/reducers/streams.js","store/reducers/index.js","store/reducers/songs.js","store/reducers/selectSong.js","store/configureStore.js","store/localstorage/index.js","index.js","history.js","components/NotFound.js","components/menu/MainMenu.js","common/helpers/helpers.js","components/loader/MaterialLoader.js","store/actions/auth.js","components/tabs/Tabs.js"],"names":["axios__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","customAxios","axios","create","baseURL","CancelToken","isCancel","selectSong","song","type","SELECT_SONG","payload","fetchPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_ref2","posts","wrap","_context","prev","next","get","sent","data","FETCH_POSTS","t0","console","log","stop","this","_x","_x2","apply","arguments","fetchUserById","id","_ref3","_callee2","_ref4","user","_context2","concat","FETCH_USER","_x3","_x4","fetchFrameworks","frameworks","FETCH_FRAMEWORKS","changeFrameworkStatus","framework","CHANGE_FRAMEWORK_STATUS","fetchPostsAndUsers","userIds","map","userId","filter","onlyUnique","forEach","createStream","formValues","stream","auth","post","objectSpread","CREATE_STREAM","history","push","fetchStreams","_","streams","FETCH_STREAMS","fetchStream","_ref5","_callee3","_ref6","_context3","FETCH_STREAM","editStream","_ref7","_callee4","_ref8","_context4","patch","EDIT_STREAM","_x5","deleteStream","_ref9","_callee5","_ref10","_context5","delete","params","DELETE_STREAM","_x6","d","__webpack_exports__","songs_selectSong","posts_fetchPosts","users_fetchUserById","frameworks_changeFrameworkStatus","postsAndUsers_fetchPostsAndUsers","streams_createStream","streams_fetchStreams","streams_fetchStream","streams_editStream","streams_deleteStream","FETCH_USERS","SIGN_IN","SIGN_OUT","todos","state","length","undefined","action","toConsumableArray","text","completed","todo","nextTodoId","VisibilityFilters","visibilityFilter","combineReducers","AddTodo","input","react_default","createElement","onSubmit","e","preventDefault","value","trim","ref","node","connect","TodoComponent","onClick","style","textDecoration","getVisibleTodos","t","Error","toggleTodo","index","assign","key","FilterLink","ownProps","active","children","href","Footer","containers_FilterLink","ReduxReactDocsComponent","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","containers_AddTodo","VisibleTodoList","Component","store","createStore","todoApp","render","es","ReduxReactDocs_ReduxReactDocsComponent","document","getElementById","song_Song","title","selected","onSelect","backgroundColor","className","bind","selectedSong","_selectedSong$song","duration","likes","Fragment","SongList","getSongsList","song_SongDetails","_this","_this$props","props","songs","isSelected","Post","body","PostUser","name","findUser","users","find","PostList","post_PostUser","Framework","progress","onChange","checked","el","indeterminate","FrameworkList","getFrameworkList","fromActions","PostsAndUsers","getAuthorContent","userName","convertArrayToObjById","ReduxComponent","Tabs","tabName","components_posts_and_users_PostsAndUsers","post_PostList","song_SongList","prop","framework_FrameworkList","RouterExactRoute","RouterRoute1","RouterLazyRoute","React","lazy","then","RouterPage","MainMenu","routes","to","react_router","path","exact","component","NotFound","createContext","ContextButton","useContext","LanguageContext","ContextField","label","htmlFor","ContextCreate","ContextTest","language","onLanguageChange","event","setState","Provider","ThemeContextStore","_getPrototypeOf2","_len","args","Array","_key","call","theme","onThemeChange","htmlElement","documentElement","target","classList","remove","add","ThemeContext","ThemeSelector","_useContext","ReactPage","Promise","all","LazyPage","StreamPage","HooksPage","App","ThemeContextStore_ThemeContextStore","react","fallback","MaterialLoader","Boolean","window","location","hostname","match","initialState","isSignedIn","currentFramework","indexOf","form","defineProperty","newState","objectWithoutProperties","_toPropertyKey","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","middlewares","thunk","composedEnhancers","applyMiddleware","compose","reducers","subscribe","throttle","stringify","setItem","saveState","configureStore","src_App_0","navigator","serviceWorker","ready","registration","unregister","history__WEBPACK_IMPORTED_MODULE_0__","createBrowserHistory","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","isArray","route","strict","activeClassName","arr","reduce","acc","current","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","array","MaterialLoaderComponent","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","message","defaultProps","signIn","signOut","_types__WEBPACK_IMPORTED_MODULE_0__","TabsComponent","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","activeTab","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","tabsHeader","tabsBody","_this2","child","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/main.84baddf7.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst customAxios = axios.create({\n   baseURL: \"http://localhost:3001/api\",\n    // headers: {}\n});\n\ncustomAxios.CancelToken = axios.CancelToken;\ncustomAxios.isCancel = axios.isCancel;\n\nexport default customAxios;\n","import {SELECT_SONG} from \"./types\";\n\nexport const selectSong = (song) => ({\n    type: SELECT_SONG,\n    payload: {\n        song\n    }\n});\n","import axios from \"../../common/api/axios\";\nimport {FETCH_POSTS} from \"./types\";\n\n// dispatch и getState provided by redux-thunk\n// Тут с помощью redux-thunk получаю данные и кастомно вызываю диспатч с полученной датой\nexport const fetchPosts = () => async (dispatch, getState) => {\n    // могу получить весь стейт\n    // console.log(getState());\n\n    try {\n        const {data: posts} = await axios.get(\"posts\");\n\n        dispatch({\n            type: FETCH_POSTS,\n            payload: posts\n        });\n    } catch (e) {\n        console.log('Action fetchPosts error', e);\n    }\n};\n\n","import axios from \"../../common/api/axios\";\nimport {FETCH_USER, FETCH_USERS} from \"./types\";\n\nexport const fetchUsers = () => async (dispatch, getState) => {\n    try {\n        const {data: users} = await axios.get(\"users\");\n\n        dispatch({\n            type: FETCH_USERS,\n            payload: users\n        });\n\n\n    } catch(e) {\n        console.log('Action fetchUsers error', e);\n    }\n};\n\nexport const fetchUserById = (id) => async (dispatch, getState) => {\n    try {\n        const {data: user} = await axios.get(`users/${id}`);\n\n        dispatch({\n            type: FETCH_USER,\n            payload: user\n        });\n\n\n    } catch(e) {\n        console.log('Action fetchUser error', e);\n    }\n};\n\n// если хочу что-то замемоизировать то могу использовать _.memoize from lodash, минус - могу получить юзера только 1 раз\n// const _fetchUserById = _.memoize(async (id, dispatch) => {\n//     try {\n//         const {data: user} = await axios.get(`users/${id}`);\n//\n//         dispatch({\n//             type: \"FETCH_USER\",\n//             payload: user\n//         });\n//\n//\n//     } catch(e) {\n//         console.log('Action fetchUser error', e);\n//     }\n// });\n// export const fetchUserById = id => dispatch => _fetchUserById(id, dispatch);\n","import axios from \"../../common/api/axios\";\nimport {CHANGE_FRAMEWORK_STATUS, FETCH_FRAMEWORKS} from \"./types\";\n\nexport const fetchFrameworks = async (dispatch, getState) => {\n    try {\n        const {data: frameworks} = await axios.get(\"frameworks\");\n\n        dispatch({\n            type: FETCH_FRAMEWORKS,\n            payload: frameworks\n        });\n    } catch (e) {\n        console.log('Action fetchFrameworks error', e);\n    }\n};\n\nexport const changeFrameworkStatus = (framework) => ({\n    type: CHANGE_FRAMEWORK_STATUS,\n    payload: framework\n});\n","import {fetchPosts} from \"./posts\";\nimport {fetchUserById} from \"./users\";\nimport {onlyUnique} from \"../../common/helpers/helpers\";\n\n// пример общего экшена\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n    // объединенный экшн для вызова и постов и юзеров\n    // также обязательно оборачиваю егов dispatch на случай если внутренние экшены также делают диспатч\n    await dispatch(fetchPosts());\n\n    const userIds = getState().posts.map(({userId}) => userId);\n    const uniqUserIds = userIds.filter(onlyUnique);\n\n    // тут без await так как неважно в каком порядке загрузятся комменты\n    uniqUserIds.forEach(id => dispatch(fetchUserById(id)));\n};\n","import axios from \"../../common/api/axios\";\nimport {CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS} from \"./types\";\nimport history from \"../../history\";\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    try {\n        const {userId} = getState().auth;\n        const {data: stream} = await axios.post(\"/streams\", {...formValues, userId});\n\n        dispatch({\n            type: CREATE_STREAM,\n            payload: stream\n        });\n\n        // после того как создал иду на /stream (это для примера)\n        history.push(\"/stream\");\n\n    } catch (e) {\n        console.log(\"createStream post error \", e);\n    }\n};\n\nexport const fetchStreams = _ => async dispatch => {\n    try {\n        const {data: streams} = await axios.get(\"/streams\");\n\n        dispatch({\n            type: FETCH_STREAMS,\n            payload: streams\n        })\n    } catch (e) {\n        console.log(\"fetchStreams get error \", e);\n    }\n};\n\nexport const fetchStream = id => async dispatch => {\n    try {\n        const {data: stream} = await axios.get(`/streams/${id}`);\n\n        dispatch({\n            type: FETCH_STREAM,\n            payload: stream\n        })\n    } catch (e) {\n        console.log(\"fetchStream get error \", e);\n    }\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    try {\n        // в делит для примера делаю в парам, тут для примера в url, лучше вообще делать в пут чтобы не\n        // получать лишний запрос options\n        // patch а не put так как пут обычно перезатирает все проперти кроме id\n        const {data: stream} = await axios.patch(`/streams/${id}`, formValues);\n\n        dispatch({\n            type: EDIT_STREAM,\n            payload: stream\n        });\n\n        // после того как создал иду на /stream (это для примера)\n        history.push(\"/stream\");\n    } catch (e) {\n        console.log(\"editStream get error \", e);\n    }\n};\n\nexport const deleteStream = id => async dispatch => {\n    try {\n        const {data: stream} = await axios.delete(`/streams`, {\n            params: {id}\n        });\n\n        dispatch({\n            type: DELETE_STREAM,\n            payload: stream\n        })\n    } catch (e) {\n        console.log(\"deleteStream get error \", e);\n    }\n};\n","export * from \"./songs\";\nexport * from \"./posts\";\nexport * from \"./users\";\nexport * from \"./frameworks\";\nexport * from \"./postsAndUsers\";\nexport * from \"./auth\";\nexport * from \"./streams\";\n","export const FETCH_USERS = \"FETCH_USERS\";\nexport const FETCH_USER = \"FETCH_USER\";\n\n\nexport const SELECT_SONG = \"SELECT_SONG\";\n\n\nexport const FETCH_POSTS = \"FETCH_POSTS\";\n\n\nexport const FETCH_FRAMEWORKS = \"FETCH_FRAMEWORKS\";\nexport const CHANGE_FRAMEWORK_STATUS = \"CHANGE_FRAMEWORK_STATUS\";\n\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n\n\nexport const CREATE_STREAM = \"CREATE_STREAM\";\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\nexport const FETCH_STREAM = \"FETCH_STREAM\";\nexport const DELETE_STREAM = \"DELETE_STREAM\";\nexport const EDIT_STREAM = \"EDIT_STREAM\";\n","const todos = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_TODO':\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case 'TOGGLE_TODO':\n            return state.map(todo =>\n                todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n            )\n        default:\n            return state\n    }\n}\n\nexport default todos\n","let nextTodoId = 0\nexport const addTodo = text => ({\n    type: 'ADD_TODO',\n    id: nextTodoId++,\n    text\n})\n\nexport const setVisibilityFilter = filter => ({\n    type: 'SET_VISIBILITY_FILTER',\n    filter\n})\n\nexport const toggleTodo = id => ({\n    type: 'TOGGLE_TODO',\n    id\n})\n\nexport const VisibilityFilters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n}\n","import { VisibilityFilters } from '../actions'\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case 'SET_VISIBILITY_FILTER':\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\n\nexport default combineReducers({\n    todos,\n    visibilityFilter\n})\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {addTodo} from '../actions'\n\nlet AddTodo = ({dispatch}) => {\n    let input\n\n    return (\n        <div>\n            <form\n                onSubmit={e => {\n                    e.preventDefault()\n                    if (!input.value.trim()) {\n                        return\n                    }\n                    dispatch(addTodo(input.value))\n                    input.value = ''\n                }}\n            >\n                <input\n                    ref={node => {\n                        input = node\n                    }}\n                />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n        </div>\n    )\n}\nAddTodo = connect()(AddTodo)\n\nexport default AddTodo\n","import React from 'react';\n\nexport default function TodoComponent({onClick, completed, text}) {\n    return (\n        <li\n            onClick={onClick}\n            style={{\n                textDecoration: completed ? 'line-through' : 'none'\n            }}\n        >\n            {text}\n        </li>\n    );\n}\n","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions'\nimport { VisibilityFilters } from '../actions'\nimport TodoList from \"../presentational/TodoList\";\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n        case VisibilityFilters.SHOW_ALL:\n            return todos\n        case VisibilityFilters.SHOW_COMPLETED:\n            return todos.filter(t => t.completed)\n        case VisibilityFilters.SHOW_ACTIVE:\n            return todos.filter(t => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}\n\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)\n","import React from \"react\";\nimport TodoComponent from \"./Todo\";\n\nexport default function TodoListComponent({ todos, toggleTodo }) {\n    return (\n        <ul>\n            {todos.map((todo, index) => (\n                <TodoComponent key={index} {...todo} onClick={() => toggleTodo(todo.id)} />\n            ))}\n        </ul>\n    );\n}\n","import {connect} from 'react-redux'\nimport {setVisibilityFilter} from '../actions'\nimport Link from \"../presentational/Link\";\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        active: ownProps.filter === state.visibilityFilter\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onClick: () => {\n            dispatch(setVisibilityFilter(ownProps.filter))\n        }\n    }\n}\n\nconst FilterLink = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Link)\n\nexport default FilterLink\n\n","import React from 'react';\n\nexport default ({ active, children, onClick }) => {\n    if (active) {\n        return <span>{children}</span>\n    }\n\n    return (\n        <a\n            href=\"/\"\n            onClick={e => {\n                e.preventDefault();\n                onClick()\n            }}\n        >\n            {children}\n        </a>\n    );\n}\n","import React from 'react';\nimport FilterLink from '../containers/FilterLink';\nimport { VisibilityFilters } from '../actions';\n\nexport default () => {\n    return (\n        <p>\n            Show: <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n            {', '}\n            <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n            {', '}\n            <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n        </p>\n    );\n}\n","import React, {Component} from 'react';\nimport AddTodo from \"./containers/AddTodo\";\nimport VisibleTodoList from \"./containers/VisibleTodoList\";\nimport Footer from \"./presentational/Footer\";\n\nexport class ReduxReactDocsComponent extends Component {\n    render() {\n        return (\n            <div>\n                <AddTodo/>\n                <VisibleTodoList/>\n                <Footer/>\n            </div>\n        );\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport todoApp from './reducers'\nimport {ReduxReactDocsComponent} from \"./ReduxReactDocs\";\n\nconst store = createStore(todoApp);\n\nrender(\n    <Provider store={store}>\n        <ReduxReactDocsComponent/>\n    </Provider>,\n    document.getElementById('rootReduxDocs')\n);\n","import React from 'react';\nimport './Song.scss';\n\nexport default ({title, selected, onSelect}) => {\n    const style = selected ? {backgroundColor: 'lightblue'} : null;\n\n    return (\n        <div className={'song'} style={style}>\n\n            <div>Title: {title}</div>\n\n            <button\n                onClick={onSelect.bind(this, title)}\n                type={'button'}\n            >\n                Get Details\n            </button>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nfunction SongDetails({selectedSong}) {\n    if (selectedSong) {\n        const {title, duration, likes} = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>Title: {title}</p>\n                <p>Duration: {duration}</p>\n                <p>Likes: {likes}</p>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <h4>Details</h4>\n                <p>No Selected song</p>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import React, {Component} from 'react';\nimport Song from \"./Song\";\nimport {connect} from \"react-redux\";\nimport {selectSong} from \"../../store/actions\";\nimport SongDetails from \"./SongDetails\";\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className={'song-list'}>\n                    {this.getSongsList()}\n                </ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const {songs, selectedSong, selectSong} = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong ? selectedSong.song.title === song.title : null;\n\n            return (\n                <li key={index}>\n                    <Song {...song} selected={isSelected} onSelect={selectSong.bind(this, song)} />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: (song) => {\n        // console.log(ownProps);\n        dispatch(selectSong(song))\n    }\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","import React from 'react';\n\nexport default ({title, body, index}) => (\n    <div>\n        <h3>Post: {index}</h3>\n        <p><b>{title}</b></p>\n        <p>{body}</p>\n    </div>\n);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchUserById} from \"../../store/actions\";\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        console.log(123);\n        const user = this.props.user;\n\n        if (!user) {\n            return null;\n        }\n\n        const {name} = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state, {userId}) => ({\n    user: findUser(state, userId)\n});\n\nexport default connect(mapStateToProps, {fetchUserById})(PostUser);\n\n\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтер то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.find(user => user.id === userId);\n}\n","import React, {Component} from 'react';\nimport {fetchPosts} from \"../../store/actions\";\nimport {connect} from \"react-redux\";\nimport Post from \"./Post\";\nimport PostUser from \"./PostUser\";\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const {posts} = this.props;\n\n        return (\n            <ul>\n                {\n                    posts.map((post, index) => {\n                        return (\n                            <li key={post.id}>\n                                <Post {...post} index={index} />\n                                <PostUser userId={post.userId}/>\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts\n});\n\nexport default connect(mapStateToProps, {fetchPosts})(PostList);\n","import React from \"react\";\n\nexport default ({name, progress, onChange}) => (\n    <div className={'framework'}>\n        <p>Name: {name}</p>\n        <label>Progress:\n            <input type=\"checkbox\"\n                   checked={progress === \"done\"}\n                   onChange={onChange}\n                   ref={el => el && (el.indeterminate = progress === \"indeterminate\")}\n            />\n        </label>\n    </div>\n);\n","import React, {Component} from \"react\";\nimport Framework from \"./Framework\";\nimport {connect} from \"react-redux\";\nimport * as fromActions from \"../../store/actions\"\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.getFrameworkList()}\n            </ul>\n        );\n    }\n\n    getFrameworkList() {\n        const {frameworks, changeFrameworkStatus} = this.props;\n\n        return (\n            frameworks.map((framework, index) => {\n                return (\n                    <li key={index}>\n                        <Framework onChange={changeFrameworkStatus.bind(this, framework)} {...framework} />\n                    </li>\n                );\n            })\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: (framework) => {\n        switch (framework.progress) {\n            case \"done\": {\n                framework.progress = null;\n                break;\n            }\n            case \"indeterminate\": {\n                framework.progress = \"done\";\n                break;\n            }\n            default: {\n                framework.progress = \"indeterminate\";\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchPostsAndUsers} from \"../../store/actions\";\nimport {convertArrayToObjById} from \"../../common/helpers/helpers\";\nimport \"./PostsAndUsers.scss\"\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        this.props.fetchPostsAndUsers();\n    }\n\n    render() {\n        const {posts, users} = this.props;\n\n        return (\n            <ul>\n                {\n                    posts.map(({title, id, body, userId}) => {\n\n                        return (\n                            <li key={id} className={'posts-and-users__item'}>\n                                <p><b>Post title:</b> {title}</p>\n                                <p><b>Post body:</b> {body}</p>\n                                {this.getAuthorContent(users[userId])}\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return (<div>Loading</div>);\n        }\n\n        const {name: userName} = user;\n\n        return (\n            <p><b>Author</b>: {userName}</p>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts,\n    users: convertArrayToObjById(state.users)\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers\n})(PostsAndUsers);\n","import React, {Component} from 'react';\nimport SongList from \"../components/song/SongList\";\nimport PostList from \"../components/post/PostList\";\nimport {TabsComponent} from \"../components/tabs/Tabs\";\nimport FrameworkList from \"../components/framework/FrameworkList\";\nimport PostsAndUsers from \"../components/posts-and-users/PostsAndUsers\";\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <TabsComponent>\n                <div tabName=\"PostsAndUsers\">\n                    <PostsAndUsers />\n                </div>\n\n                <div tabName=\"Post\">\n                    <PostList />\n                </div>\n\n                <div tabName=\"SongList\">\n                    <SongList prop={'test'}/>\n                </div>\n\n                <div tabName=\"Frameworks\">\n                    <FrameworkList />\n                </div>\n            </TabsComponent>\n        );\n    }\n}\n\n\n","import React from \"react\";\n\nexport default () => <h4>RouterExactRoute</h4>;\n","import React from \"react\";\n\nexport default () => <h4>RouterRoute1</h4>;\n","import React from \"react\";\nimport NotFound from \"../components/NotFound\";\nimport {Route, Switch} from \"react-router-dom\";\nimport MainMenu from \"../components/menu/MainMenu\";\nimport RouterExactRoute from \"../components/router/RouterExactRoute\";\nimport RouterRoute1 from \"../components/router/RouterRoute1\";\n\nconst RouterLazyRoute = React.lazy(() => import('../components/router/RouterLazyRoute'));\n\nexport default () => {\n    return (\n        <>\n            <h3>Router examples</h3>\n\n            <MainMenu routes={[\n                {to: \"/router/exact\", title: \"RouterExactRoute\"},\n                {to: \"/router/route1\", title: \"RouterRoute1\"},\n                {to: \"/router/lazy\", title: \"RouterLazyRoute\"},\n                {to: \"/router/*\", title: \"RouterLazyNotFound\"},\n            ]}/>\n\n            <Switch>\n\n                {/* Этот роутер закомментировал так как если раскоментить то он будет\n                    покажется сразу при переходе на /router как и RouterExactRoute\n                    это чисто для примера что такое exact\n                    <Route path=\"/router\" exact component={RouterExactRoute}/>\n                */}\n                <Route path=\"/router/exact\" exact component={RouterExactRoute}/>\n                <Route path=\"/router/route1\" component={RouterRoute1}/>\n                <Route path=\"/router/lazy\" component={RouterLazyRoute}/>\n                <Route path=\"/router/*\">\n                    <NotFound>\n                        Router not found\n                    </NotFound>\n                </Route>\n            </Switch>\n\n        </>\n    );\n}\n","import React from 'react';\n\nexport default React.createContext(\"ru\");\n","import React, {useContext} from 'react';\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const text = language === \"en\" ? \"Submit\" : \"Подтвердить\";\n\n    return (\n        <button type=\"button\">{text}</button>\n    );\n}\n\n\n// раньше надо было делать через класс или consumer но с 16.8 можно использовать useContext\n// export default class ContextButton extends Component {\n//     static contextType = LanguageContext;\n//\n//     render() {\n//         console.log(this.context);\n//\n//         const text = this.context === \"en\" ? \"Submit\" : \"Подтвердить\";\n//\n//         return (\n//             <button type=\"button\">{text}</button>\n//         );\n//     }\n// }\n\n// вариант как делалось раньше через LanguageContext.Consumer\n// export default () => {\n//     return (\n//         <button type=\"button\">\n//             <LanguageContext.Consumer>\n//                 {(value) => value === \"en\" ? \"Submit\" : \"Подтвердить\"}\n//             </LanguageContext.Consumer>\n//\n//         </button>\n//     );\n// }\n\n","import React, {useContext} from 'react';\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const label = language === \"en\" ? \"Name\" : \"Имя\";\n\n    return (\n        <p>\n            <label htmlFor=\"contextFieldName\">{label}</label>\n            <input type=\"text\" id=\"contextFieldName\"/>\n        </p>\n    );\n}\n","import React from 'react';\nimport ContextButton from \"./ContextButton\";\nimport ContextField from \"./ContextField\";\n\nexport default () => (\n    <div>\n        <ContextField/>\n        <ContextButton/>\n    </div>\n);\n","import React, {Component} from 'react';\nimport \"./ContextTest.scss\";\nimport ContextCreate from \"./ContextCreate\";\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default class ContextTest extends Component {\n    state = {\n        language: \"en\"\n    };\n    render() {\n        return (\n            <div className=\"context-test\">\n                Select language:\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, \"en\")}>en</a>\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, \"ru\")}>ru</a>\n\n                <LanguageContext.Provider value={this.state.language}>\n                    <ContextCreate/>\n                </LanguageContext.Provider>\n            </div>\n        );\n    }\n\n    onLanguageChange = (language, event) => {\n        event.preventDefault();\n\n        this.setState({\n            language\n        });\n    }\n}\n","// сделаю пример на контексте потом перепишу на хуки\nimport React from \"react\";\n\nexport default React.createContext(\"default\");\n","import ThemeContext from \"../../context/ThemeContext\";\nimport React, {Component} from \"react\";\n\nexport class ThemeContextStore extends Component {\n    state = {\n        theme: \"default\"\n    };\n\n    render() {\n        return (\n            <ThemeContext.Provider value={{...this.state, onThemeChange: this.onThemeChange}}>\n                {this.props.children}\n            </ThemeContext.Provider>\n        );\n    }\n\n    onThemeChange = (event) => {\n        const htmlElement = document.documentElement;\n        const theme = event.target.value;\n\n        switch (theme) {\n            case \"default\": {\n                htmlElement.classList.remove(\"theme1\", \"theme2\");\n                break;\n            }\n\n            default: {\n                htmlElement.classList.remove(\"theme1\", \"theme2\");\n                htmlElement.classList.add(theme);\n            }\n        }\n\n        this.setState({theme});\n    }\n}\n","import React, {useContext} from \"react\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nexport default () => {\n    const {value, onThemeChange} = useContext(ThemeContext);\n\n    return (\n        <select value={value} onChange={onThemeChange}>\n            <option value=\"default\">default</option>\n            <option value=\"theme1\">theme1</option>\n            <option value=\"theme2\">theme2</option>\n        </select>\n    );\n}\n","import React, {Component, Suspense} from 'react';\nimport './App.scss';\n// просто для примера инжекчу доки\nimport './store/example-from-docs';\nimport {ReduxComponent} from \"./store/Redux\";\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport MaterialLoaderComponent from \"./components/loader/MaterialLoader\";\nimport NotFound from \"./components/NotFound\";\nimport MainMenu from \"./components/menu/MainMenu\";\nimport RouterPage from \"./pages/RouterPage\";\nimport history from \"./history\";\nimport ContextTest from \"./components/context/ContextTest\";\nimport {ThemeContextStore} from \"./components/theme/ThemeContextStore\";\nimport ThemeSelector from \"./components/theme/ThemeSelector\";\n\n\nconst ReactPage = React.lazy(() => import('./pages/ReactPage'));\nconst LazyPage = React.lazy(() => import('./pages/LazyPage'));\nconst StreamPage = React.lazy(() => import('./pages/StreamPage'));\nconst HooksPage = React.lazy(() => import('./pages/HooksPage'));\n\n\nclass App extends Component {\n\n\n    render() {\n        return (\n            <ThemeContextStore>\n                {/*Связываю ThemeContextStore с ThemeSelector через context*/}\n                <ThemeSelector/>\n\n                <div className=\"app\">\n                    <main className=\"app__main\">\n                        {/*Если хочу иметь возможность кастомно переключать роуты из кода а не по кликам то\n                    меняю BrowserRouter, который не поддерживает свойство history={history} (кастомный объект\n                     history, а умеет только свой) на Router*/}\n                        <Router history={history}>\n                            <MainMenu routes={\n                                [\n                                    {to: \"/redux\", title: \"Redux\"},\n                                    {to: \"/react\", title: \"React\"},\n                                    {to: \"/router\", title: \"Router\"},\n                                    {to: \"/stream\", title: \"Stream\"},\n                                    {to: \"/lazy\", title: \"Lazy\"},\n                                    {to: \"/context\", title: \"Context\"},\n                                    {to: \"/hooks\", title: \"Hooks\"},\n                                    {to: \"/unknown\", title: \"Unknown\"},\n                                ]\n                            }/>\n                            {/*При переключении роутера будет показываться MaterialLoaderComponent, за это отвечает Suspense*/}\n                            <Suspense fallback={<MaterialLoaderComponent/>}>\n                                <Switch>\n                                    <Route path=\"/redux\" exact component={ReduxComponent}/>\n                                    <Route path=\"/react\" component={ReactPage}/>\n                                    <Route path=\"/router\" component={RouterPage}/>\n                                    <Route path=\"/hooks\" component={HooksPage}/>\n                                    <Route path=\"/stream\" component={StreamPage}/>\n                                    <Route path=\"/lazy\" component={LazyPage}/>\n                                    <Route path=\"/context\" component={ContextTest}/>\n                                    <Route path=\"*\">\n                                        <NotFound/>\n                                    </Route>\n                                </Switch>\n                            </Suspense>\n                        </Router>\n                    </main>\n                </div>\n            </ThemeContextStore>\n        );\n    }\n}\n\nexport default App;\n\n\n// disable back navigation\n// window.history.pushState(null, null, window.location.href);\n// window.onpopstate = function() {\n//     window.history.go(1);\n// };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_POSTS} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case FETCH_POSTS: {\n            return [...action.payload];\n        }\n\n        default: {\n            return state;\n        }\n    }\n\n};\n","import {CHANGE_FRAMEWORK_STATUS, FETCH_FRAMEWORKS} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_FRAMEWORKS: {\n            return action.payload;\n        }\n\n        case CHANGE_FRAMEWORK_STATUS: {\n            const currentFramework = action.payload;\n\n            // вариант через преобразование в объект и обратно\n            // const entities = convertArrayToObjById(state);\n            // entities[currentFramework.id] = {...currentFramework};\n            // return convertObjToArrById(entities);\n\n            // вариант через массив\n            const index = state.indexOf(currentFramework);\n            state[index] = {...action.payload};\n            return [...state];\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {FETCH_USER} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_USER: {\n            return [...state, action.payload];\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {SIGN_IN, SIGN_OUT} from \"../actions/types\";\n\nconst initialState = {\n    isSignedIn: null,\n    userId: null\n};\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case SIGN_IN: {\n            return {\n                ...state,\n                isSignedIn: true,\n                userId: action.payload\n            };\n        }\n\n        case SIGN_OUT: {\n            return {\n                ...state,\n                isSignedIn: false,\n                userId: null\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n\n}\n","import {CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS} from \"../actions/types\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_STREAM:\n        case EDIT_STREAM:\n        case FETCH_STREAM: {\n            if (action.payload.id) {\n                return {...state, [action.payload.id]: action.payload};\n            }\n\n            return state;\n        }\n\n        case FETCH_STREAMS: {\n            return {...state, ...action.payload};\n        }\n\n        case DELETE_STREAM: {\n            const {[action.payload.id]: removed, ...newState} = state;\n            return {...newState};\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {combineReducers} from \"redux\";\nimport {reducer as form} from \"redux-form\";\nimport songs from \"./songs\";\nimport selectedSong from \"./selectSong\";\nimport posts from \"./posts\";\nimport frameworks from \"./frameworks\";\nimport users from \"./users\";\nimport auth from \"./auth\";\nimport streams from \"./streams\";\n\n\n// простой вызов combineReducers({}) вызовет ошибку, поэтому передаю в него пустую функцию для стабы пока не\n// будет нормальных редьюсеров, например combineReducers({replaceMe: () => 1})\nexport default combineReducers({\n    songs,\n    selectedSong,\n    posts,\n    frameworks,\n    users,\n    auth,\n    form,\n    streams\n});\n","export default () => [\n    {title: \"Imagine dragons\", duration: \"4:05\", likes: 100},\n    {title: \"Animal instinct\", duration: \"4:13\", likes: 110},\n    {title: \"Daemons\", duration: \"3:45\", likes: 120},\n    {title: \"Radioactive\", duration: \"1:45\", likes: 130},\n];\n","import {SELECT_SONG} from \"../actions/types\";\n\nconst selectedSongReducerInitialState = null;\n\nexport default (state = selectedSongReducerInitialState, action) => {\n    switch (action.type) {\n        case SELECT_SONG: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import thunk from \"redux-thunk\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport reducers from \"./reducers\";\nimport {loadState, saveState} from \"./localstorage\";\nimport {throttle} from \"lodash\";\n\n// для того чтобы кучу логики не хранить в index.js про стор, вынес в отдельный файл\nfunction configureStore() {\n    const initState = {};\n    // забираю стор из локалстораджа\n    const persistedState = loadState();\n\n    // logger выводит в консоль все изменения стора, пока закомментирую чтобы не мешал\n    // const middlewares = [thunk, logger];\n    const middlewares = [thunk];\n    const middlewareEnhancer = applyMiddleware(...middlewares);\n\n    // monitorReducerEnhancer - выводит время работы каждого редьюсера\n    // const enhancers = [middlewareEnhancer, monitorReducerEnhancer];\n    const enhancers = [middlewareEnhancer];\n\n    // нужно чтобы заработали дев тулы\n    const composedEnhancers = process.env.NODE_ENV !== 'production'\n        ? composeWithDevTools(...enhancers)\n        : compose(applyMiddleware(...[thunk]));\n\n    // Creates a Redux store that holds the state tree.\n    const store = createStore(\n        reducers,\n        // либо беру из локалстораджа либо инит\n        persistedState || initState,\n        // должен все enhancers объединять в один, так как createStore может принимать только 1 аргумент enhancers\n        composedEnhancers,\n    );\n\n    // throttle чтобы часто не вызывать дорогую JSON.parse хотябы 1 раз в секунду\n    store.subscribe(throttle(() => {\n        saveState({\n            // сохраняю только дату которую получил с бе но не сохраняю вью дату\n            songs: store.getState().songs\n        });\n    }, 1000));\n\n    return store\n}\n\nconst store = configureStore();\n\nexport default store;\n","export function loadState() {\n    try {\n        const serializedState = localStorage.getItem(\"state\");\n\n        if (serializedState === null) return undefined;\n\n        return JSON.parse(serializedState);\n    } catch (e) {\n        return undefined;\n    }\n}\n\nexport function saveState(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (e) {\n        console.log(\"saveState in localStorage error \", e);\n    }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/configureStore\";\n\n\n// обычно с редаксом\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*Если хочу иметь возможность кастомно переключать роуты из кода а не по кликам то\nменяю BrowserRouter, который не поддерживает свойство history={history} (кастомный объект\n history, а умеет только свой) на Router*/\nimport {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\n\nexport default ({children}) => children ? children : <div>Page not found</div>;\n","import {NavLink} from \"react-router-dom\";\nimport React from 'react';\nimport \"./MainMenu.scss\";\n\nexport default ({routes, exact}) => {\n\n    if (Array.isArray(routes)) {\n        return (\n            <ul className=\"main-menu\">\n                {\n                    routes.map((route, index) => {\n                        return (\n                            <li className=\"main-menu__item\" key={index}>\n                                <NavLink\n                                    exact={!!exact}\n                                    strict\n                                    activeClassName=\"_active\"\n                                    className=\"main-menu__link\"\n                                    to={route.to}\n                                >\n                                    {route.title}\n                                </NavLink>\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    } else {\n        return (\n            <p>\n                there are no routes for you\n            </p>\n        );\n    }\n\n}\n","export function convertArrayToObjById(arr) {\n    return arr.reduce((acc, current) => {\n        return {\n            ...acc,\n            [current.id]: current\n        }\n    }, {})\n}\n\nexport function convertObjToArrById(obj) {\n    return Object.keys(obj).map(id => obj[id]);\n}\n\nexport function onlyUnique(value, index, array) {\n    return array.indexOf(value) === index;\n}\n","import React from 'react';\nimport './MaterialLoader.scss';\n\nexport default function MaterialLoaderComponent(props) {\n    return (\n        <div className=\"material-loader\">\n            <svg className=\"material-loader__svg\" viewBox=\"25 25 50 50\">\n                <circle className=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"/>\n            </svg>\n            <p className=\"material-loader__text\">{props.message}</p>\n        </div>\n    );\n}\n\n// Так задаю дефолтные проперти для компоненты (класса или функции)\nMaterialLoaderComponent.defaultProps = {\n    message: \"Loading...\"\n};\n","import {SIGN_IN, SIGN_OUT} from \"./types\";\n\nexport const signIn = (userId) => ({\n    type: SIGN_IN,\n    payload: userId\n});\n\nexport const signOut = () => ({\n    type: SIGN_OUT\n});\n","import React, {Component} from 'react';\nimport './Tabs.scss'\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0\n    };\n\n    render() {\n        let tabsHeader;\n        let tabsBody;\n\n        if (this.props.children) {\n\n            // get header\n            tabsHeader = this.props.children.map((child, index) => {\n                return (\n                    <div\n                        onClick={this.onClick.bind(this, index)}\n                        key={index}\n                        className={\n                            \"tabs__header-item\" +\n                            (index === this.state.activeTab ? ' _active' : '')\n                        }\n                    >\n                        {child.props.tabName}\n                    </div>\n                );\n            });\n\n            // get body\n            tabsBody = this.props.children.map((child, index) => {\n                if (index === this.state.activeTab) {\n                    return (\n                        <div\n                            className=\"tabs__content-item\"\n                            key={index}\n                        >\n                            {child.props.children}\n                        </div>\n                    );\n                } else {\n                    return \"\";\n                }\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">\n                        {tabsHeader}\n                    </div>\n                    <div className=\"tabs__content\">\n                        {tabsBody}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    onClick = (index) => {\n        this.setState((state, props) => ({\n            activeTab: index\n        }));\n    }\n\n}\n"],"sourceRoot":""}