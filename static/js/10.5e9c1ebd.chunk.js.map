{"version":3,"sources":["../node_modules/reselect/es/index.js","store/selectors/shopUser.js","store/selectors/shopCart.js","store/selectors/streams.js","store/selectors/auth.js","store/selectors/users.js","components/tabs/Tabs.js","components/posts-and-users/PostsAndUsers.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/user/User.js","components/user/UserListHooks.js","components/counter/counter-store.component.tsx","components/counter/counters.component.tsx","components/todo/components/todo-header.component.tsx","components/todo/store/actions/types.ts","components/todo/store/reducers/todos.reducer.ts","components/todo/store/reducers/plans.reducer.ts","components/todo/store/reducers/index.ts","components/todo/store/reducers/visibility-filter.reducer.ts","components/todo/store/store.ts","components/todo/containers/todo-header-connected-container.component.tsx","components/todo/store/actions/todo.action.ts","components/todo/components/todo-filter-link.component.tsx","components/todo/components/todo-filter-links.component.tsx","components/todo/containers/todo-filter-links-connected-container.component.tsx","components/todo/store/actions/visibility-filter.action.ts","components/todo/components/todo.component.tsx","components/todo/components/todo-list.component.tsx","components/todo/containers/todo-list-connected-container.component.tsx","components/todo/store/selectors/todo.selector.ts","components/todo/store/selectors/visibility-filter.selector.ts","components/todo/components/plans/todo-plans.component.tsx","components/todo/containers/todo-plans-connected-container.component.tsx","components/todo/store/actions/plans.action.ts","components/todo/todos.component.tsx","components/redux-saga/intro/redux-saga-intro.component.js","components/redux-saga/family/family-saga.component.js","components/redux-saga/counter/saga-counter.component.js","components/redux-saga/redux-saga.component.js","components/redux/Redux.js","pages/ReduxPage.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","selectShopCurrentUser","state","shopUser","shopuser","currentUser","selectShopCart","shopCart","selectShopCartItems","cartItems","selectShopCartQuantity","acc","quantity","selectShopCartVisibleDropdown","visibleDropdown","selectShopCartTotal","price","selectStreams","streams","selectStreamsById","id","selectAuth","auth","selectAuthIsSignedIn","isSignedIn","selectAuthUserId","userId","selectUsers","users","selectIsLoadingUsers","isLoadingUsers","selectUsersArray","TabsComponent","activeTab","onClick","setState","prevState","prevProps","this","props","children","tabsHeader","tabsBody","Children","child","getTabsHeaderView","getTabsBody","className","bind","tabName","Component","PostsAndUsers","fetchPostsAndUsers","user","userName","name","posts","title","body","getAuthorContent","connect","PostUser","fetchUserById","findUser","PostList","fetchPosts","post","Post","ownProps","selected","onSelect","style","backgroundColor","type","selectedSong","song","duration","likes","SongList","getSongsList","songs","selectSong","isSelected","dispatch","progress","onChange","checked","ref","el","indeterminate","FrameworkList","fetchFrameworks","frameworks","changeFrameworkStatus","framework","Framework","getFrameworkList","fromActions","memo","occupation","useDispatch","useSelector","useEffect","fetchUsers","MaterialLoader","store","reducer","listeners","action","forEach","listener","getState","subscribe","filter","l","createStore","COUNTER_TYPES","INCREMENT","DECREMENT","useState","setValue","storeUnsubscribe","inputRef","useRef","current","TODOS_TYPES","VISIBILITY_FILTER_TYPES","PLANS_TYPES","initState","completed","generateUniqueId","isLoading","error","message","plans","combineReducers","todos","payload","todo","visibilityFilter","middlewares","thunk","composedEnhancers","applyMiddleware","compose","reducers","currentValue","rest","href","e","preventDefault","currentFilter","getTodoLinkView","filterType","textDecoration","getFilteredTodos","mapStateToProps","toggleTodo","planId","fetchTodoPlans","cancelFetchSkillRequest","cancelToken","token","customAxios","get","data","cancelRemoveSkillRequest","CancelToken","source","cancel","marginBottom","saga","sagaGetUserStartAction","loading","entities","getFamilyAction","sagaState","counter","SAGA_TYPES","INCREMENT_COUNTER","DECREMENT_COUNTER","Tabs","ReduxComponent","MainMenu","exact","routes","to","path","component","ReduxSaga","Todos","Counters","UserListHooks"],"mappings":"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","file":"static/js/10.5e9c1ebd.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\n\nconst selectShopUser = state => state.shopUser;\n\nexport const selectShopCurrentUser = createSelector(\n    [selectShopUser],\n    shopuser => shopuser.currentUser\n);\n","import { createSelector } from \"reselect\";\n\nconst selectShopCart = state => state.shopCart;\n\nexport const selectShopCartItems = createSelector(\n    // прямо как в ngrx, первый аргумент - предыдущие стейты, второй собственно сам селектор\n    [selectShopCart],\n    shopCart => shopCart.cartItems\n);\n\nexport const selectShopCartQuantity = createSelector(\n    [selectShopCartItems],\n    cartItems =>\n        Object.values(cartItems).reduce(\n            (acc, { quantity }) => acc + quantity,\n            0\n        )\n);\n\nexport const selectShopCartVisibleDropdown = createSelector(\n    [selectShopCart],\n    shopCart => shopCart.visibleDropdown\n);\n\nexport const selectShopCartTotal = createSelector(\n    [selectShopCartItems],\n    cartItems =>\n        Object.values(cartItems).reduce(\n            (acc, { quantity, price }) => acc + quantity * price,\n            0\n        )\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectStreams = state => state.streams;\n\nexport const selectStreamsById = createSelector(\n    [selectStreams, (state, id) => id],\n    (selectStreams, id) => selectStreams[id]\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectAuth = state => state.auth;\n\nexport const selectAuthIsSignedIn = createSelector(\n    [selectAuth],\n    selectAuth => selectAuth.isSignedIn\n);\n\nexport const selectAuthUserId = createSelector(\n    [selectAuth],\n    selectAuth => selectAuth.userId\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectUsers = state => state.users;\n\nexport const selectIsLoadingUsers = createSelector(\n    [selectUsers],\n    selectUsers => selectUsers.isLoadingUsers\n);\n\nexport const selectUsersArray = createSelector([selectUsers], selectUsers =>\n    Object.values(selectUsers.users)\n);\n","import React, { Component, Children } from \"react\";\nimport \"./Tabs.scss\";\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">{tabsHeader}</div>\n                    <div className=\"tabs__content\">{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={index}\n                className={`tabs__header-item${index === this.state.activeTab ? \" _active\" : \"\"}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className=\"tabs__content-item\" key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return \"\";\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index\n        }));\n    };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPostsAndUsers } from \"../../store/actions\";\nimport \"./PostsAndUsers.scss\";\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        const { fetchPostsAndUsers } = this.props;\n\n        fetchPostsAndUsers();\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return <div>Loading</div>;\n        }\n\n        const { name: userName } = user;\n\n        return (\n            <p>\n                <b>Author</b>:{userName}\n            </p>\n        );\n    }\n\n    render() {\n        const { posts, users } = this.props;\n\n        return (\n            <ul>\n                {posts.map(({ title, id, body, userId }) => {\n                    return (\n                        <li key={id} className=\"posts-and-users__item\">\n                            <p>\n                                <b>Post title:</b>\n                                {title}\n                            </p>\n                            <p>\n                                <b>Post body:</b>\n                                {body}\n                            </p>\n                            {this.getAuthorContent(users[userId])}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    users: state.users.users\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers\n})(PostsAndUsers);\n","import React from \"react\";\n\nexport default ({ title, body, index }) => (\n    <div>\n        <h3>\n            Post:\n            {index}\n        </h3>\n        <p>\n            <b>{title}</b>\n        </p>\n        <p>{body}</p>\n    </div>\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchUserById } from \"../../store/actions\";\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        const { user } = this.props;\n\n        if (!user) {\n            return null;\n        }\n\n        const { name } = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, { userId }) => ({\n    user: findUser(state, userId)\n});\n\nexport default connect(mapStateToProps, { fetchUserById })(PostUser);\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтр то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.users[userId];\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../../store/actions\";\nimport Post from \"./Post\";\nimport PostUser from \"./PostUser\";\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const { posts } = this.props;\n\n        return (\n            <ul>\n                {posts.map((post, index) => {\n                    return (\n                        <li key={post.id}>\n                            <Post {...post} index={index} />\n                            <PostUser userId={post.userId} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\n","import React from \"react\";\nimport \"./Song.scss\";\n\nexport default ({ title, selected, onSelect }) => {\n    const style = selected ? { backgroundColor: \"lightblue\" } : null;\n\n    return (\n        <div className=\"song\" style={style}>\n            <div>\n                Title:\n                {title}\n            </div>\n\n            <button onClick={onSelect.bind(this, title)} type=\"button\">\n                Get Details\n            </button>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction SongDetails({ selectedSong }) {\n    if (selectedSong) {\n        const { title, duration, likes } = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>\n                    Title:\n                    {title}\n                </p>\n                <p>\n                    Duration:\n                    {duration}\n                </p>\n                <p>\n                    Likes:\n                    {likes}\n                </p>\n            </>\n        );\n    }\n    return (\n        <>\n            <h4>Details</h4>\n            <p>No Selected song</p>\n        </>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Song from \"./Song\";\nimport { selectSong } from \"../../store/actions\";\nimport SongDetails from \"./SongDetails\";\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className=\"song-list\">{this.getSongsList()}</ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const { songs, selectedSong, selectSong } = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong\n                ? selectedSong.song.title === song.title\n                : null;\n\n            return (\n                <li key={index}>\n                    <Song\n                        {...song}\n                        selected={isSelected}\n                        onSelect={selectSong.bind(this, song)}\n                    />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: song => {\n        // console.log(ownProps);\n        dispatch(selectSong(song));\n    }\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","import React from \"react\";\n\nexport default ({ name, progress, onChange }) => (\n    <div className=\"framework\">\n        <p>\n            Name:\n            {name}\n        </p>\n        <label>\n            Progress:\n            <input\n                type=\"checkbox\"\n                checked={progress === \"done\"}\n                onChange={onChange}\n                ref={el =>\n                    el && (el.indeterminate = progress === \"indeterminate\")\n                }\n            />\n        </label>\n    </div>\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Framework from \"./Framework\";\nimport * as fromActions from \"../../store/actions\";\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    getFrameworkList() {\n        const { frameworks, changeFrameworkStatus } = this.props;\n\n        return frameworks.map((framework, index) => {\n            return (\n                <li key={index}>\n                    <Framework\n                        onChange={changeFrameworkStatus.bind(this, framework)}\n                        {...framework}\n                    />\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return <ul>{this.getFrameworkList()}</ul>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // обращаю внимание что тут fetchFrameworks а не fetchFrameworks(), тем самым могу в action не писать\n    // доп функцию обертку\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: framework => {\n        switch (framework.progress) {\n            case \"done\": {\n                framework.progress = null;\n                break;\n            }\n            case \"indeterminate\": {\n                framework.progress = \"done\";\n                break;\n            }\n            default: {\n                framework.progress = \"indeterminate\";\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import React, { memo } from \"react\";\n\nimport \"./User.scss\";\n\nexport default memo(({ name, occupation }) => {\n    return (\n        <div className=\"user\">\n            <span className=\"user__label\">Name: </span>\n            <span className=\"user__value\">{name}</span>\n            <br />\n            <span className=\"user__label\">Occupation:</span>\n            <span className=\"user__value\">{occupation}</span>\n        </div>\n    );\n});\n","import React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport User from \"./User\";\nimport { fetchUsers } from \"../../store/actions\";\nimport \"./UserList.scss\";\nimport { selectIsLoadingUsers, selectUsersArray } from \"../../store/selectors\";\nimport MaterialLoader from \"../loader/MaterialLoader\";\n\nexport default memo(() => {\n    const dispatch = useDispatch();\n    const isLoadingUsers = useSelector(selectIsLoadingUsers);\n    const users = useSelector(selectUsersArray);\n\n    useEffect(() => {\n        dispatch(fetchUsers());\n    }, [dispatch]);\n\n    return isLoadingUsers ? (\n        <MaterialLoader />\n    ) : (\n        <ul className=\"user-list\">\n            {users.map(user => (\n                <li className=\"user-list__item\" key={user.id}>\n                    <User {...user} />\n                </li>\n            ))}\n        </ul>\n    );\n});\n","import React, { memo, useEffect, useState } from \"react\";\nimport { COUNTER_TYPES } from \"../../store/actions/types\";\n\n// Create store\nconst createStore = (reducer: Function) => {\n    let state: object;\n    // так как сабскрайб может вызывааться несколько раз, должны хранить все вызовы\n    const listeners: any[] = [];\n\n    const getState = () => state;\n\n    const dispatch = (action: { type?: string }) => {\n        // каждый раз когда происходит диспач нужно апдейтить стейт\n        state = reducer(state, action);\n        // и вызывать всех слушателей\n        listeners.forEach(listener => listener());\n    };\n\n    const subscribe = (listener: () => void) => {\n        listeners.push(listener);\n\n        // возвращать функцию unsubscribe которая удаляет слушателя из массива всех слушателей\n        return () => listeners.filter(l => l !== listener);\n    };\n\n    // диспатчим первый раз чтобы редьюсер вернул initial value\n    dispatch({});\n\n    return { getState, dispatch, subscribe };\n};\n\n// Reducer\nconst counterReducer = (state = 0, action: { type: string }) => {\n    switch (action.type) {\n        case COUNTER_TYPES.INCREMENT: {\n            return ++state;\n        }\n\n        case COUNTER_TYPES.DECREMENT: {\n            return --state;\n        }\n\n        default:\n            return state;\n    }\n};\n\n// Create store\nconst store = createStore(counterReducer);\n\nconst CounterStore: React.FC = () => {\n    const [value, setValue] = useState(store.getState());\n\n    useEffect(() => {\n        const storeUnsubscribe = store.subscribe(() => {\n            setValue(store.getState());\n        });\n\n        return () => {\n            storeUnsubscribe();\n        };\n    }, []);\n\n    return (\n        <>\n            <p>{value}</p>\n            <button\n                onClick={() =>\n                    store.dispatch({ type: COUNTER_TYPES.INCREMENT })\n                }\n            >\n                Increment\n            </button>\n            <button\n                onClick={() =>\n                    store.dispatch({ type: COUNTER_TYPES.DECREMENT })\n                }\n            >\n                Decrement\n            </button>\n        </>\n    );\n};\n\nexport default memo(CounterStore);\n","import React, { memo } from \"react\";\nimport CounterStore from \"./counter-store.component\";\n\nconst Counters: React.FC = () => {\n    return (\n        <>\n            <CounterStore />\n            {/* <Counter/>*/}\n            {/* <CounterWithMapDispatchToProps/>*/}\n            {/* <CounterWithMapDispatchToPropsFunc/>*/}\n        </>\n    );\n};\n\nexport default memo(Counters);\n","import React, { memo, useRef } from \"react\";\n\nexport interface ITodoHeaderProps {\n    onClick: (value: string) => void;\n}\n\nconst TodoHeader = ({ onClick }: ITodoHeaderProps) => {\n    // ! здесь означает It is a way to tell the compiler \"this expression cannot be null or undefined\n    const inputRef = useRef<HTMLInputElement>(null!);\n    // еще могу так написать\n    // const inputRef = useRef<HTMLInputElement | null>(null);\n\n    return (\n        <div>\n            <input type=\"text\" ref={inputRef} />\n            <button\n                onClick={() => {\n                    onClick(inputRef.current.value);\n                    inputRef.current.value = \"\";\n                }}\n            >\n                Add todo\n            </button>\n        </div>\n    );\n};\n\nexport default memo(TodoHeader);\n","export const TODOS_TYPES = {\n    ADD: \"[TodoHeaderContainer] Add Todo\",\n    TOGGLE: \"[TodoListContainer] Toggle Todo\"\n};\n\nexport const VISIBILITY_FILTER_TYPES = {\n    SET: \"[TodoFilterLinksContainer] Set visibility filter\"\n};\n\nexport const PLANS_TYPES = {\n    FETCH_START: \"[TodoPlansConnectedContainer] Fetch start\",\n    FETCH_SUCCESS: \"[TodoPlansConnectedContainer] Fetch success\",\n    FETCH_ERROR: \"[TodoPlansConnectedContainer] Fetch error\"\n};\n","import { generateUniqueId } from \"../../../../common/helpers/helpers\";\nimport { TODOS_TYPES } from \"../actions\";\nimport { TodosState } from \"../state\";\nimport { ITodo } from \"../../../../models/todo.model\";\nimport { TodoActionTypes } from \"../actions/todo.action-type\";\n\nconst initState: TodosState = [\n    {\n        name: \"deeply learn redux\",\n        completed: false,\n        id: generateUniqueId()\n    }\n];\n\nexport default (state = initState, action: TodoActionTypes) => {\n    switch (action.type) {\n        case TODOS_TYPES.TOGGLE: {\n            const { id, completed }: ITodo = action.payload as ITodo;\n\n            return state.map((todo: ITodo) =>\n                todo.id === id ? { ...todo, completed: !completed } : todo\n            );\n        }\n\n        case TODOS_TYPES.ADD: {\n            return [...state, action.payload];\n        }\n\n        default:\n            return state;\n    }\n};\n","import { PLANS_TYPES } from '../actions';\nimport { PlansState } from '../state';\nimport { PlansActionTypes } from '../actions/plans.action-type';\n\nconst initState: PlansState = {\n    isLoading: false,\n    error: {\n        message: '',\n    },\n    plans: {},\n};\n\nexport default (state = initState, action: PlansActionTypes): PlansState => {\n    switch (action.type) {\n        case PLANS_TYPES.FETCH_START: {\n            return { ...state, isLoading: true };\n        }\n\n        case PLANS_TYPES.FETCH_SUCCESS: {\n            const { plans } = action.payload;\n            return { ...state, plans, isLoading: false };\n        }\n\n        case PLANS_TYPES.FETCH_ERROR: {\n            const { error } = action.payload;\n            return { ...state, error, isLoading: false };\n        }\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport todos from \"./todos.reducer\";\nimport visibilityFilter from \"./visibility-filter.reducer\";\nimport plans from \"./plans.reducer\";\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    plans\n});\n","import { VISIBILITY_FILTER_TYPES } from \"../actions\";\nimport { VisibilityFilterState } from \"../state\";\n\nconst initState: VisibilityFilterState = \"All\";\n\nexport default (\n    state = initState,\n    action: { type: string; payload: string }\n) => {\n    switch (action.type) {\n        case VISIBILITY_FILTER_TYPES.SET: {\n            return action.payload;\n        }\n\n        default:\n            return state;\n    }\n};\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\n// имплементация createStore в counter-store.component.tsx\n// Также тут включаю девтулы с редаксом, но при этом надо отключить тут client/src/store/configureStore.js\nconst middlewares = [thunk];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers =\n    process.env.NODE_ENV !== \"production\"\n        ? composeWithDevTools(...enhancers)\n        : compose(applyMiddleware(thunk));\n\nexport const store = createStore(reducers, {}, composedEnhancers);\n","import React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoHeader from \"../components/todo-header.component\";\nimport { addTodo } from \"../store\";\n\nconst TodoHeaderConnectedContainer = ({ dispatch }: any) => (\n    <TodoHeader\n        onClick={currentValue => {\n            dispatch(addTodo(currentValue));\n        }}\n    />\n);\n\n// null в mapStateToProps означает что не надо подписываться на изменения стора\nexport default connect(null, null)(memo(TodoHeaderConnectedContainer));\n","import { TODOS_TYPES } from \"./types\";\nimport { generateUniqueId } from \"../../../../common/helpers/helpers\";\nimport { TodoActionTypes } from \"./todo.action-type\";\n\nexport const toggleTodo = (\n    id: string,\n    completed: boolean\n): TodoActionTypes => ({\n    type: TODOS_TYPES.TOGGLE,\n    payload: {\n        id,\n        completed\n    }\n});\n\nexport const addTodo = (name: string): TodoActionTypes => ({\n    type: TODOS_TYPES.ADD,\n    payload: {\n        name,\n        completed: false,\n        id: generateUniqueId()\n    }\n});\n","import React, { memo } from 'react';\n\nexport type ToDoFilterLinkProps = {\n    children?: any;\n    onClick: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst ToDoFilterLink = ({ children, onClick, ...rest }: ToDoFilterLinkProps) => (\n    <a\n        {...rest}\n        href=\"/\"\n        onClick={e => {\n            e.preventDefault();\n            onClick(e);\n        }}\n    >\n        {children}\n    </a>\n);\n\nexport default memo(ToDoFilterLink);\n","import React, { memo } from \"react\";\nimport ToDoFilterLink from \"./todo-filter-link.component\";\n\nexport interface IToDoFilterLinksProps {\n    currentFilter?: string;\n    onClick: (filterType: string) => void;\n}\n\nconst ToDoFilterLinks = ({ currentFilter, onClick }: IToDoFilterLinksProps) => {\n    const getTodoLinkView = (filterType: string) =>\n        currentFilter === filterType ? (\n            <span>{filterType}</span>\n        ) : (\n            <ToDoFilterLink\n                onClick={() => {\n                    onClick(filterType);\n                }}\n            >\n                {filterType}\n            </ToDoFilterLink>\n        );\n\n    return (\n        <div>\n            Filters:\n            {getTodoLinkView(\"All\")}\n            {getTodoLinkView(\"Completed\")}\n            {getTodoLinkView(\"Active\")}\n            Current filter: <b>{currentFilter}</b>\n        </div>\n    );\n};\n\nexport default memo(ToDoFilterLinks);\n","import React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport ToDoFilterLinks from \"../components/todo-filter-links.component\";\nimport { setVisibilityFilter } from \"../store\";\n\ntype TodoFilterLinksContainerProps = {\n    visibilityFilter: string;\n    onClick: (filterType: string) => void;\n};\n\nconst TodoFilterLinksConnectedContainer = ({\n    visibilityFilter,\n    onClick\n}: TodoFilterLinksContainerProps) => (\n    <ToDoFilterLinks currentFilter={visibilityFilter} onClick={onClick} />\n);\n\nconst mapStateToProps = (state: any) => ({\n    visibilityFilter: state.visibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (filterType: string) => {\n        dispatch(setVisibilityFilter(filterType));\n    }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(memo(TodoFilterLinksConnectedContainer));\n","import { VISIBILITY_FILTER_TYPES } from \"./types\";\n\nexport const setVisibilityFilter = (filter: string) => ({\n    type: VISIBILITY_FILTER_TYPES.SET,\n    payload: filter\n});\n","import React, { memo } from \"react\";\n\nexport interface ITodoProps {\n    completed: boolean;\n    onChange: () => void;\n    name: string;\n}\n\nconst Todo = ({ completed, onChange, name }: ITodoProps) => (\n    <label>\n        <input checked={completed} onChange={onChange} type=\"checkbox\" />\n        <span\n            style={{\n                textDecoration: completed ? \"line-through\" : \"none\"\n            }}\n        >\n            {name}\n        </span>\n    </label>\n);\n\nexport default memo(Todo);\n","import React, { memo } from \"react\";\nimport Todo from \"./todo.component\";\nimport { ITodo } from \"../../../models/todo.model\";\n\nexport interface ITodoListProps {\n    currentFilter: string;\n    todos: React.ReactNode;\n    onChange: (id: string, completed: boolean) => void;\n}\n\nconst TodoList = ({ todos, currentFilter, onChange }: ITodoListProps) => (\n    <ul>\n        {getFilteredTodos(todos, currentFilter).map(\n            ({\n                id,\n                name,\n                completed\n            }: {\n                id: string;\n                name: string;\n                completed: boolean;\n            }) => (\n                <li key={id}>\n                    <Todo\n                        name={name}\n                        completed={completed}\n                        onChange={() => onChange(id, completed)}\n                    />\n                </li>\n            )\n        )}\n    </ul>\n);\n\nexport default memo(TodoList);\n\n// helpers\nfunction getFilteredTodos(todos: any, filter: string) {\n    return todos.filter((todo: ITodo) => {\n        switch (filter) {\n            case \"Completed\": {\n                return todo.completed;\n            }\n\n            case \"Active\": {\n                return !todo.completed;\n            }\n\n            default:\n                return todo;\n        }\n    });\n}\n","import React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport TodoList from \"../components/todo-list.component\";\nimport { selectTodos, selectVisibilityFilter, toggleTodo } from \"../store\";\nimport { TodosAppState } from \"../store/state\";\nimport { ITodo } from \"../../../models/todo.model\";\n\nexport type TodoListContainerProps = {\n    todos: ITodo[];\n    visibilityFilter: string;\n    onChange: (id: string, completed: boolean) => void;\n};\n\nconst TodoListConnectedContainer = ({\n    todos,\n    visibilityFilter,\n    onChange\n}: TodoListContainerProps) => (\n    <TodoList\n        todos={todos}\n        currentFilter={visibilityFilter}\n        onChange={onChange}\n    />\n);\n\n// базовый вариант\n// const mapStateToProps = (state: any) => ({\n//     todos: state.todos,\n//     visibilityFilter: state.visibilityFilter\n// });\n\n// тоже но с селекторами\n// const mapStateToProps = (state: any) => ({\n//     todos: selectTodos(state),\n//     visibilityFilter: selectVisibilityFilter(state)\n// });\n\n// тоже но с createStructuredSelector\nconst mapStateToProps = createStructuredSelector<\n    TodosAppState,\n    { todos: ITodo[]; visibilityFilter: string }\n>({\n    todos: selectTodos,\n    visibilityFilter: selectVisibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onChange: (id: string, completed: boolean) => {\n        dispatch(toggleTodo(id, completed));\n    }\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(memo(TodoListConnectedContainer));\n","import { TodosAppState } from \"../state\";\n\nexport const selectTodos = (state: TodosAppState) => state.todos;\n","import { TodosAppState } from \"../state\";\n\nexport const selectVisibilityFilter = (state: TodosAppState) =>\n    state.visibilityFilter;\n","import React, { memo } from \"react\";\nimport { IPlans } from \"../../../../models/plans.model\";\nimport { IPlan } from \"../../../../models/plan.model\";\n\nconst TodoPlans = ({ plans }: IPlans) => (\n    <>\n        <ul>\n            {Object.keys(plans).map((planId: string, index: number) => {\n                const { name, completed }: IPlan = plans[planId];\n                return (\n                    <li key={index}>\n                        Name: {name} Completed: {completed}\n                    </li>\n                );\n            })}\n        </ul>\n    </>\n);\n\nexport default memo(TodoPlans);\n","import React, { memo, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodoPlans, store } from '../store';\nimport TodoPlans from '../components/plans/todo-plans.component';\nimport { TodosAppState } from '../store/state';\nimport { ISimpleMap } from '../../../models/simple-map.model';\nimport { IPlan } from '../../../models/plan.model';\nimport MaterialLoader from '../../loader/MaterialLoader';\nimport customAxios from '../../../common/api/axios';\nimport { CancelTokenSource } from 'axios';\n\nconst TodoPlansConnectedContainer = ({\n    plans,\n    isLoading,\n    fetchTodoPlans\n}: {\n    plans: ISimpleMap<IPlan>;\n    isLoading: boolean;\n    fetchTodoPlans: (cancelToken: CancelTokenSource) => void;\n}) => {\n    useEffect(() => {\n        const cancelRemoveSkillRequest = customAxios.CancelToken.source() as CancelTokenSource;\n\n        fetchTodoPlans(cancelRemoveSkillRequest);\n\n        return () => cancelRemoveSkillRequest.cancel('TodoPlansConnectedContainer fetchTodoPlans canceled');\n    }, [fetchTodoPlans]);\n\n    return isLoading ? <MaterialLoader /> : <TodoPlans plans={plans} />;\n};\n\nconst mapStateToProps = (state: TodosAppState) => {\n    return {\n        plans: state.plans.plans,\n        isLoading: state.plans.isLoading\n    };\n};\n\nconst mapDispatchToProps = (dispatch: typeof store.dispatch) => ({\n    fetchTodoPlans: (cancelFetchSkillRequest: any) => {\n        dispatch(fetchTodoPlans(cancelFetchSkillRequest.token) as any);\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(TodoPlansConnectedContainer));\n","import { PLANS_TYPES } from \"./types\";\nimport customAxios from \"../../../../common/api/axios\";\n\nexport const fetchTodoPlans = (cancelToken: any) => async (dispatch: any) => {\n    dispatch({\n        type: PLANS_TYPES.FETCH_START\n    });\n\n    try {\n        const { data: plans } = await customAxios.get(\"/plans\", {\n            cancelToken\n        });\n\n        dispatch({\n            type: PLANS_TYPES.FETCH_SUCCESS,\n            payload: {\n                plans\n            }\n        });\n    } catch ({ message }) {\n        dispatch({\n            type: PLANS_TYPES.FETCH_ERROR,\n            payload: {\n                error: message\n            }\n        });\n    }\n};\n","import React, { memo } from \"react\";\nimport { Provider } from \"react-redux\";\nimport TodoHeaderConnectedContainer from \"./containers/todo-header-connected-container.component\";\nimport TodoFilterLinksConnectedContainer from \"./containers/todo-filter-links-connected-container.component\";\nimport TodoListConnectedContainer from \"./containers/todo-list-connected-container.component\";\nimport TodoPlansConnectedContainer from \"./containers/todo-plans-connected-container.component\";\nimport { store } from \"./store\";\n\nconst Todos: React.FC = () => (\n    // в TodoStore лежит редакс сделанный с нуля с исходным кодом\n    // <TodoStore />\n    <Provider store={store}>\n        <section style={{ marginBottom: \"20px\" }}>\n            <TodoPlansConnectedContainer />\n        </section>\n        <TodoHeaderConnectedContainer />\n        <TodoFilterLinksConnectedContainer />\n        <TodoListConnectedContainer />\n    </Provider>\n);\n\nexport default memo(Todos);\n","import React, { memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { sagaGetUserStartAction } from \"../../../store/actions\";\nimport MaterialLoaderComponent from \"../../loader/MaterialLoader\";\n\nconst ReduxSagaIntroComponent = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => state.saga);\n\n    return (\n        <>\n            <button type=\"button\" onClick={() => dispatch(sagaGetUserStartAction())}>\n                Get user\n            </button>\n            {users.loading && <MaterialLoaderComponent />}\n            {!users.loading &&\n                users?.entities?.users?.length &&\n                users?.entities?.users.map(({ id, name }) => {\n                    return <div key={id}>{name}</div>;\n                })}\n        </>\n    );\n};\n\nexport default memo(ReduxSagaIntroComponent);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFamilyAction } from '../../../store/actions';\n\nconst FamilySagaComponent = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <button type=\"button\" onClick={() => dispatch(getFamilyAction())}>\n            Get family\n        </button>\n    );\n};\n\nexport default memo(FamilySagaComponent);\n","import React, { memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SAGA_TYPES } from \"../../../store/actions/types\";\n\nconst SagaCounterComponent = () => {\n    const sagaState = useSelector(state => state.saga);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {sagaState.counter}\n            <button type=\"button\" onClick={() => dispatch({ type: SAGA_TYPES.INCREMENT_COUNTER })}>\n                Increment counter\n            </button>\n            <button type=\"button\" onClick={() => dispatch({ type: SAGA_TYPES.DECREMENT_COUNTER })}>\n                Decrement counter\n            </button>\n        </>\n    );\n};\n\nexport default memo(SagaCounterComponent);\n","import React, { memo } from \"react\";\nimport { TabsComponent } from \"../tabs/Tabs\";\nimport ReduxSagaIntroComponent from \"./intro/redux-saga-intro.component\";\nimport FamilySagaComponent from \"./family/family-saga.component\";\nimport SagaCounterComponent from \"./counter/saga-counter.component\";\n\nconst ReduxSaga = () => {\n    return (\n        <>\n            <TabsComponent>\n                <div tabName=\"Counter\">\n                    <SagaCounterComponent />\n                </div>\n                <div tabName=\"Intro\">\n                    <ReduxSagaIntroComponent />\n                </div>\n                <div tabName=\"Family\">\n                    <FamilySagaComponent />\n                </div>\n            </TabsComponent>\n        </>\n    );\n};\n\nexport default memo(ReduxSaga);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PostsAndUsers from \"../posts-and-users/PostsAndUsers\";\nimport PostList from \"../post/PostList\";\nimport SongList from \"../song/SongList\";\nimport FrameworkList from \"../framework/FrameworkList\";\nimport MainMenu from \"../menu/MainMenu\";\nimport UserListHooks from \"../user/UserListHooks\";\nimport Counters from \"../counter/counters.component\";\nimport Todos from \"../todo/todos.component\";\nimport ReduxSaga from \"../redux-saga/redux-saga.component\";\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <>\n                <MainMenu\n                    exact\n                    routes={[\n                        { to: \"/redux\", title: \"Sagas\" },\n                        { to: \"/redux/todos\", title: \"Todos\" },\n                        { to: \"/redux/counters\", title: \"Counters\" },\n                        { to: \"/redux/song-list\", title: \"SongList\" },\n                        {\n                            to: \"/redux/posts-and-users\",\n                            title: \"PostsAndUsers\"\n                        },\n                        { to: \"/redux/post-list\", title: \"PostList\" },\n                        { to: \"/redux/framework-list\", title: \"FrameworkList\" },\n                        { to: \"/redux/user-list\", title: \"UserList\" }\n                    ]}\n                />\n\n                <Switch>\n                    <Route path=\"/redux\" exact component={ReduxSaga} />\n                    <Route path=\"/redux/todos\" exact component={Todos} />\n                    <Route path=\"/redux/counters\" exact component={Counters} />\n                    <Route path=\"/redux/song-list\" exact component={SongList} />\n                    <Route path=\"/redux/posts-and-users\" exact component={PostsAndUsers} />\n                    <Route path=\"/redux/post-list\" exact component={PostList} />\n                    <Route path=\"/redux/framework-list\" exact component={FrameworkList} />\n                    <Route path=\"/redux/user-list\" exact component={UserListHooks} />\n                </Switch>\n            </>\n        );\n    }\n}\n","import React, { memo } from \"react\";\nimport { ReduxComponent } from \"../components/redux/Redux\";\n\nexport default memo(() => {\n    return (\n        <>\n            <ReduxComponent />\n        </>\n    );\n});\n"],"sourceRoot":""}