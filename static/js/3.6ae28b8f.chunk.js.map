{"version":3,"sources":["firebase/firebase.utils.js","components/imports/data.js","components/search/SearchBar.js","components/search/SearchList.js","components/forms/Forms.js","components/jsx/JsxList.js","components/jsx/JsxFragment.js","components/jsx/JsxExamples.js","components/forms/ReduxForm.js","components/comment/Comment.js","components/content-projection/ContentProjectionContent.js","components/content-projection/ContentProjection.js","components/imports/Imports.js","components/parent/ChildClass.js","components/parent/ChildFunction.js","components/parent/Parent.js","components/dom-ref/DomRefImage.js","components/rest-api/RestApi.js","components/lifecycle-hooks/LifecycleChild.js","components/lifecycle-hooks/LifecycleChildHooks.js","components/lifecycle-hooks/LifecycleParent.js","components/lifecycle-hooks/LifecycleHooks.js","components/class-based/ClassBased.js","components/comment/CommentList.js","components/async-set-state/AsyncSetState.js","pages/ReactPage.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompts","signInWithGoogle","signInWithPopup","createUserProfileDocument","_ref","Object","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_max_projects_react_main_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","userAuth","additionalData","userRef","displayName","email","createdAt","wrap","_context","prev","next","abrupt","doc","concat","uid","get","sent","exists","Date","set","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","t0","console","log","message","stop","this","_x","_x2","apply","arguments","__webpack_require__","r","__webpack_exports__","arr","SearchBarComponent","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","checkboxValue","selectValue","textareaValue","radioValue","dateValue","onInputChange","event","setState","target","value","props","onInput","onCheckboxChange","checked","onSelectChange","onTextareaChange","onRadioChange","onDateChange","onFormSubmit","preventDefault","inherits","createClass","key","_this$state","stringifiedState","JSON","stringify","react_default","createElement","onSubmit","className","onChange","type","children","cols","rows","name","Component","SearchListComponent","items","map","id","age","getSearchListBody","FormsComponent","filteredItems","isFamilyLoading","cancelGetFamilyRequest","filter","toLowerCase","includes","_componentDidMount","asyncToGenerator","regenerator_default","_ref2","customAxios","CancelToken","source","cancelToken","token","data","slice","renderContent","renderLoader","cancel","SearchBar_SearchBarComponent","SearchList_SearchListComponent","style","transform","MaterialLoader","JsxListComponent","family","member","FamilyMember","occupation","Fragment","JsxFragment","prop1","prop2","jsx_JsxExamples","backgroundColor","color","htmlFor","ReduxForm","renderInput","input","meta","label","mandatory","inputClassName","visited","error","form","renderMandatory","assign","autoComplete","formValues","_this$props","handleSubmit","valid","Field","component","disabled","reduxForm","validate","errors","title","comment_Comment","content","date","img","loading","src","alt","content_projection_ContentProjectionContent","content_projection_ContentProjection","projectFromProp","marginRight","_callee2","_context2","require","ChildClass","string","obj","propFromRestOperator","truthy","tabIndex","ChildFunction","onClick","onPointerUp","defaultProps","LifecycleChild","nextProps","nextState","nextContext","prop","LifecycleChildHooks","useEffect","LifecycleParent","changeProp","prevProp","changeProp1","LifecycleChild_LifecycleChild","latitude","longitude","errorMessage","randomProp","_this2","success","coords","prevState","prevProps","e","navigator","geolocation","getCurrentPosition","watchPosition","clearWatch","defaultProp","position","pointerEvents","ReactPage","Tabs","tabName","components_forms_ReduxForm","Forms_FormsComponent","JsxList_JsxListComponent","d"],"mappings":"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","file":"static/js/3.6ae28b8f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// ключ забрал тут https://console.firebase.google.com/project/react-main-1006-8eae6/settings/general/web:Y2ZhNGQ3YWQtMmY2My00NDgxLTk2ZTktMzlkZTQ3ZTA1ZjI2\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDEzBGwxj8YJjznHn9G0giS0bVP3AuUUHs\",\n    authDomain: \"react-main-1006-8eae6.firebaseapp.com\",\n    databaseURL: \"https://react-main-1006-8eae6.firebaseio.com\",\n    projectId: \"react-main-1006-8eae6\",\n    storageBucket: \"react-main-1006-8eae6.appspot.com\",\n    messagingSenderId: \"561046526414\",\n    appId: \"1:561046526414:web:f7fbfe689f187e68eef39f\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// настраиваю сервис для работы с auth\nconst provider = new firebase.auth.GoogleAuthProvider();\n// есть куча видов попапов в данному случае беру гугловый\nprovider.setCustomParameters({prompts: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = await userRef.get();\n\n    if (!snapshot.exists) {\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (e) {\n            console.log(\"createUserProfileDocument error \", e.message);\n        }\n    }\n\n    return userRef;\n};\n\n\n\n// если вдруг извне понадобится вся либа\nexport default firebase;\n","const arr = [1,2,3];\n\nexport default arr;\n","import React, {Component} from 'react';\nimport './SearchBar.scss';\n\n// все event которые передаются, в реакт оборачиваются в SyntheticEvent для косистенси, к примеру onChange работает\n// на всех контролах при их изменении.\n\n// также в <select> появляется атрибут value, в который можно проставить инит стейт\n\n// В реакт существуют controlled и uncontrolled form элементы. Разница в том, что controlled элемент всегда хранит\n// стейт и в каждый момент времени мы можем сказать какой стейт у компонента, поэтому храню в стейте состояние контролов\nexport class SearchBarComponent extends Component {\n    state = {\n        inputValue: '',\n        checkboxValue: false,\n        selectValue: '2',\n        textareaValue: '',\n        radioValue: '1',\n        dateValue: '2019-10-06' // always to YYYY-MM-DD\n    };\n\n    onInputChange = (event) => {\n        this.setState({\n            inputValue: event.target.value\n        });\n\n        this.props.onInput(event);\n    };\n\n    onCheckboxChange = (event) => {\n        this.setState({\n            checkboxValue: event.target.checked\n        });\n        console.log(\"onCheckboxChange \", event.target.checked);\n    };\n\n    onSelectChange = (event) => {\n        this.setState({\n            selectValue: event.target.value\n        });\n        console.log(\"onSelectChange \", event.target.value);\n    };\n\n    onTextareaChange = (event) => {\n        console.log(\"onTextareaChange \", event.target.value);\n        this.setState({\n            textareaValue: event.target.value\n        });\n    };\n\n    onRadioChange = (event) => {\n        console.log(\"onRadioChange \", event.target.value);\n        this.setState({\n            radioValue: event.target.value\n        });\n    };\n\n    onDateChange = (event) => {\n        console.log(\"onDateChange \", event.target.value);\n        this.setState({\n            dateValue: event.target.value\n        });\n    };\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('onFormSubmit ', this.state);\n    }\n\n    // onChange: Fires when there’s a change in any of the form’s input elements.\n    // так как onChange это обертка надо onInput команда реакта советует использовать\n    // onChange который срабатывает при каждом изменении каждого контрола\n    render() {\n        const {inputValue, checkboxValue, selectValue, textareaValue, radioValue, dateValue} = this.state;\n        const stringifiedState = JSON.stringify(this.state);\n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <div className=\"search-bar\">\n                    <input\n                        className=\"search-bar__input\"\n                        value={inputValue}\n                        onChange={this.onInputChange}\n                        type=\"text\"\n                    />\n                    {this.props.children}\n                    <br/>\n                    <input\n                        className=\"search-bar__input\"\n                        onChange={this.onCheckboxChange}\n                        type=\"checkbox\"\n                        checked={checkboxValue}\n                    />\n                    <br/>\n                    <select\n                        value={selectValue}\n                        onChange={this.onSelectChange}\n                    >\n                        <option value=\"1\">option 1</option>\n                        <option value=\"2\">option 2</option>\n                        <option value=\"3\">option 3</option>\n                    </select>\n                    <br/>\n                    <textarea\n                        cols=\"30\"\n                        rows=\"10\"\n                        onChange={this.onTextareaChange}\n                        value={textareaValue}\n                    />\n                    <br/>\n                    <input type=\"radio\" name=\"test\" value=\"1\" checked={radioValue === '1'}\n                           onChange={this.onRadioChange}/>radio 1\n                    <br/>\n                    <input type=\"radio\" name=\"test\" value=\"2\" checked={radioValue === '2'}\n                           onChange={this.onRadioChange}/>radio 2\n                    <br/>\n                    <input type=\"radio\" name=\"test\" value=\"3\" checked={radioValue === '3'}\n                           onChange={this.onRadioChange}/>radio 3\n                    <br/>\n                    <input\n                        type=\"date\"\n                        value={dateValue}\n                        onChange={this.onDateChange}\n                    />\n                </div>\n\n                <p>{stringifiedState}</p>\n            </form>\n        );\n    }\n\n}\n","import React, {Component} from 'react';\nimport './SearchList.scss';\n\nexport class SearchListComponent extends Component {\n\n    getSearchListBody() {\n        return this.props.items.map(({id, name, age}) => {\n            return (\n                <li\n                    className=\"search-list__item\"\n                    key={id}\n                >\n                    {name} {age}\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <ul className=\"search-list\">\n                {this.getSearchListBody()}\n            </ul>\n        );\n    }\n\n}\n","import React, {Component} from 'react';\nimport {SearchBarComponent} from \"../search/SearchBar\";\nimport {SearchListComponent} from \"../search/SearchList\";\nimport MaterialLoader from \"../loader/MaterialLoader\";\nimport customAxios from \"../../common/api/axios\";\n\nexport class FormsComponent extends Component {\n\n    state = {\n        items: [],\n        filteredItems: [],\n        isFamilyLoading: false,\n    };\n\n    cancelGetFamilyRequest = null;\n\n    async componentDidMount() {\n        // Promise variant\n        // try {\n        //     const family = await fetch('http://localhost:3001/api/family');\n        //     const items = await family.json();\n        //\n        //     const filteredItems = items.slice();\n        //\n        //     this.setState({\n        //         items, filteredItems\n        //     });\n        // } catch (e) {\n        //     console.log('FormsComponent componentDidMount fetch(\\'http://localhost:3001/api/articles\\') error', e);\n        // }\n\n        // axios variant\n        this.cancelGetFamilyRequest = customAxios.CancelToken.source();\n\n        try {\n            const {data: items} = await customAxios.get('/family',{\n                cancelToken: this.cancelGetFamilyRequest.token\n            });\n            const filteredItems = items.slice();\n\n            this.setState({\n                items, filteredItems, isFamilyLoading: true\n            });\n        } catch (e) {\n            console.log('FormsComponent componentDidMount fetch /family error', e);\n        }\n    }\n\n    onInput = (event) => {\n        const filteredItems = this.state.items.filter(({name}) => name.toLowerCase().includes(event.target.value.toLowerCase()));\n        this.setState({ filteredItems });\n    };\n\n    render() {\n        return this.state.isFamilyLoading\n            ? this.renderContent()\n            : this.renderLoader();\n    }\n\n    componentWillUnmount() {\n        // убиваю реквест через axios\n        this.cancelGetFamilyRequest.cancel('http://localhost:3001/api/family canceled');\n    }\n\n    renderContent() {\n        return (\n            <SearchBarComponent onInput={this.onInput}>\n                <SearchListComponent items={this.state.filteredItems} />\n            </SearchBarComponent>\n        )\n    }\n\n    renderLoader() {\n        return (\n            <div\n                style={{\n                    transform: 'scale3d(0.8, 0.8, 0.8)'\n                }}\n            >\n                <MaterialLoader message=\"Loading family\"/>\n            </div>\n        )\n    }\n\n}\n","import customAxios from \"../../common/api/axios\";\nimport React, {Component} from 'react';\n\nexport class JsxListComponent extends Component {\n    state = {\n        family: []\n    };\n\n    async componentDidMount() {\n        this.cancelGetFamilyRequest = customAxios.CancelToken.source();\n\n        try {\n            const {data: family} = await customAxios.get('/family',{\n                cancelToken: this.cancelGetFamilyRequest.token\n            });\n\n            this.setState({\n                family\n            });\n        } catch (e) {\n            console.log(\"JsxListComponent get('/family'... \", e);\n        }\n    }\n\n    componentWillUnmount() {\n        this.cancelGetFamilyRequest.cancel(\"JsxListComponent get('/family'... canceled\");\n    }\n\n    // Тут классный пример деструктуризации входных свойств\n    render() {\n        return (\n            <ul>\n            {\n                this.state.family.map(member => <li key={member.id}><FamilyMember {...member}/></li>)\n            }\n            </ul>\n        );\n    }\n\n}\n\nfunction FamilyMember({name, age, occupation}) {\n    return (\n        <>\n            Name: {name}, age: {age}, occupation: {occupation}\n        </>\n    );\n}\n","import React from 'react';\n\nexport default ({prop1, prop2}) => {\n    // пример синтаксиса если надо вернуть multiple elements\n    // <></> - shortcut for <React.Fragment></React.Fragment>\n    return (\n        <>\n            <li>{prop1}</li>\n            <li>{prop2}</li>\n        </>\n    );\n}\n","import React from 'react';\nimport './JsxExamples.css';\n\nexport default () => {\n    const buttonText = \"Click me\";\n    const inlineStyles = { backgroundColor: '#e8f3e8', color: '#333' };\n\n    return (\n        <div>\n            <h3>Differences from html</h3>\n            <ol>\n                <li className=\"jsx-example__list-item\">\n                    {/*двойные стили пишу camelCase*/}\n                    <div style={{ backgroundColor: '#e8f3e8', color: '#333' }}>Inline styles</div>\n                    <div style={inlineStyles}>Inline styles2</div>\n                </li>\n                <li className=\"jsx-example__list-item\">\n                    {/*className вместо class, htmlFor instead of for*/}\n                    <div className={\"_modifier\"}>className instead of class</div>\n                    {/*так тоже работает но выдает ошибку с ворнингом*/}\n                    {/*<div class={\"_modifier\"}>class inside JSX also works</div>*/}\n                    <label htmlFor=\"name\">htmlFor instead of for</label>\n                    <input type=\"text\" id='name'/>\n                </li>\n                <li className=\"jsx-example__list-item\">\n                    Variables in JSX\n                    <button type=\"button\">{buttonText}</button>\n                </li>\n            </ol>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport './ReduxForm.scss';\n\nclass ReduxForm extends Component {\n    // label прокинут из label={\"Enter title\"}\n    renderInput = ({input, meta, label, mandatory}) => {\n        // console.log(\"control \", input); // инфа о контроле\n        // console.log(\"metaInfo \", meta); // инфа о метадате\n\n        const inputClassName = `redux-form__input ${meta.visited && meta.error ? '_error' : ''}`;\n\n        return (\n            <>\n                {/*<input type=\"text\" onChange={control.onChange} value={control.value}/>*/}\n                {/*тоже что и*/}\n                <div className=\"redux-form__field\"\n                >\n                    <label\n                        htmlFor={meta.form + input.name}>\n                        {label}\n                        {this.renderMandatory(mandatory)}\n                    </label>\n                    <input\n                        autoComplete=\"off\"\n                        id={meta.form + input.name}\n                        type=\"text\"\n                        {...input}\n                        className={inputClassName}\n                    />\n                    <p className=\"redux-form__error-message\">\n                        {meta.visited && meta.error}\n                    </p>\n                </div>\n            </>\n        );\n    };\n\n    renderMandatory = (mandatory) => {\n        return mandatory ? <sup style={{color: 'darkRed'}}>*</sup> : null;\n    };\n\n    onSubmit(formValues) {\n        console.log(\"formValues \", formValues);\n    }\n\n    render() {\n        console.log(\"reduxForm props \", this.props);\n\n        const {handleSubmit, valid} = this.props;\n\n        return (\n            <form onSubmit={handleSubmit(this.onSubmit)}>\n                {/*name - обязательное имя филда*/}\n                <Field name=\"title\" component={this.renderInput} label={\"Enter title\"} mandatory/>\n                <Field name=\"description\" component={this.renderInput} label={\"Enter description\"}/>\n                <button type=\"submit\" disabled={!valid}>Submit</button>\n            </form>\n        );\n    }\n}\n\n\n// Валидация\n// если вернуть пустой объект то форма валидна\n// для ошибки возвращаю объект с ключ значение, где ключ - имя поля, значение error message\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = \"title should be filled\"\n    }\n\n    return errors;\n};\n\n\n// после того как сконнектил этот компонент с формой у него появилась куча свойств\nexport default reduxForm({\n    // тут указываю название формы\n    form: \"reduxFormSample\",\n    validate\n})(ReduxForm);\n","import React from 'react';\nimport './Comment.scss';\n\nexport default ({name, content, date, img, id}) => {\n    return (\n        <li className=\"comment\">\n            <div className=\"comment__col _margin-right-s\">\n                <div className=\"comment__image\">\n                    <img loading=\"lazy\" src={img} alt=\"\" className=\"comment__image-img\"/>\n                </div>\n            </div>\n            <div className=\"comment__col\">\n                <div className=\"comment__row\">\n                    <div className=\"comment__name\">{name}</div>\n                    <div className=\"comment__date\">{date}</div>\n                </div>\n                <div className=\"comment__row\">\n                    <div className=\"comment__content\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        </li>\n    );\n}\n","import React from 'react';\nimport './ContentProjectionContent.scss';\n\nexport default ({content}) => {\n    return (\n        <div className=\"content-projection-content\">\n            {content}\n        </div>\n    );\n}\n","import React from 'react';\nimport './ContentProjection.scss';\n\n// посмотреть использование можно в CommentList.js\nexport default ({projectFromProp, children}) => {\n    return (\n        <div className=\"content-projection\">\n            {projectFromProp}\n            <div className=\"content-projection__content\">{children}</div>\n            <div className=\"content-projection__action-panel\">\n                <div className=\"content-projection__approve\">\n                    <button type=\"button\" style={{color: 'white', backgroundColor: 'green', marginRight: '30px'}}>Approve</button>\n                </div>\n                <div className=\"content-projection__reject\">\n                    <button type=\"button\" style={{color: 'white', backgroundColor: 'red'}}>Reject</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default () => {\n    const getData = async () => {\n        const data = await import(\"./data.js\");\n        console.log(data.default);\n    };\n\n    return (\n        <>\n            \"Example of dynamic imports from files\"\n            <div onClick={getData}>Get data</div>\n        </>\n    )\n};\n\n(async () => {\n    let data = await require(\"./data.js\");\n    console.log(\"data from dynamic import \", data);\n})();\n","import React, {Component} from \"react\";\n\nexport class ChildClass extends Component {\n\n    render() {\n        const {string, obj, propFromRestOperator, truthy} = this.props;\n\n        return (\n            <div>\n                <div tabIndex={1}>\n                    string: {string} <br/>\n                    obj: {JSON.stringify(obj)}<br/>\n                    propFromRestOperator: {propFromRestOperator}<br/>\n                    truthy: {truthy + ''}\n                </div>\n            </div>\n        );\n    }\n\n}\n","import React from \"react\";\n\nexport default function ChildFunction({string, obj, propFromRestOperator, onClick, truthy}) {\n    return (\n        <div onPointerUp={onClick}>\n            string: {string} <br/>\n            obj: {JSON.stringify(obj)}<br/>\n            propFromRestOperator: {propFromRestOperator}<br />\n            truthy: {truthy + ''}\n        </div>\n    );\n}\n\nChildFunction.defaultProps = {\n    string: \"default\"\n};\n","import React, {Component} from \"react\";\nimport {ChildClass} from \"./ChildClass\";\nimport ChildFunction from \"./ChildFunction\";\n\nexport class Parent extends Component {\n    state = {\n        inputValue: \"\"\n    };\n\n    onClick = (event) => {\n        console.log(event.target);\n    };\n\n    // блюр всплывет (фича реакта) из ChildClass\n    onBlur = (e) => {\n        console.log(\"e.relatedTarget \", e.relatedTarget);\n        console.log(\"e.target \", e.target);\n    };\n\n    render() {\n        const string = \"Max\";\n        const obj = {prop: 1};\n        const rest = {propFromRestOperator: \"prop from rest\"};\n\n        return (\n            <>\n                <div onBlur={this.onBlur}>\n                    {/*это только пример асинхронности settState, вторым аргументом он принимает функцию, которая выполнится\n                    когда выполнится setState*/}\n                    <input type=\"text\" onChange={(e) => {\n                        const value = e.target.value;\n                        // первый вэлью не появится в консоли так как setState асинхронная,\n                        // чтобы получить актуальное значение использую второй аргумент - функцию\n                        this.setState({inputValue: e.target.value}, () => console.log(\"second arg in setState \",this.state, value));\n                        console.log(\"synchronous log after setState \", this.state, value);\n                    }}/>\n                    {/*truthy без value значит truthy=true*/}\n                    <ChildClass truthy string={string} obj={obj} {...rest} />\n                    <ChildFunction truthy obj={obj} {...rest} onClick={this.onClick}/>\n                    <div onClick={this.onClick}>Cant click on Component itself but can on node</div>\n                </div>\n            </>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './DomRefImage.scss';\n\nexport class DomRefImageComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        // так создаю референс на дом структуру\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.onload = () => {\n            this.imageRef.current.style.gridRowEnd = 'span ' + this.imageRef.current.clientHeight;\n        }\n    }\n\n    render() {\n        const {styleClass, image} = this.props;\n        const className = `dom-ref-image ${styleClass || ''}`;\n\n        return (\n            <img\n                loading=\"lazy\"\n                ref={this.imageRef}\n                alt={image}\n                className={className}\n                src={image}\n            />\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport customAxios from \"../../common/api/axios\";\n\nexport class RestApiComponent extends Component {\n    state = {\n        items: [],\n    };\n\n    cancelGetFamilyRequest = null;\n\n    async componentDidMount() {\n        // Promise variant\n        // try {\n        //     const family = await fetch('http://localhost:3001/api/family');\n        //     const items = await family.json();\n        //\n        //     const filteredItems = items.slice();\n        //\n        //     this.setState({\n        //         items, filteredItems\n        //     });\n        // } catch (e) {\n        //     console.log('FormsComponent componentDidMount fetch(\\'http://localhost:3001/api/articles\\') error', e);\n        // }\n\n        // axios variant\n        this.cancelGetFamilyRequest = customAxios.CancelToken.source();\n\n        try {\n            const {data: items} = await customAxios.get('/family',{\n                cancelToken: this.cancelGetFamilyRequest.token\n            });\n\n            this.setState({\n                items\n            });\n        } catch (e) {\n            console.log('FormsComponent componentDidMount fetch(\\'http://localhost:3001/api/articles\\') error', e);\n        }\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.state.items.map(({id, name, age}) => {\n                    return (\n                        <li key={id}>{name} {age}</li>\n                    );\n                })}\n            </ul>\n        );\n    }\n\n    componentWillUnmount() {\n        // убиваю реквест через axios\n        this.cancelGetFamilyRequest.cancel('http://localhost:3001/api/family canceled');\n    }\n}\n","import {Component} from 'react';\n\n/*\nТак как этот компонент зависит только от входящего свойства prop, но при этом перерендериваться будет каждый раз когда\nизменится стейт у родителя, чтобы этого избежать говорю ему перерендериваться только когда изменится входящий prop\nТеперь render() будет вызываться только когда у этого компонента изменится this.props.prop.\n*/\nexport class LifecycleChild extends Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.prop !== this.props.prop;\n    }\n\n    render() {\n        console.log(\"LifecycleChild rendered\");\n\n        return (\n            \"LifecycleChild\"\n        )\n    }\n}\n","import {useEffect} from \"react\";\n\nexport default ({prop}) => {\n    // будет выполняться каждый раз при изменении стейта родителя\n    console.log(\"LifecycleChildHooks rendered\");\n\n    // выполнится лишь при изменении prop\n    useEffect(() => {\n        console.log(\"LifecycleChildHooks useEffect rendered\");\n    }, [prop]);\n\n    return \"LifecycleChildHooks\";\n}\n","import React, {Component} from 'react';\nimport {LifecycleChild} from \"./LifecycleChild\";\nimport LifecycleChildHooks from \"./LifecycleChildHooks\";\n\n// Тут показываю пример оптимизации чайлдовой компоненты, которая по умолчанию перерендеривается каждый раз когда меняется стейт у родителя, но у родителя стейт может меняться по куче причин, а чайлду интересно перерендериваться только когда поменяется входящий prop, а не prop1, поэтому запрещаю чайлду ререндеринг по умолчанию, а только в случае изменения this.state.prop (см. LifecycleChild)\nexport class LifecycleParent extends Component {\n    state = {\n        prop: 1,\n        prop1: 1,\n    };\n\n    changeProp = () => {\n        this.setState(({prop}, prevProp) => ({\n            prop: ++prop\n        }))\n    };\n\n    changeProp1 = () => {\n        this.setState(({prop1}, prevProp) => ({\n            prop1: ++prop1\n        }))\n    };\n\n    render() {\n        return (\n            <>\n                <p>\n                    <button type=\"button\" style={{marginRight: \"20px\"}} onClick={this.changeProp}>Change prop</button>\n                    <button type=\"button\" onClick={this.changeProp1}>Change prop1</button>\n                </p>\n                <LifecycleChild {...this.state}/>\n                <LifecycleChildHooks {...this.state}/>\n            </>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport {LifecycleParent} from \"./LifecycleParent\";\n\n// constructor\n// render\n// componentDidMount\n\nexport class LifecycleHooksComponent extends Component {\n    state= {\n        prop: null\n    };\n\n    // в случае если нужно засетить initial state, делаю это в конструкторе\n    //\n    // Конструктор нужен для:\n    // 1) Initializing local state by assigning an object to this.state.\n    // 2) Binding event handler methods to an instance.\n    //\n    // You should not call setState() in the constructor().\n    // Instead, if your component needs to use local state,\n    // assign the initial state to this.state directly in the constructor:\n    constructor(props) {\n        super(props);\n        console.log(\"constructor\");\n\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        // setTimeout(() => {this.setState((prevState, prevProps) => ({prop: 1}))}, 1000);\n        // setTimeout(() => {this.setState((prevState, prevProps) => ({prop: 2}))}, 2000);\n        // setTimeout(() => {this.setState((prevState, prevProps) => ({prop: 3}))}, 3000);\n\n        // При вызове forceUpdate вызовется:\n        // render затем componentDidUpdate затем forceUpdate cb\n        // setTimeout(() => {this.forceUpdate(_ => console.log('forceUpdate'))}, 4000);\n\n        // пример прямого биндинга стейта и обработки cb\n        // this.state = { counter: 0 };\n        // this.handleClick = this.handleClick.bind(this);\n    }\n\n    // Тут работаю с домом, например чтобы посчитать позицию и проставить в стейт.\n    // Тут загружаю дату и делаю рест запросы, тут а не в конструкторе, для консистенси\n    // Апдейт стейта тут вызовет render второй раз, но на экране не появится 2 разных стейта, только последний (это микротаск)\n    // Срабоатает сразу перед репейнтом\n    // Avoid introducing any side-effects or subscriptions in the constructor.\n    // For those use cases, use componentDidMount() instead.\n    componentDidMount() {\n        console.log(\"componentDidMount\");\n    }\n\n    // Использую если необходимо апдейтить стейт на основе изменений дома, обязательно с условием см ниже\n    // Либо когда надо делать запросы на сервер при изменении входных пропертей, обязательно с условием см ниже\n    // Use this as an opportunity to operate on the DOM when the component has been updated.\n    // This is also a good place to do network requests as long as you compare the current props to previous props\n    // (e.g. a network request may not be necessary if the props have not changed).\n    // ex.: componentDidUpdate(prevProps) {\n    //     // Typical usage (don't forget to compare props):\n    //     if (this.props.userID !== prevProps.userID) {\n    //         this.fetchData(this.props.userID);\n    //     }\n    // }\n    // Вызывается после render метода (когда поменяется стейт у родителя), либо когда поменяется стейт у этого компонента\n    // componentDidUpdate() will not be invoked if shouldComponentUpdate() returns false.\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"componentDidUpdate\");\n    }\n\n    // если вызову shouldComponentUpdate и он вернет фолс, то componentDidUpdate вызываться не будет\n    // чтобы вызвать насильно ;) вызываю this.forceUpdate(_ => console.log('forceUpdate'))\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     if (nextState.prop === 1) {\n    //         this.forceUpdate((nextProps, nextState) => console.log('forceUpdate'));\n    //     }\n    //     return true;\n    // }\n\n    // clear everything\n    componentWillUnmount() {\n        console.log(\"componentWillUnmount\");\n    }\n\n    // The render() method is the only required method in a class component.\n    //\n    // When called, it should examine this.props and this.state and return one of the following types:\n    //\n    //     React elements. Typically created via JSX. For example, <div /> and <MyComponent /> are React elements that instruct React to render a DOM node, or another user-defined component, respectively.\n    // Arrays and fragments. Let you return multiple elements from render. See the documentation on fragments for more details.\n    // Portals. Let you render children into a different DOM subtree. See the documentation on portals for more details.\n    // String and numbers. These are rendered as text nodes in the DOM.\n    // Booleans or null. Render nothing. (Mostly exists to support return test && <Child /> pattern, where test is boolean.)\n    // The render() function should be pure, meaning that it does not modify component state, it returns the same result each time it’s invoked, and it does not directly interact with the browser.\n    //\n    // If you need to interact with the browser, perform your work in componentDidMount() or the other lifecycle methods instead. Keeping render() pure makes components easier to think about.\n    // Должен только возвращать JSX и все\n    render() {\n        console.log(\"render\");\n\n        return (\n            <LifecycleParent/>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport MaterialLoaderComponent from \"../loader/MaterialLoader\";\n\nclass ClassBasedComponent extends Component {\n    id;\n\n    state = {\n        latitude: null,\n        longitude: null,\n        errorMessage: '',\n\n        // когда не знаю что задать приравниваю к null\n        randomProp: null\n    };\n\n    componentDidMount() {\n        const success = ({coords}) => {\n            // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n            // через функцию это делаю\n            this.setState((prevState, prevProps) => ({\n                latitude: coords.latitude,\n                longitude: coords.longitude\n            }));\n        };\n\n        const error = e => {\n            console.log('Getting position error ', e);\n            // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n            // через функцию это делаю\n            this.setState((prevState, prevProps) => ({\n                errorMessage: e.message\n            }));\n        };\n\n        navigator.geolocation.getCurrentPosition(\n            success,\n            error\n        );\n\n        this.id = navigator.geolocation.watchPosition(success, error);\n    }\n\n    componentWillUnmount() {\n        navigator.geolocation.clearWatch(this.id);\n    }\n\n    // в случае если все кейсы надо обернуть в див с классом другим, все ифы выношу в хелпер метод и оборачиваю\n    // возвращаемое значение\n    render() {\n        const {latitude, longitude} = this.state;\n        const {defaultProp} = this.props;\n\n        let position = \"\";\n\n        if (latitude) {\n            position =\n                <div>\n                    defaultProps: {defaultProp} <br/>\n                    latitude: {latitude} &nbsp;\n                    longitude: {longitude}\n                </div>\n        } else {\n            position = <div style={{\n                position: \"relative\",\n                pointerEvents: 'none'\n            }}>\n                defaultProps: {defaultProp}\n                <MaterialLoaderComponent/>\n            </div>\n        }\n\n        return position;\n    }\n}\n\nClassBasedComponent.defaultProps = {\n    defaultProp: \"default prop\"\n};\n\nexport {ClassBasedComponent};\n","import React, {Component} from 'react';\nimport CommentComponent from \"./Comment\";\nimport './CommentList.scss';\nimport ContentProjectionContentComponent from \"../content-projection/ContentProjectionContent\";\nimport ContentProjectionComponent from \"../content-projection/ContentProjection\";\nimport customAxios from \"../../common/api/axios\";\n\nexport class CommentListComponent extends Component {\n    state = {\n        comments: []\n    };\n\n    render() {\n        const comments = this.state.comments.map((comment, index) => {\n            return <ContentProjectionComponent\n                key={index}\n                projectFromProp={<ContentProjectionContentComponent content={comment.occupation}/>}\n            >\n                <CommentComponent\n                    {...comment}\n                />\n            </ContentProjectionComponent>;\n        });\n\n        return (\n            <ul className=\"comment-list\">\n                {comments}\n            </ul>\n        );\n    }\n\n    async componentDidMount() {\n        this.cancelGetCommentsRequest = customAxios.CancelToken.source();\n\n        try {\n            const {data: comments} = await customAxios.get('/comments', {\n                cancelToken: this.cancelGetCommentsRequest.token\n            });\n\n            this.setState({\n                comments\n            });\n        } catch (e) {\n            console.log(\"CommentListComponent get('/comments'... \", e);\n        }\n    }\n\n    componentWillUnmount() {\n        this.cancelGetCommentsRequest.cancel(\"CommentListComponent get('/comments'... canceled\");\n    }\n}\n\n// прикольное использование вместо\n// <CommentComponent\n//     name={name}\n//     content={content}\n//     date={date}\n//     img={img}\n//     id={id}\n// />\n\n// использую\n\n// <CommentComponent\n//     {...comment}\n// />\n","import React, {Component} from \"react\";\n\nexport default class AsyncSetState extends Component {\n    state = {\n        counter: 0\n    };\n\n    onClick = () => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        // this.setState((prevState, prevProps) => {...})\n        this.setState(({counter}, {increaseNumber}) => ({\n            counter: counter + increaseNumber\n        }));\n    };\n\n    render() {\n        const {counter} = this.state;\n\n        return (\n            <div className=\"async-set-state\">\n                <p>\n                    {counter}\n                </p>\n                <p>\n                    <button\n                        type=\"button\"\n                        onClick={this.onClick}\n                    >\n                        Increase\n                    </button>\n                </p>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport {FormsComponent} from \"../components/forms/Forms\";\nimport {JsxListComponent} from \"../components/jsx/JsxList\";\nimport JsxFragment from \"../components/jsx/JsxFragment\";\nimport JSXExampleComponent from \"../components/jsx/JsxExamples\";\nimport {TabsComponent} from \"../components/tabs/Tabs\";\nimport ReduxForm from \"../components/forms/ReduxForm\";\nimport CommentListHooks from \"../components/comment/CommentListHooks\";\nimport Monsters from \"../components/monsters/Monsters\";\nimport Imports from \"../components/imports/Imports\";\nimport {Parent} from \"../components/parent/Parent\";\nimport Grid from \"../components/grid/Grid\";\nimport {RestApiComponent} from \"../components/rest-api/RestApi\";\nimport {LifecycleHooksComponent} from \"../components/lifecycle-hooks/LifecycleHooks\";\nimport {ClassBasedComponent} from \"../components/class-based/ClassBased\";\nimport {CommentListComponent} from \"../components/comment/CommentList\";\nimport ClassBasedHooks from \"../components/class-based/ClassBasedHooks\";\nimport Component from \"../components/component/Component\";\nimport AsyncSetState from \"../components/async-set-state/AsyncSetState\";\nimport AsyncSetStateHooks from \"../components/async-set-state/AsyncSetStateHooks\";\nimport FireStore from \"../components/firestore/FireStore\";\n\nexport default function ReactPage() {\n    return (\n        <TabsComponent>\n            <div tabName=\"Components\">\n                {/*<Component title=\"Firestore\">*/}\n                {/*    <FireStore/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"AsyncSetState\">*/}\n                {/*    <AsyncSetState increaseNumber={1}/>*/}\n                {/*    <AsyncSetStateHooks increaseNumber={1}/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"Monsters\">*/}\n                {/*    <Monsters/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"Imports\">*/}\n                {/*    <Imports/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"Parent\">*/}\n                {/*    <Parent/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"Grid\">*/}\n                {/*    <Grid/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"RestApiComponent\">*/}\n                {/*    <RestApiComponent/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"LifecycleHooksComponent\">*/}\n                {/*    <LifecycleHooksComponent/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"ClassBasedComponent\">*/}\n                {/*    <ClassBasedComponent/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"CommentListComponent\">*/}\n                {/*    <CommentListComponent/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"CommentListHooks\">*/}\n                {/*    <CommentListHooks/>*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"ClassBasedHooks\">*/}\n                {/*    <ClassBasedHooks/>*/}\n                {/*</Component>*/}\n            </div>\n            <div tabName=\"Redux Forms\">\n                <ReduxForm/>\n            </div>\n            <div tabName=\"Forms\">\n                <FormsComponent/>\n            </div>\n            <div tabName=\"JSX\">\n                <JsxListComponent/>\n                <JsxFragment\n                    prop1=\"prop1\"\n                    prop2=\"prop2\"\n                />\n                <JSXExampleComponent/>\n            </div>\n        </TabsComponent>\n    )\n}\n"],"sourceRoot":""}