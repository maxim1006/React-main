{"version":3,"sources":["components/component/Component.js","components/hooks/use-state/HooksUseStateFamily.js","components/hooks/use-state/HooksUseStateCounter.js","components/hooks/use-memo/UseMemoHook.js","pages/HooksPage.js"],"names":["title","children","className","memo","familyNames","useState","name","setName","type","onClick","nameIndex","indexOf","currentNameIndex","length","counter","setCounter","prevCounter","memoizedObj","useMemo","sum","getSum","num","newCounter","useEffect","console","log","_","Component","UseMemoHook","HooksUseStateFamily","HooksUseStateCounter"],"mappings":"iHAAA,2BAGe,MAAGA,QAAOC,cACrB,yBAAKC,UAAU,aACX,wBAAIA,UAAU,oBAAoBF,GAClC,yBAAKE,UAAU,mBAAmBD,K,mGCJ3BE,iBAAK,KAChB,IAAMC,EAAc,CAAC,MAAO,QAAS,OAAQ,SADvB,EAGEC,mBAAS,OAHX,mBAGfC,EAHe,KAGTC,EAHS,KAWtB,OACI,yBAAKL,UAAU,iBACX,4BAAQM,KAAK,SAASC,QARb,KACb,IAAIC,EAAYN,EAAYO,QAAQL,GAC9BM,IAAqBF,EAAYN,EAAYS,OACnDN,EAAQH,EAAYQ,MAKhB,aAGA,0BAAMV,UAAU,wBAAwBI,MCdrCH,iBAAK,KAAO,IAAD,EACME,mBAAS,GADf,mBACjBS,EADiB,KACRC,EADQ,KAQtB,OACI,yBAAKb,UAAU,iBACX,4BAAQM,KAAK,SAASC,QANb,IAAMM,EAAWC,KAAiBA,IAM3C,YAGA,0BAAMd,UAAU,wBAAwBY,GACxC,4BAAQN,KAAK,SAASC,QARb,IAAMM,IAAaD,IAQ5B,eChBGX,iBAAK,KAChB,IACMc,EAAcC,kBAAQ,OAAU,IAFhB,EAGQb,mBAAS,GAHjB,mBAGfS,EAHe,KAGNC,EAHM,KAMhBI,EAAMD,kBAAQ,KAAME,OAuBdC,EAvBqBP,EAwBzBO,GAAOA,EADnB,IAAgBA,GAvB+B,CAACP,IACtCQ,EAAaR,EAAU,EAW7B,OARAS,oBAAU,KACNC,QAAQC,IAAI,8BACb,CAXS,KAaZF,oBAAU,KACNC,QAAQC,IAAI,2BACb,CAACR,IAGA,oCACI,4BAAQR,QAASiB,GAAKX,EAAWI,IAAjC,uBACA,4BAAQV,QAASiB,GAAKX,EAAWO,IAAjC,eACCR,KCyBEX,yBA3CG,IAEV,oCAKI,kBAACwB,EAAA,EAAD,CAAW3B,MAAM,eACb,kBAAC4B,EAAD,OAuBJ,kBAACD,EAAA,EAAD,CAAW3B,MAAM,YACb,kBAAC6B,EAAD,MACA,kBAACC,EAAD","file":"static/js/14.d9932377.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Component.scss\";\n\nexport default ({ title, children }) => (\n    <div className=\"component\">\n        <h3 className=\"component__title\">{title}</h3>\n        <div className=\"component__body\">{children}</div>\n    </div>\n);\n","import React, { memo, useState } from \"react\";\n\nexport default memo(() => {\n    const familyNames = [\"Max\", \"Aliya\", \"Lili\", \"Alice\"];\n\n    const [name, setName] = useState(\"Max\");\n\n    const showName = () => {\n        let nameIndex = familyNames.indexOf(name);\n        const currentNameIndex = ++nameIndex % familyNames.length;\n        setName(familyNames[currentNameIndex]);\n    };\n\n    return (\n        <div className=\"hooks-counter\">\n            <button type=\"button\" onClick={showName}>\n                Show name\n            </button>\n            <span className=\"hooks-counter__value\">{name}</span>\n        </div>\n    );\n});\n","import React, { memo, useState } from \"react\";\n\n// Стейт сохраняется в течение жизни компоненты. Каждое изменение стейта триггерит перезапуск функции компонента.\n\nexport default memo(() => {\n    let [counter, setCounter] = useState(0);\n\n    // можно использовать как функцию аля как в setSate((prevState) => ...)\n    const decrease = () => setCounter(prevCounter => --prevCounter);\n    // можно просто сетить значение\n    const increase = () => setCounter(++counter);\n\n    return (\n        <div className=\"hooks-counter\">\n            <button type=\"button\" onClick={decrease}>\n                decrease\n            </button>\n            <span className=\"hooks-counter__value\">{counter}</span>\n            <button type=\"button\" onClick={increase}>\n                increase\n            </button>\n        </div>\n    );\n});\n","import React, { memo, useEffect, useMemo, useState } from 'react';\n\nexport default memo(() => {\n    const obj = {};\n    const memoizedObj = useMemo(() => {}, []);\n    const [counter, setCounter] = useState(0);\n\n    // функция getSum вызовется только 1 раз, если не добавить во второй параметр (массив) что-то\n    const sum = useMemo(() => getSum(counter), [counter]);\n    const newCounter = counter + 1;\n\n    // второе использование для кеширования объекта\n    useEffect(() => {\n        console.log('useEffect without useMemo');\n    }, [obj]);\n\n    useEffect(() => {\n        console.log('useEffect with useMemo');\n    }, [memoizedObj]);\n\n    return (\n        <>\n            <button onClick={_ => setCounter(sum)}>Add counter useMemo</button>\n            <button onClick={_ => setCounter(newCounter)}>Add counter</button>\n            {counter}\n        </>\n    );\n});\n\n// helper\n// вызовется только 1 раз при инициализации\nfunction getSum(num) {\n    return (num += num);\n}\n","import React, { memo } from 'react';\nimport Component from '../components/component/Component';\nimport HooksUseStateFamily from '../components/hooks/use-state/HooksUseStateFamily';\nimport HooksUseStateCounter from '../components/hooks/use-state/HooksUseStateCounter';\nimport UseMemoHook from '../components/hooks/use-memo/UseMemoHook';\n\nconst HooksPage = () => {\n    return (\n        <>\n            {/*<Component title=\"UseLayoutEffectComponent\">*/}\n            {/*    <UseLayoutEffectComponent />*/}\n            {/*</Component>*/}\n\n            <Component title=\"UseMemoHook\">\n                <UseMemoHook />\n            </Component>\n\n            {/* <Component title=\"UseReducerHook\">*/}\n            {/*    <UseReducerHook/>*/}\n            {/* </Component>*/}\n\n            {/* <Component title=\"UseRefHook\">*/}\n            {/*    <UseRefHook/>*/}\n            {/* </Component>*/}\n\n            {/* <Component title=\"memo\">*/}\n            {/*    <MemoHooks/>*/}\n            {/* </Component>*/}\n\n            {/* <Component title=\"useCallback\">*/}\n            {/*    <UseCallbackHooks/>*/}\n            {/* </Component>*/}\n\n            {/* <Component title=\"useEffect\">*/}\n            {/*    <HooksUseEffectFamily/>*/}\n            {/* </Component>*/}\n\n            <Component title=\"useState\">\n                <HooksUseStateFamily />\n                <HooksUseStateCounter />\n            </Component>\n\n            {/* <Component title=\"Posts and Todos\">*/}\n            {/*    <HooksPostsAndTodos/>*/}\n            {/* </Component>*/}\n        </>\n    );\n};\n\nexport default memo(HooksPage);\n"],"sourceRoot":""}