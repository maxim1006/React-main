{"version":3,"sources":["components/tabs/Tabs.js","i18n/translations/locales lazy /^/.//.*/.json$/ groupOptions: {\"prefetchOrder\":0} namespace object","i18n/translations/translations.js","components/react-intl/messages.js","components/react-intl/react-intl-child.component.tsx","components/react-intl/react-intl.component.tsx","components/i18n-js/i18n-js.helper.ts","context/i18nContext.ts","components/i18n-js/i18n-js-inner.component.tsx","components/i18n-js/i18n-js.component.tsx","pages/IntlPage.js"],"names":["TabsComponent","Component","state","activeTab","onClick","index","this","setState","prevState","prevProps","componentDidMount","props","undefined","render","children","tabsHeader","tabsBody","Children","map","child","push","getTabsHeaderView","getTabsBody","className","bind","key","tabName","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","translations","ru","en","messages","defineMessages","browse","defaultMessage","memo","formatMessage","useIntl","itemName","localeDefault","JSON","parse","localStorage","getItem","useState","locale","setLocale","type","currentLocale","i18n","fallbacks","defaultLocale","a","filter","data","default","loadTranslations","i18nContext","React","createContext","setValue","useContext","count","Provider","value","Tabs"],"mappings":"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","file":"static/js/10.04696fe3.chunk.js","sourcesContent":["import React, { Component, Children } from \"react\";\nimport \"./Tabs.scss\";\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">{tabsHeader}</div>\n                    <div className=\"tabs__content\">{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={index}\n                className={`tabs__header-item${index === this.state.activeTab ? \" _active\" : \"\"}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className=\"tabs__content-item\" key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return \"\";\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index\n        }));\n    };\n}\n","var map = {\n\t\"./en.json\": [\n\t\t255\n\t],\n\t\"./ru.json\": [\n\t\t280\n\t],\n\t\"./whitelist_ru.json\": [\n\t\t402,\n\t\t21\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 397;\nmodule.exports = webpackAsyncContext;","import ru from \"./locales/ru.json\";\nimport en from \"./locales/en.json\";\n\nconst translations = { ru, en };\n\nexport default translations;\n","import { defineMessages } from \"react-intl\";\n\nconst messages = defineMessages({\n    browse: {\n        id: \"browse\",\n        defaultMessage: \"browse\"\n    }\n});\n\nexport default messages;\n","import { useIntl } from \"react-intl\";\nimport React, { memo } from \"react\";\nimport messages from \"./messages\";\n\nconst ReactIntlChild: React.FC = () => {\n    const { formatMessage } = useIntl();\n\n    return <>{formatMessage(messages.browse)}</>;\n};\n\nexport default memo(ReactIntlChild);\n","import React, { memo, useState } from 'react';\nimport { IntlProvider } from 'react-intl';\nimport translations from '../../i18n/translations/translations';\nimport ReactIntlChild from './react-intl-child.component';\n\nconst RU = 'ru';\nconst EN = 'en';\nconst LOCALE = 'locale';\n\nconst getFromLocalStorage = (itemName: any) => JSON.parse(localStorage.getItem(itemName) as string);\n// const setToLocalStorage = (itemName, value) => localStorage.setItem(itemName, JSON.stringify(value));\n\nconst ReactIntlComponent: React.FC = () => {\n    // пример подключения react-intl дико замороченный (надо 2 сета messages делать и все такое, полное г)\n    const localeDefault = getFromLocalStorage(LOCALE);\n\n    const [locale, setLocale] = useState(localeDefault === RU ? RU : EN);\n\n    const messages: any = (translations as any)[locale];\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                onClick={() => {\n                    setLocale(currentLocale => (currentLocale === RU ? EN : RU));\n                }}\n            >\n                Change locale from {locale}\n            </button>\n            <IntlProvider locale={locale} messages={messages}>\n                <ReactIntlChild />\n            </IntlProvider>\n        </>\n    );\n};\n\nexport default memo(ReactIntlComponent);\n","import i18n from \"i18n-js\";\n\nimport en from \"../../i18n/translations/locales/en.json\";\n\ni18n.fallbacks = true;\n// i18n.translations = translations;\ni18n.translations = { en, ru: {} };\ni18n.defaultLocale = \"en\";\n\nexport default i18n;\n\nexport const loadTranslations = async () => {\n    await Promise.all(\n        Object.keys(i18n.translations)\n            .filter(key => key !== i18n.defaultLocale)\n            .map(async locale => {\n                const { default: data } = await import(\n                    /* webpackPrefetch: true */ `../../i18n/translations/locales/${locale}.json`\n                );\n                i18n.translations[locale] = {\n                    ...i18n.translations[locale],\n                    ...data\n                };\n            })\n    );\n};\n\nloadTranslations();\n","import React from \"react\";\n\nconst i18nContext = React.createContext<{ setValue: (value?: any) => void; i18n: any }>({\n    setValue: () => {},\n    i18n: {}\n});\n\nexport default i18nContext;\n","import React, { memo, useContext } from \"react\";\nimport i18nContext from \"../../context/i18nContext\";\n\n// https://github.com/fnando/i18n-js\n\nconst I18nJsInnerComponent: React.FC = () => {\n    const { i18n } = useContext(i18nContext);\n\n    return (\n        <div>\n            <h3>I18n Inner</h3>\n            <p>{i18n.t(\"browse\")}</p>\n            <p>{i18n.t(\"browse\", { locale: \"ru\" })}</p>\n            <p>{i18n.t(\"complex.prop\", { count: 10 })}</p>\n            <p>{i18n.t(\"cancel\")}</p>\n            <p>{i18n.t(\"clear\")}</p>\n        </div>\n    );\n};\n\nexport default memo(I18nJsInnerComponent);\n","import React, { memo, useState } from \"react\";\nimport i18n from \"./i18n-js.helper\";\nimport I18nJsInnerComponent from \"./i18n-js-inner.component\";\nimport i18nContext from \"../../context/i18nContext\";\n\n// https://github.com/fnando/i18n-js\n// Сделал пример с иннер так как компоненты с мемо не будут обновляться при смене локали надоо использовать контекст\nconst I18nJsComponent: React.FC = () => {\n    const [locale, setLocale] = useState(i18n.currentLocale());\n\n    const setValue = (value: any) => {\n        i18n.locale = value;\n        setLocale(value);\n    };\n\n    i18n.locale = locale;\n\n    return (\n        <i18nContext.Provider value={{ i18n, setValue }}>\n            <div>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        setLocale(locale === \"ru\" ? \"en\" : \"ru\");\n                    }}\n                >\n                    Change locale from {locale}\n                </button>\n            </div>\n            <p>{i18n.t(\"browse\")}</p>\n            <p>{i18n.t(\"browse\", { locale: \"ru\" })}</p>\n            <p>{i18n.t(\"complex.prop\", { count: 10 })}</p>\n            <p>{i18n.t(\"cancel\")}</p>\n            <p>{i18n.t(\"clear\")}</p>\n\n            <I18nJsInnerComponent />\n        </i18nContext.Provider>\n    );\n};\n\nexport default memo(I18nJsComponent);\n","import React, { memo } from \"react\";\nimport ReactIntlComponent from \"../components/react-intl/react-intl.component\";\nimport { TabsComponent } from \"../components/tabs/Tabs\";\nimport I18nJsComponent from \"../components/i18n-js/i18n-js.component\";\n\nconst IntlPage = () => {\n    return (\n        <TabsComponent>\n            <div tabName=\"i18n-js\">\n                <I18nJsComponent />\n            </div>\n            <div tabName=\"react-intl\">\n                <ReactIntlComponent />\n            </div>\n        </TabsComponent>\n    );\n};\n\nexport default memo(IntlPage);\n"],"sourceRoot":""}