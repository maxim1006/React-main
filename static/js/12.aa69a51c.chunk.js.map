{"version":3,"sources":["../node_modules/reselect/es/index.js","store/selectors/shopUser.js","store/selectors/shopCart.js","store/selectors/streams.js","store/selectors/auth.js","store/selectors/users.js","components/tabs/Tabs.js","../node_modules/redux-devtools-extension/index.js","components/posts-and-users/PostsAndUsers.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/user/User.js","components/user/UserListHooks.js","components/counter/counter-store.component.tsx","components/counter/counters.component.tsx","components/todo/components/todo-header.component.tsx","components/todo/store/actions/types.ts","components/todo/store/reducers/todos.reducer.ts","components/todo/store/reducers/plans.reducer.ts","components/todo/store/reducers/index.ts","components/todo/store/reducers/visibility-filter.reducer.ts","components/todo/store/store.ts","components/todo/containers/todo-header-connected-container.component.tsx","components/todo/store/actions/todo.action.ts","components/todo/components/todo-filter-link.component.tsx","components/todo/components/todo-filter-links.component.tsx","components/todo/containers/todo-filter-links-connected-container.component.tsx","components/todo/store/actions/visibility-filter.action.ts","components/todo/components/todo.component.tsx","components/todo/components/todo-list.component.tsx","components/todo/containers/todo-list-connected-container.component.tsx","components/todo/store/selectors/todo.selector.ts","components/todo/store/selectors/visibility-filter.selector.ts","components/todo/components/plans/todo-plans.component.tsx","components/todo/containers/todo-plans-connected-container.component.tsx","components/todo/store/actions/plans.action.ts","components/todo/todos.component.tsx","components/redux-saga/intro/redux-saga-intro.component.js","components/redux-saga/family/family-saga.component.js","components/redux-saga/counter/saga-counter.component.js","components/redux-saga/redux-saga.component.js","components/redux/Redux.js","pages/ReduxPage.js"],"names":["defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","selectShopCurrentUser","state","shopUser","shopuser","currentUser","selectShopCart","shopCart","selectShopCartItems","cartItems","selectShopCartQuantity","acc","quantity","selectShopCartVisibleDropdown","visibleDropdown","selectShopCartTotal","price","selectStreams","streams","selectStreamsById","id","selectAuth","auth","selectAuthIsSignedIn","isSignedIn","selectAuthUserId","userId","selectUsers","users","selectIsLoadingUsers","isLoadingUsers","selectUsersArray","TabsComponent","activeTab","onClick","setState","prevState","prevProps","this","props","children","tabsHeader","tabsBody","Children","child","getTabsHeaderView","getTabsBody","className","bind","tabName","Component","compose","require","exports","__esModule","composeWithDevTools","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","devToolsEnhancer","__REDUX_DEVTOOLS_EXTENSION__","noop","PostsAndUsers","fetchPostsAndUsers","user","userName","name","posts","title","body","getAuthorContent","connect","PostUser","fetchUserById","findUser","PostList","fetchPosts","post","Post","ownProps","selected","onSelect","style","backgroundColor","type","selectedSong","song","duration","likes","SongList","getSongsList","songs","selectSong","isSelected","dispatch","progress","onChange","checked","ref","el","indeterminate","FrameworkList","fetchFrameworks","frameworks","changeFrameworkStatus","framework","Framework","getFrameworkList","fromActions","memo","occupation","useDispatch","useSelector","useEffect","fetchUsers","MaterialLoader","store","reducer","listeners","action","forEach","listener","getState","subscribe","filter","l","createStore","COUNTER_TYPES","INCREMENT","DECREMENT","useState","setValue","storeUnsubscribe","inputRef","useRef","current","TODOS_TYPES","VISIBILITY_FILTER_TYPES","PLANS_TYPES","initState","completed","generateUniqueId","isLoading","error","message","plans","combineReducers","todos","payload","todo","visibilityFilter","middlewares","thunk","composedEnhancers","applyMiddleware","reducers","currentValue","rest","href","e","preventDefault","currentFilter","getTodoLinkView","filterType","textDecoration","getFilteredTodos","mapStateToProps","toggleTodo","planId","fetchTodoPlans","cancelFetchSkillRequest","cancelToken","token","customAxios","get","data","cancelRemoveSkillRequest","CancelToken","source","cancel","marginBottom","saga","sagaGetUserStartAction","loading","entities","getFamilyAction","sagaState","counter","SAGA_TYPES","INCREMENT_COUNTER","DECREMENT_COUNTER","Tabs","ReduxComponent","MainMenu","exact","routes","to","path","component","ReduxSaga","Todos","Counters","UserListHooks"],"mappings":"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","file":"static/js/12.aa69a51c.chunk.js","sourcesContent":["function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect';\n\nconst selectShopUser = state => state.shopUser;\n\nexport const selectShopCurrentUser = createSelector([selectShopUser], shopuser => shopuser.currentUser);\n","import { createSelector } from 'reselect';\n\nconst selectShopCart = state => state.shopCart;\n\nexport const selectShopCartItems = createSelector(\n    // прямо как в ngrx, первый аргумент - предыдущие стейты, второй собственно сам селектор\n    [selectShopCart],\n    shopCart => shopCart.cartItems,\n);\n\nexport const selectShopCartQuantity = createSelector([selectShopCartItems], cartItems =>\n    Object.values(cartItems).reduce((acc, { quantity }) => acc + quantity, 0),\n);\n\nexport const selectShopCartVisibleDropdown = createSelector([selectShopCart], shopCart => shopCart.visibleDropdown);\n\nexport const selectShopCartTotal = createSelector([selectShopCartItems], cartItems =>\n    Object.values(cartItems).reduce((acc, { quantity, price }) => acc + quantity * price, 0),\n);\n","import { createSelector } from 'reselect';\n\nexport const selectStreams = state => state.streams;\n\nexport const selectStreamsById = createSelector(\n    [selectStreams, (state, id) => id],\n    (selectStreams, id) => selectStreams[id],\n);\n","import { createSelector } from 'reselect';\n\nexport const selectAuth = state => state.auth;\n\nexport const selectAuthIsSignedIn = createSelector([selectAuth], selectAuth => selectAuth.isSignedIn);\n\nexport const selectAuthUserId = createSelector([selectAuth], selectAuth => selectAuth.userId);\n","import { createSelector } from 'reselect';\n\nexport const selectUsers = state => state.users;\n\nexport const selectIsLoadingUsers = createSelector([selectUsers], selectUsers => selectUsers.isLoadingUsers);\n\nexport const selectUsersArray = createSelector([selectUsers], selectUsers => Object.values(selectUsers.users));\n","import React, { Component, Children } from 'react';\nimport './Tabs.scss';\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0,\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">{tabsHeader}</div>\n                    <div className=\"tabs__content\">{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={index}\n                className={`tabs__header-item${index === this.state.activeTab ? ' _active' : ''}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className=\"tabs__content-item\" key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return '';\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index,\n        }));\n    };\n}\n","'use strict';\n\nvar compose = require('redux').compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : function () {\n        if (arguments.length === 0) return undefined;\n        if (typeof arguments[0] === 'object') return compose;\n        return compose.apply(null, arguments);\n      };\n\nexports.devToolsEnhancer =\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__\n    ? window.__REDUX_DEVTOOLS_EXTENSION__\n    : function () {\n        return function (noop) {\n          return noop;\n        };\n      };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '../../store/actions';\nimport './PostsAndUsers.scss';\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        const { fetchPostsAndUsers } = this.props;\n\n        fetchPostsAndUsers();\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return <div>Loading</div>;\n        }\n\n        const { name: userName } = user;\n\n        return (\n            <p>\n                <b>Author</b>:{userName}\n            </p>\n        );\n    }\n\n    render() {\n        const { posts, users } = this.props;\n\n        return (\n            <ul>\n                {posts.map(({ title, id, body, userId }) => {\n                    return (\n                        <li key={id} className=\"posts-and-users__item\">\n                            <p>\n                                <b>Post title:</b>\n                                {title}\n                            </p>\n                            <p>\n                                <b>Post body:</b>\n                                {body}\n                            </p>\n                            {this.getAuthorContent(users[userId])}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    users: state.users.users,\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers,\n})(PostsAndUsers);\n","import React from 'react';\n\nexport default ({ title, body, index }) => (\n    <div>\n        <h3>\n            Post:\n            {index}\n        </h3>\n        <p>\n            <b>{title}</b>\n        </p>\n        <p>{body}</p>\n    </div>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserById } from '../../store/actions';\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        const { user } = this.props;\n\n        if (!user) {\n            return null;\n        }\n\n        const { name } = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, { userId }) => ({\n    user: findUser(state, userId),\n});\n\nexport default connect(mapStateToProps, { fetchUserById })(PostUser);\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтр то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.users[userId];\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../../store/actions';\nimport Post from './Post';\nimport PostUser from './PostUser';\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const { posts } = this.props;\n\n        return (\n            <ul>\n                {posts.map((post, index) => {\n                    return (\n                        <li key={post.id}>\n                            <Post {...post} index={index} />\n                            <PostUser userId={post.userId} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts,\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\n","import React from 'react';\nimport './Song.scss';\n\nexport default ({ title, selected, onSelect }) => {\n    const style = selected ? { backgroundColor: 'lightblue' } : null;\n\n    return (\n        <div className=\"song\" style={style}>\n            <div>\n                Title:\n                {title}\n            </div>\n\n            <button onClick={onSelect.bind(this, title)} type=\"button\">\n                Get Details\n            </button>\n        </div>\n    );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction SongDetails({ selectedSong }) {\n    if (selectedSong) {\n        const { title, duration, likes } = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>\n                    Title:\n                    {title}\n                </p>\n                <p>\n                    Duration:\n                    {duration}\n                </p>\n                <p>\n                    Likes:\n                    {likes}\n                </p>\n            </>\n        );\n    }\n    return (\n        <>\n            <h4>Details</h4>\n            <p>No Selected song</p>\n        </>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong,\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Song from './Song';\nimport { selectSong } from '../../store/actions';\nimport SongDetails from './SongDetails';\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className=\"song-list\">{this.getSongsList()}</ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const { songs, selectedSong, selectSong } = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong ? selectedSong.song.title === song.title : null;\n\n            return (\n                <li key={index}>\n                    <Song {...song} selected={isSelected} onSelect={selectSong.bind(this, song)} />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: song => {\n        // console.log(ownProps);\n        dispatch(selectSong(song));\n    },\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","import React from 'react';\n\nexport default ({ name, progress, onChange }) => (\n    <div className=\"framework\">\n        <p>\n            Name:\n            {name}\n        </p>\n        <label>\n            Progress:\n            <input\n                type=\"checkbox\"\n                checked={progress === 'done'}\n                onChange={onChange}\n                ref={el => el && (el.indeterminate = progress === 'indeterminate')}\n            />\n        </label>\n    </div>\n);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Framework from './Framework';\nimport * as fromActions from '../../store/actions';\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    getFrameworkList() {\n        const { frameworks, changeFrameworkStatus } = this.props;\n\n        return frameworks.map((framework, index) => {\n            return (\n                <li key={index}>\n                    <Framework onChange={changeFrameworkStatus.bind(this, framework)} {...framework} />\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return <ul>{this.getFrameworkList()}</ul>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // обращаю внимание что тут fetchFrameworks а не fetchFrameworks(), тем самым могу в action не писать\n    // доп функцию обертку\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: framework => {\n        switch (framework.progress) {\n            case 'done': {\n                framework.progress = null;\n                break;\n            }\n            case 'indeterminate': {\n                framework.progress = 'done';\n                break;\n            }\n            default: {\n                framework.progress = 'indeterminate';\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import React, { memo } from 'react';\n\nimport './User.scss';\n\nexport default memo(({ name, occupation }) => {\n    return (\n        <div className=\"user\">\n            <span className=\"user__label\">Name: </span>\n            <span className=\"user__value\">{name}</span>\n            <br />\n            <span className=\"user__label\">Occupation:</span>\n            <span className=\"user__value\">{occupation}</span>\n        </div>\n    );\n});\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport User from './User';\nimport { fetchUsers } from '../../store/actions';\nimport './UserList.scss';\nimport { selectIsLoadingUsers, selectUsersArray } from '../../store/selectors';\nimport MaterialLoader from '../loader/MaterialLoader';\n\nexport default memo(() => {\n    const dispatch = useDispatch();\n    const isLoadingUsers = useSelector(selectIsLoadingUsers);\n    const users = useSelector(selectUsersArray);\n\n    useEffect(() => {\n        dispatch(fetchUsers());\n    }, [dispatch]);\n\n    return isLoadingUsers ? (\n        <MaterialLoader />\n    ) : (\n        <ul className=\"user-list\">\n            {users.map(user => (\n                <li className=\"user-list__item\" key={user.id}>\n                    <User {...user} />\n                </li>\n            ))}\n        </ul>\n    );\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { COUNTER_TYPES } from '../../store/actions/types';\n\n// Create store\nconst createStore = (reducer: Function) => {\n    let state: object;\n    // так как сабскрайб может вызывааться несколько раз, должны хранить все вызовы\n    const listeners: any[] = [];\n\n    const getState = () => state;\n\n    const dispatch = (action: { type?: string }) => {\n        // каждый раз когда происходит диспач нужно апдейтить стейт\n        state = reducer(state, action);\n        // и вызывать всех слушателей\n        listeners.forEach(listener => listener());\n    };\n\n    const subscribe = (listener: () => void) => {\n        listeners.push(listener);\n\n        // возвращать функцию unsubscribe которая удаляет слушателя из массива всех слушателей\n        return () => listeners.filter(l => l !== listener);\n    };\n\n    // диспатчим первый раз чтобы редьюсер вернул initial value\n    dispatch({});\n\n    return { getState, dispatch, subscribe };\n};\n\n// Reducer\nconst counterReducer = (state = 0, action: { type: string }) => {\n    switch (action.type) {\n        case COUNTER_TYPES.INCREMENT: {\n            return ++state;\n        }\n\n        case COUNTER_TYPES.DECREMENT: {\n            return --state;\n        }\n\n        default:\n            return state;\n    }\n};\n\n// Create store\nconst store = createStore(counterReducer);\n\nconst CounterStore: React.FC = () => {\n    const [value, setValue] = useState(store.getState());\n\n    useEffect(() => {\n        const storeUnsubscribe = store.subscribe(() => {\n            setValue(store.getState());\n        });\n\n        return () => {\n            storeUnsubscribe();\n        };\n    }, []);\n\n    return (\n        <>\n            <p>{value}</p>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.INCREMENT })}>Increment</button>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.DECREMENT })}>Decrement</button>\n        </>\n    );\n};\n\nexport default memo(CounterStore);\n","import React, { memo } from 'react';\nimport CounterStore from './counter-store.component';\n\nconst Counters: React.FC = () => {\n    return (\n        <>\n            <CounterStore />\n            {/* <Counter/>*/}\n            {/* <CounterWithMapDispatchToProps/>*/}\n            {/* <CounterWithMapDispatchToPropsFunc/>*/}\n        </>\n    );\n};\n\nexport default memo(Counters);\n","import React, { memo, useRef } from 'react';\n\nexport interface ITodoHeaderProps {\n    onClick: (value: string) => void;\n}\n\nconst TodoHeader = ({ onClick }: ITodoHeaderProps) => {\n    // ! здесь означает It is a way to tell the compiler \"this expression cannot be null or undefined\n    const inputRef = useRef<HTMLInputElement>(null!);\n    // еще могу так написать\n    // const inputRef = useRef<HTMLInputElement | null>(null);\n\n    return (\n        <div>\n            <input type=\"text\" ref={inputRef} />\n            <button\n                onClick={() => {\n                    onClick(inputRef.current.value);\n                    inputRef.current.value = '';\n                }}\n            >\n                Add todo\n            </button>\n        </div>\n    );\n};\n\nexport default memo(TodoHeader);\n","export const TODOS_TYPES = {\n    ADD: '[TodoHeaderContainer] Add Todo',\n    TOGGLE: '[TodoListContainer] Toggle Todo',\n};\n\nexport const VISIBILITY_FILTER_TYPES = {\n    SET: '[TodoFilterLinksContainer] Set visibility filter',\n};\n\nexport const PLANS_TYPES = {\n    FETCH_START: '[TodoPlansConnectedContainer] Fetch start',\n    FETCH_SUCCESS: '[TodoPlansConnectedContainer] Fetch success',\n    FETCH_ERROR: '[TodoPlansConnectedContainer] Fetch error',\n};\n","import { generateUniqueId } from '../../../../common/helpers/helpers';\nimport { TODOS_TYPES } from '../actions';\nimport { TodosState } from '../state';\nimport { ITodo } from '../../../../models/todo.model';\nimport { TodoActionTypes } from '../actions/todo.action-type';\n\nconst initState: TodosState = [\n    {\n        name: 'deeply learn redux',\n        completed: false,\n        id: generateUniqueId(),\n    },\n];\n\nexport default (state = initState, action: TodoActionTypes) => {\n    switch (action.type) {\n        case TODOS_TYPES.TOGGLE: {\n            const { id, completed }: ITodo = action.payload as ITodo;\n\n            return state.map((todo: ITodo) => (todo.id === id ? { ...todo, completed: !completed } : todo));\n        }\n\n        case TODOS_TYPES.ADD: {\n            return [...state, action.payload];\n        }\n\n        default:\n            return state;\n    }\n};\n","import { PLANS_TYPES } from '../actions';\nimport { PlansState } from '../state';\nimport { PlansActionTypes } from '../actions/plans.action-type';\n\nconst initState: PlansState = {\n    isLoading: false,\n    error: {\n        message: '',\n    },\n    plans: {},\n};\n\nexport default (state = initState, action: PlansActionTypes): PlansState => {\n    switch (action.type) {\n        case PLANS_TYPES.FETCH_START: {\n            return { ...state, isLoading: true };\n        }\n\n        case PLANS_TYPES.FETCH_SUCCESS: {\n            const { plans } = action.payload;\n            return { ...state, plans, isLoading: false };\n        }\n\n        case PLANS_TYPES.FETCH_ERROR: {\n            const { error } = action.payload;\n            return { ...state, error, isLoading: false };\n        }\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport todos from './todos.reducer';\nimport visibilityFilter from './visibility-filter.reducer';\nimport plans from './plans.reducer';\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    plans,\n});\n","import { VISIBILITY_FILTER_TYPES } from '../actions';\nimport { VisibilityFilterState } from '../state';\n\nconst initState: VisibilityFilterState = 'All';\n\nexport default (state = initState, action: { type: string; payload: string }) => {\n    switch (action.type) {\n        case VISIBILITY_FILTER_TYPES.SET: {\n            return action.payload;\n        }\n\n        default:\n            return state;\n    }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\n// имплементация createStore в counter-store.component.tsx\n// Также тут включаю девтулы с редаксом, но при этом надо отключить тут client/src/store/configureStore.js\nconst middlewares = [thunk];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\nconst enhancers = [middlewareEnhancer];\nconst composedEnhancers =\n    process.env.NODE_ENV !== 'production' ? composeWithDevTools(...enhancers) : compose(applyMiddleware(thunk));\n\nexport const store = createStore(reducers, {}, composedEnhancers);\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport TodoHeader from '../components/todo-header.component';\nimport { addTodo } from '../store';\n\nconst TodoHeaderConnectedContainer = ({ dispatch }: any) => (\n    <TodoHeader\n        onClick={currentValue => {\n            dispatch(addTodo(currentValue));\n        }}\n    />\n);\n\n// null в mapStateToProps означает что не надо подписываться на изменения стора\nexport default connect(null, null)(memo(TodoHeaderConnectedContainer));\n","import { TODOS_TYPES } from './types';\nimport { generateUniqueId } from '../../../../common/helpers/helpers';\nimport { TodoActionTypes } from './todo.action-type';\n\nexport const toggleTodo = (id: string, completed: boolean): TodoActionTypes => ({\n    type: TODOS_TYPES.TOGGLE,\n    payload: {\n        id,\n        completed,\n    },\n});\n\nexport const addTodo = (name: string): TodoActionTypes => ({\n    type: TODOS_TYPES.ADD,\n    payload: {\n        name,\n        completed: false,\n        id: generateUniqueId(),\n    },\n});\n","import React, { memo } from 'react';\n\nexport type ToDoFilterLinkProps = {\n    children?: any;\n    onClick: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst ToDoFilterLink = ({ children, onClick, ...rest }: ToDoFilterLinkProps) => (\n    <a\n        {...rest}\n        href=\"/\"\n        onClick={e => {\n            e.preventDefault();\n            onClick(e);\n        }}\n    >\n        {children}\n    </a>\n);\n\nexport default memo(ToDoFilterLink);\n","import React, { memo } from 'react';\nimport ToDoFilterLink from './todo-filter-link.component';\n\nexport interface IToDoFilterLinksProps {\n    currentFilter?: string;\n    onClick: (filterType: string) => void;\n}\n\nconst ToDoFilterLinks = ({ currentFilter, onClick }: IToDoFilterLinksProps) => {\n    const getTodoLinkView = (filterType: string) =>\n        currentFilter === filterType ? (\n            <span>{filterType}</span>\n        ) : (\n            <ToDoFilterLink\n                onClick={() => {\n                    onClick(filterType);\n                }}\n            >\n                {filterType}\n            </ToDoFilterLink>\n        );\n\n    return (\n        <div>\n            Filters:\n            {getTodoLinkView('All')}\n            {getTodoLinkView('Completed')}\n            {getTodoLinkView('Active')}\n            Current filter: <b>{currentFilter}</b>\n        </div>\n    );\n};\n\nexport default memo(ToDoFilterLinks);\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport ToDoFilterLinks from '../components/todo-filter-links.component';\nimport { setVisibilityFilter } from '../store';\n\ntype TodoFilterLinksContainerProps = {\n    visibilityFilter: string;\n    onClick: (filterType: string) => void;\n};\n\nconst TodoFilterLinksConnectedContainer = ({ visibilityFilter, onClick }: TodoFilterLinksContainerProps) => (\n    <ToDoFilterLinks currentFilter={visibilityFilter} onClick={onClick} />\n);\n\nconst mapStateToProps = (state: any) => ({\n    visibilityFilter: state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (filterType: string) => {\n        dispatch(setVisibilityFilter(filterType));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(TodoFilterLinksConnectedContainer));\n","import { VISIBILITY_FILTER_TYPES } from './types';\n\nexport const setVisibilityFilter = (filter: string) => ({\n    type: VISIBILITY_FILTER_TYPES.SET,\n    payload: filter,\n});\n","import React, { memo } from 'react';\n\nexport interface ITodoProps {\n    completed: boolean;\n    onChange: () => void;\n    name: string;\n}\n\nconst Todo = ({ completed, onChange, name }: ITodoProps) => (\n    <label>\n        <input checked={completed} onChange={onChange} type=\"checkbox\" />\n        <span\n            style={{\n                textDecoration: completed ? 'line-through' : 'none',\n            }}\n        >\n            {name}\n        </span>\n    </label>\n);\n\nexport default memo(Todo);\n","import React, { memo } from 'react';\nimport Todo from './todo.component';\nimport { ITodo } from '../../../models/todo.model';\n\nexport interface ITodoListProps {\n    currentFilter: string;\n    todos: React.ReactNode;\n    onChange: (id: string, completed: boolean) => void;\n}\n\nconst TodoList = ({ todos, currentFilter, onChange }: ITodoListProps) => (\n    <ul>\n        {getFilteredTodos(todos, currentFilter).map(\n            ({ id, name, completed }: { id: string; name: string; completed: boolean }) => (\n                <li key={id}>\n                    <Todo name={name} completed={completed} onChange={() => onChange(id, completed)} />\n                </li>\n            ),\n        )}\n    </ul>\n);\n\nexport default memo(TodoList);\n\n// helpers\nfunction getFilteredTodos(todos: any, filter: string) {\n    return todos.filter((todo: ITodo) => {\n        switch (filter) {\n            case 'Completed': {\n                return todo.completed;\n            }\n\n            case 'Active': {\n                return !todo.completed;\n            }\n\n            default:\n                return todo;\n        }\n    });\n}\n","import React, { memo } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport TodoList from '../components/todo-list.component';\nimport { selectTodos, selectVisibilityFilter, toggleTodo } from '../store';\nimport { TodosAppState } from '../store/state';\nimport { ITodo } from '../../../models/todo.model';\n\nexport type TodoListContainerProps = {\n    todos: ITodo[];\n    visibilityFilter: string;\n    onChange: (id: string, completed: boolean) => void;\n};\n\nconst TodoListConnectedContainer = ({ todos, visibilityFilter, onChange }: TodoListContainerProps) => (\n    <TodoList todos={todos} currentFilter={visibilityFilter} onChange={onChange} />\n);\n\n// базовый вариант\n// const mapStateToProps = (state: any) => ({\n//     todos: state.todos,\n//     visibilityFilter: state.visibilityFilter\n// });\n\n// тоже но с селекторами\n// const mapStateToProps = (state: any) => ({\n//     todos: selectTodos(state),\n//     visibilityFilter: selectVisibilityFilter(state)\n// });\n\n// тоже но с createStructuredSelector\nconst mapStateToProps = createStructuredSelector<TodosAppState, { todos: ITodo[]; visibilityFilter: string }>({\n    todos: selectTodos,\n    visibilityFilter: selectVisibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onChange: (id: string, completed: boolean) => {\n        dispatch(toggleTodo(id, completed));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(TodoListConnectedContainer));\n","import { TodosAppState } from '../state';\n\nexport const selectTodos = (state: TodosAppState) => state.todos;\n","import { TodosAppState } from '../state';\n\nexport const selectVisibilityFilter = (state: TodosAppState) => state.visibilityFilter;\n","import React, { memo } from 'react';\nimport { IPlans } from '../../../../models/plans.model';\nimport { IPlan } from '../../../../models/plan.model';\n\nconst TodoPlans = ({ plans }: IPlans) => (\n    <>\n        <ul>\n            {Object.keys(plans).map((planId: string, index: number) => {\n                const { name, completed }: IPlan = plans[planId];\n                return (\n                    <li key={index}>\n                        Name: {name} Completed: {completed}\n                    </li>\n                );\n            })}\n        </ul>\n    </>\n);\n\nexport default memo(TodoPlans);\n","import React, { memo, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodoPlans, store } from '../store';\nimport TodoPlans from '../components/plans/todo-plans.component';\nimport { TodosAppState } from '../store/state';\nimport { ISimpleMap } from '../../../models/simple-map.model';\nimport { IPlan } from '../../../models/plan.model';\nimport MaterialLoader from '../../loader/MaterialLoader';\nimport customAxios from '../../../common/api/axios';\nimport { CancelTokenSource } from 'axios';\n\nconst TodoPlansConnectedContainer = ({\n    plans,\n    isLoading,\n    fetchTodoPlans,\n}: {\n    plans: ISimpleMap<IPlan>;\n    isLoading: boolean;\n    fetchTodoPlans: (cancelToken: CancelTokenSource) => void;\n}) => {\n    useEffect(() => {\n        const cancelRemoveSkillRequest = customAxios.CancelToken.source() as CancelTokenSource;\n\n        fetchTodoPlans(cancelRemoveSkillRequest);\n\n        return () => cancelRemoveSkillRequest.cancel('TodoPlansConnectedContainer fetchTodoPlans canceled');\n    }, [fetchTodoPlans]);\n\n    return isLoading ? <MaterialLoader /> : <TodoPlans plans={plans} />;\n};\n\nconst mapStateToProps = (state: TodosAppState) => {\n    return {\n        plans: state.plans.plans,\n        isLoading: state.plans.isLoading,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: typeof store.dispatch) => ({\n    fetchTodoPlans: (cancelFetchSkillRequest: any) => {\n        dispatch(fetchTodoPlans(cancelFetchSkillRequest.token) as any);\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(TodoPlansConnectedContainer));\n","import { PLANS_TYPES } from './types';\nimport customAxios from '../../../../common/api/axios';\n\nexport const fetchTodoPlans = (cancelToken: any) => async (dispatch: any) => {\n    dispatch({\n        type: PLANS_TYPES.FETCH_START,\n    });\n\n    try {\n        const { data: plans } = await customAxios.get('/plans', {\n            cancelToken,\n        });\n\n        dispatch({\n            type: PLANS_TYPES.FETCH_SUCCESS,\n            payload: {\n                plans,\n            },\n        });\n    } catch ({ message }) {\n        dispatch({\n            type: PLANS_TYPES.FETCH_ERROR,\n            payload: {\n                error: message,\n            },\n        });\n    }\n};\n","import React, { memo } from 'react';\nimport { Provider } from 'react-redux';\nimport TodoHeaderConnectedContainer from './containers/todo-header-connected-container.component';\nimport TodoFilterLinksConnectedContainer from './containers/todo-filter-links-connected-container.component';\nimport TodoListConnectedContainer from './containers/todo-list-connected-container.component';\nimport TodoPlansConnectedContainer from './containers/todo-plans-connected-container.component';\nimport { store } from './store';\n\nconst Todos: React.FC = () => (\n    // в TodoStore лежит редакс сделанный с нуля с исходным кодом\n    // <TodoStore />\n    <Provider store={store}>\n        <section style={{ marginBottom: '20px' }}>\n            <TodoPlansConnectedContainer />\n        </section>\n        <TodoHeaderConnectedContainer />\n        <TodoFilterLinksConnectedContainer />\n        <TodoListConnectedContainer />\n    </Provider>\n);\n\nexport default memo(Todos);\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sagaGetUserStartAction } from '../../../store/actions';\nimport MaterialLoaderComponent from '../../loader/MaterialLoader';\n\nconst ReduxSagaIntroComponent = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => state.saga);\n\n    return (\n        <>\n            <button type=\"button\" onClick={() => dispatch(sagaGetUserStartAction())}>\n                Get user\n            </button>\n            {users.loading && <MaterialLoaderComponent />}\n            {!users.loading &&\n                users?.entities?.users?.length &&\n                users?.entities?.users.map(({ id, name }) => {\n                    return <div key={id}>{name}</div>;\n                })}\n        </>\n    );\n};\n\nexport default memo(ReduxSagaIntroComponent);\n","import React, { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFamilyAction } from '../../../store/actions';\n\nconst FamilySagaComponent = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <button type=\"button\" onClick={() => dispatch(getFamilyAction())}>\n            Get family\n        </button>\n    );\n};\n\nexport default memo(FamilySagaComponent);\n","import React, { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SAGA_TYPES } from '../../../store/actions/types';\n\nconst SagaCounterComponent = () => {\n    const sagaState = useSelector(state => state.saga);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {sagaState.counter}\n            <button type=\"button\" onClick={() => dispatch({ type: SAGA_TYPES.INCREMENT_COUNTER })}>\n                Increment counter\n            </button>\n            <button type=\"button\" onClick={() => dispatch({ type: SAGA_TYPES.DECREMENT_COUNTER })}>\n                Decrement counter\n            </button>\n        </>\n    );\n};\n\nexport default memo(SagaCounterComponent);\n","import React, { memo } from 'react';\nimport { TabsComponent } from '../tabs/Tabs';\nimport ReduxSagaIntroComponent from './intro/redux-saga-intro.component';\nimport FamilySagaComponent from './family/family-saga.component';\nimport SagaCounterComponent from './counter/saga-counter.component';\n\nconst ReduxSaga = () => {\n    return (\n        <>\n            <TabsComponent>\n                <div tabName=\"Counter\">\n                    <SagaCounterComponent />\n                </div>\n                <div tabName=\"Intro\">\n                    <ReduxSagaIntroComponent />\n                </div>\n                <div tabName=\"Family\">\n                    <FamilySagaComponent />\n                </div>\n            </TabsComponent>\n        </>\n    );\n};\n\nexport default memo(ReduxSaga);\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PostsAndUsers from '../posts-and-users/PostsAndUsers';\nimport PostList from '../post/PostList';\nimport SongList from '../song/SongList';\nimport FrameworkList from '../framework/FrameworkList';\nimport MainMenu from '../menu/MainMenu';\nimport UserListHooks from '../user/UserListHooks';\nimport Counters from '../counter/counters.component';\nimport Todos from '../todo/todos.component';\nimport ReduxSaga from '../redux-saga/redux-saga.component';\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <>\n                <MainMenu\n                    exact\n                    routes={[\n                        { to: '/redux', title: 'Sagas' },\n                        { to: '/redux/todos', title: 'Todos' },\n                        { to: '/redux/counters', title: 'Counters' },\n                        { to: '/redux/song-list', title: 'SongList' },\n                        {\n                            to: '/redux/posts-and-users',\n                            title: 'PostsAndUsers',\n                        },\n                        { to: '/redux/post-list', title: 'PostList' },\n                        { to: '/redux/framework-list', title: 'FrameworkList' },\n                        { to: '/redux/user-list', title: 'UserList' },\n                    ]}\n                />\n\n                <Switch>\n                    <Route path=\"/redux\" exact component={ReduxSaga} />\n                    <Route path=\"/redux/todos\" exact component={Todos} />\n                    <Route path=\"/redux/counters\" exact component={Counters} />\n                    <Route path=\"/redux/song-list\" exact component={SongList} />\n                    <Route path=\"/redux/posts-and-users\" exact component={PostsAndUsers} />\n                    <Route path=\"/redux/post-list\" exact component={PostList} />\n                    <Route path=\"/redux/framework-list\" exact component={FrameworkList} />\n                    <Route path=\"/redux/user-list\" exact component={UserListHooks} />\n                </Switch>\n            </>\n        );\n    }\n}\n","import React, { memo } from 'react';\nimport { ReduxComponent } from '../components/redux/Redux';\n\nexport default memo(() => {\n    return (\n        <>\n            <ReduxComponent />\n        </>\n    );\n});\n"],"sourceRoot":""}