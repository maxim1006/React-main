{"version":3,"sources":["store/actions/types.js","common/api/axios.js","store/actions/songs.js","store/actions/posts.js","store/actions/users.js","store/actions/frameworks.js","store/actions/postsAndUsers.js","store/actions/streams.js","store/actions/shopUser.js","store/actions/shopCart.js","store/actions/index.js","components/posts-and-users/PostsAndUsers.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/redux/Redux.js","components/router/RouterExactRoute.js","components/router/RouterRoute1.js","pages/RouterPage.js","context/LanguageContext.js","components/context/ContextButton.js","components/context/ContextField.js","components/context/ContextCreate.js","components/context/ContextTest.js","context/ThemeContext.js","components/theme/ThemeContextStore.js","components/theme/ThemeSelector.js","App.js","serviceWorker.js","store/reducers/posts.js","store/reducers/frameworks.js","store/reducers/users.js","store/reducers/auth.js","store/reducers/streams.js","store/reducers/shopUser.js","store/reducers/shopCart.js","store/reducers/index.js","store/reducers/songs.js","store/reducers/selectSong.js","store/configureStore.js","store/session-storage/index.js","index.js","history.js","components/NotFound.js","components/menu/MainMenu.js","common/helpers/helpers.js","components/loader/MaterialLoader.js","store/actions/auth.js","components/tabs/Tabs.js"],"names":["__webpack_require__","d","__webpack_exports__","FETCH_USERS","FETCH_USER","SELECT_SONG","FETCH_POSTS","FETCH_FRAMEWORKS","CHANGE_FRAMEWORK_STATUS","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","SHOP_USER_TYPES","SHOP_CART_TYPES","SET_CURRENT_USER","TOGGLE_DROPDOWN","ADD_ITEM","REMOVE_ITEMS","REMOVE_ITEM","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","customAxios","axios","create","baseURL","CancelToken","isCancel","selectSong","song","type","payload","fetchPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_ref2","posts","wrap","_context","prev","next","get","sent","data","t0","console","log","stop","this","_x","_x2","apply","arguments","fetchUserById","id","_ref3","_callee2","_ref4","user","_context2","concat","_x3","_x4","fetchFrameworks","frameworks","changeFrameworkStatus","framework","fetchPostsAndUsers","userIds","map","userId","filter","onlyUnique","forEach","createStream","formValues","stream","auth","post","objectSpread","history","push","fetchStreams","_","streams","fetchStream","_ref5","_callee3","_ref6","_context3","editStream","_ref7","_callee4","_ref8","_context4","patch","_x5","deleteStream","_ref9","_callee5","_ref10","_context5","delete","params","_x6","shopSetCurrentUser","currentUser","shopToggleDropdown","shopAddCartItem","item","shopRemoveCartItems","shopRemoveCartItem","songs_selectSong","posts_fetchPosts","users_fetchUserById","frameworks_changeFrameworkStatus","postsAndUsers_fetchPostsAndUsers","streams_createStream","streams_fetchStreams","streams_fetchStream","streams_editStream","streams_deleteStream","shopUser_shopSetCurrentUser","shopCart_shopToggleDropdown","shopCart_shopAddCartItem","shopCart_shopRemoveCartItems","shopCart_shopRemoveCartItem","PostsAndUsers","props","_this","_this$props","users","react_default","createElement","title","body","key","className","getAuthorContent","userName","name","Component","connect","state","ownProps","convertArrayToObjById","Post","index","PostUser","findUser","find","PostList","assign","post_PostUser","song_Song","selected","onSelect","style","backgroundColor","onClick","bind","selectedSong","_selectedSong$song","duration","likes","Fragment","SongList","getSongsList","song_SongDetails","songs","isSelected","Framework","progress","onChange","checked","ref","el","indeterminate","FrameworkList","getFrameworkList","fromActions","ReduxComponent","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","Tabs","tabName","components_posts_and_users_PostsAndUsers","post_PostList","song_SongList","prop","framework_FrameworkList","RouterExactRoute","RouterRoute1","RouterLazyRoute","React","lazy","e","then","RouterPage","MainMenu","routes","to","react_router","path","exact","component","NotFound","createContext","ContextButton","text","useContext","LanguageContext","ContextField","label","htmlFor","ContextCreate","ContextTest","language","onLanguageChange","event","preventDefault","setState","href","Provider","ThemeContextStore","_getPrototypeOf2","_len","length","args","Array","_key","call","theme","onThemeChange","htmlElement","document","documentElement","target","classList","remove","add","ThemeContext","children","ThemeSelector","_useContext","ReactPage","Promise","all","LazyPage","StreamPage","HooksPage","ShopPage","App","ThemeContextStore_ThemeContextStore","react","fallback","MaterialLoader","Boolean","window","location","hostname","match","initialState","isSignedIn","visibleDropdown","cartItems","combineReducers","undefined","action","toConsumableArray","currentFramework","indexOf","form","defineProperty","newState","objectWithoutProperties","_toPropertyKey","shopUser","shopCart","currentItems","newItem","currentItem","quantity","_state$cartItems","restItems","shopCart_toPropertyKey","currentCartItems","currentCartItem","persistConfig","storage","whitelist","persistedReducer","persistReducer","reducers","persistedStore","createStore","store","persistStore","persistedState","serializedState","sessionStorage","getItem","JSON","parse","loadState","middlewares","thunk","composedEnhancers","applyMiddleware","compose","subscribe","throttle","stringify","setItem","saveState","configureStore","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","history__WEBPACK_IMPORTED_MODULE_0__","createBrowserHistory","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","isArray","route","strict","activeClassName","arr","reduce","acc","current","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","array","MaterialLoaderComponent","customStyles","viewBox","cx","cy","r","fill","strokeWidth","strokeMiterlimit","message","defaultProps","signIn","signOut","_types__WEBPACK_IMPORTED_MODULE_0__","TabsComponent","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","activeTab","prevState","prevProps","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_max_projects_react_main_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","tabsHeader","tabsBody","_this2","child","react__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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","file":"static/js/main.cb0f8837.chunk.js","sourcesContent":["export const FETCH_USERS = \"FETCH_USERS\";\nexport const FETCH_USER = \"FETCH_USER\";\n\n\nexport const SELECT_SONG = \"SELECT_SONG\";\n\n\nexport const FETCH_POSTS = \"FETCH_POSTS\";\n\n\nexport const FETCH_FRAMEWORKS = \"FETCH_FRAMEWORKS\";\nexport const CHANGE_FRAMEWORK_STATUS = \"CHANGE_FRAMEWORK_STATUS\";\n\n\nexport const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\n\n\nexport const CREATE_STREAM = \"CREATE_STREAM\";\nexport const FETCH_STREAMS = \"FETCH_STREAMS\";\nexport const FETCH_STREAM = \"FETCH_STREAM\";\nexport const DELETE_STREAM = \"DELETE_STREAM\";\nexport const EDIT_STREAM = \"EDIT_STREAM\";\n\n\nexport const SHOP_USER_TYPES = {\n    SET_CURRENT_USER: \"SET_CURRENT_USER\"\n};\n\nexport const SHOP_CART_TYPES = {\n    TOGGLE_DROPDOWN: \"TOGGLE_DROPDOWN\",\n    ADD_ITEM: \"ADD_ITEM\",\n    REMOVE_ITEMS: \"REMOVE_ITEMS\",\n    REMOVE_ITEM: \"REMOVE_ITEM\",\n};\n\n","import axios from \"axios\";\n\nconst customAxios = axios.create({\n   baseURL: \"http://localhost:3001/api\",\n    // headers: {}\n});\n\ncustomAxios.CancelToken = axios.CancelToken;\ncustomAxios.isCancel = axios.isCancel;\n\nexport default customAxios;\n","import {SELECT_SONG} from \"./types\";\n\nexport const selectSong = (song) => ({\n    type: SELECT_SONG,\n    payload: {\n        song\n    }\n});\n","import axios from \"../../common/api/axios\";\nimport {FETCH_POSTS} from \"./types\";\n\n// dispatch и getState provided by redux-thunk\n// Тут с помощью redux-thunk получаю данные и кастомно вызываю диспатч с полученной датой\nexport const fetchPosts = () => async (dispatch, getState) => {\n    // могу получить весь стейт\n    // console.log(getState());\n\n    try {\n        const {data: posts} = await axios.get(\"posts\");\n\n        dispatch({\n            type: FETCH_POSTS,\n            payload: posts\n        });\n    } catch (e) {\n        console.log('Action fetchPosts error', e);\n    }\n};\n\n","import axios from \"../../common/api/axios\";\nimport {FETCH_USER, FETCH_USERS} from \"./types\";\n\nexport const fetchUsers = () => async (dispatch, getState) => {\n    try {\n        const {data: users} = await axios.get(\"users\");\n\n        dispatch({\n            type: FETCH_USERS,\n            payload: users\n        });\n\n\n    } catch(e) {\n        console.log('Action fetchUsers error', e);\n    }\n};\n\nexport const fetchUserById = (id) => async (dispatch, getState) => {\n    try {\n        const {data: user} = await axios.get(`users/${id}`);\n\n        dispatch({\n            type: FETCH_USER,\n            payload: user\n        });\n\n\n    } catch(e) {\n        console.log('Action fetchUser error', e);\n    }\n};\n\n// если хочу что-то замемоизировать то могу использовать _.memoize from lodash, минус - могу получить юзера только 1 раз\n// const _fetchUserById = _.memoize(async (id, dispatch) => {\n//     try {\n//         const {data: user} = await axios.get(`users/${id}`);\n//\n//         dispatch({\n//             type: \"FETCH_USER\",\n//             payload: user\n//         });\n//\n//\n//     } catch(e) {\n//         console.log('Action fetchUser error', e);\n//     }\n// });\n// export const fetchUserById = id => dispatch => _fetchUserById(id, dispatch);\n","import axios from \"../../common/api/axios\";\nimport {CHANGE_FRAMEWORK_STATUS, FETCH_FRAMEWORKS} from \"./types\";\n\nexport const fetchFrameworks = async (dispatch, getState) => {\n    try {\n        const {data: frameworks} = await axios.get(\"frameworks\");\n\n        dispatch({\n            type: FETCH_FRAMEWORKS,\n            payload: frameworks\n        });\n    } catch (e) {\n        console.log('Action fetchFrameworks error', e);\n    }\n};\n\nexport const changeFrameworkStatus = (framework) => ({\n    type: CHANGE_FRAMEWORK_STATUS,\n    payload: framework\n});\n","import {fetchPosts} from \"./posts\";\nimport {fetchUserById} from \"./users\";\nimport {onlyUnique} from \"../../common/helpers/helpers\";\n\n// пример общего экшена\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n    // объединенный экшн для вызова и постов и юзеров\n    // также обязательно оборачиваю егов dispatch на случай если внутренние экшены также делают диспатч\n    await dispatch(fetchPosts());\n\n    const userIds = getState().posts.map(({userId}) => userId);\n    const uniqUserIds = userIds.filter(onlyUnique);\n\n    // тут без await так как неважно в каком порядке загрузятся комменты\n    uniqUserIds.forEach(id => dispatch(fetchUserById(id)));\n};\n","import axios from \"../../common/api/axios\";\nimport {CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS} from \"./types\";\nimport history from \"../../history\";\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    try {\n        const {userId} = getState().auth;\n        const {data: stream} = await axios.post(\"/streams\", {...formValues, userId});\n\n        dispatch({\n            type: CREATE_STREAM,\n            payload: stream\n        });\n\n        // после того как создал иду на /stream (это для примера)\n        history.push(\"/stream\");\n\n    } catch (e) {\n        console.log(\"createStream post error \", e);\n    }\n};\n\nexport const fetchStreams = _ => async dispatch => {\n    try {\n        const {data: streams} = await axios.get(\"/streams\");\n\n        dispatch({\n            type: FETCH_STREAMS,\n            payload: streams\n        })\n    } catch (e) {\n        console.log(\"fetchStreams get error \", e);\n    }\n};\n\nexport const fetchStream = id => async dispatch => {\n    try {\n        const {data: stream} = await axios.get(`/streams/${id}`);\n\n        dispatch({\n            type: FETCH_STREAM,\n            payload: stream\n        })\n    } catch (e) {\n        console.log(\"fetchStream get error \", e);\n    }\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    try {\n        // в делит для примера делаю в парам, тут для примера в url, лучше вообще делать в пут чтобы не\n        // получать лишний запрос options\n        // patch а не put так как пут обычно перезатирает все проперти кроме id\n        const {data: stream} = await axios.patch(`/streams/${id}`, formValues);\n\n        dispatch({\n            type: EDIT_STREAM,\n            payload: stream\n        });\n\n        // после того как создал иду на /stream (это для примера)\n        history.push(\"/stream\");\n    } catch (e) {\n        console.log(\"editStream get error \", e);\n    }\n};\n\nexport const deleteStream = id => async dispatch => {\n    try {\n        const {data: stream} = await axios.delete(`/streams`, {\n            params: {id}\n        });\n\n        dispatch({\n            type: DELETE_STREAM,\n            payload: stream\n        })\n    } catch (e) {\n        console.log(\"deleteStream get error \", e);\n    }\n};\n","import {SHOP_USER_TYPES} from \"./types\";\n\nexport const shopSetCurrentUser = (currentUser) => ({\n    type: SHOP_USER_TYPES.SET_CURRENT_USER,\n    payload: currentUser\n});\n","import {SHOP_CART_TYPES} from \"./types\";\n\nexport const shopToggleDropdown = () => ({\n    type: SHOP_CART_TYPES.TOGGLE_DROPDOWN\n});\n\nexport const shopAddCartItem = (item) => ({\n    type: SHOP_CART_TYPES.ADD_ITEM,\n    payload: item\n});\n\nexport const shopRemoveCartItems = (item) => ({\n    type: SHOP_CART_TYPES.REMOVE_ITEMS,\n    payload: item\n});\n\nexport const shopRemoveCartItem = (item) => ({\n    type: SHOP_CART_TYPES.REMOVE_ITEM,\n    payload: item\n});\n\n","export * from \"./songs\";\nexport * from \"./posts\";\nexport * from \"./users\";\nexport * from \"./frameworks\";\nexport * from \"./postsAndUsers\";\nexport * from \"./auth\";\nexport * from \"./streams\";\nexport * from \"./shopUser\";\nexport * from \"./shopCart\";\n\n\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {fetchPostsAndUsers} from \"../../store/actions\";\nimport {convertArrayToObjById} from \"../../common/helpers/helpers\";\nimport \"./PostsAndUsers.scss\"\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        this.props.fetchPostsAndUsers();\n    }\n\n    render() {\n        const {posts, users} = this.props;\n\n        return (\n            <ul>\n                {\n                    posts.map(({title, id, body, userId}) => {\n\n                        return (\n                            <li key={id} className={'posts-and-users__item'}>\n                                <p><b>Post title:</b> {title}</p>\n                                <p><b>Post body:</b> {body}</p>\n                                {this.getAuthorContent(users[userId])}\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return (<div>Loading</div>);\n        }\n\n        const {name: userName} = user;\n\n        return (\n            <p><b>Author</b>: {userName}</p>\n        );\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts,\n    users: convertArrayToObjById(state.users)\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers\n})(PostsAndUsers);\n","import React from 'react';\n\nexport default ({title, body, index}) => (\n    <div>\n        <h3>Post: {index}</h3>\n        <p><b>{title}</b></p>\n        <p>{body}</p>\n    </div>\n);\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchUserById} from \"../../store/actions\";\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        const user = this.props.user;\n\n        if (!user) {\n            return null;\n        }\n\n        const {name} = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state, {userId}) => ({\n    user: findUser(state, userId)\n});\n\nexport default connect(mapStateToProps, {fetchUserById})(PostUser);\n\n\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтер то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.find(user => user.id === userId);\n}\n","import React, {Component} from 'react';\nimport {fetchPosts} from \"../../store/actions\";\nimport {connect} from \"react-redux\";\nimport Post from \"./Post\";\nimport PostUser from \"./PostUser\";\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const {posts} = this.props;\n\n        return (\n            <ul>\n                {\n                    posts.map((post, index) => {\n                        return (\n                            <li key={post.id}>\n                                <Post {...post} index={index} />\n                                <PostUser userId={post.userId}/>\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts\n});\n\nexport default connect(mapStateToProps, {fetchPosts})(PostList);\n","import React from 'react';\nimport './Song.scss';\n\nexport default ({title, selected, onSelect}) => {\n    const style = selected ? {backgroundColor: 'lightblue'} : null;\n\n    return (\n        <div className={'song'} style={style}>\n\n            <div>Title: {title}</div>\n\n            <button\n                onClick={onSelect.bind(this, title)}\n                type={'button'}\n            >\n                Get Details\n            </button>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nfunction SongDetails({selectedSong}) {\n    if (selectedSong) {\n        const {title, duration, likes} = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>Title: {title}</p>\n                <p>Duration: {duration}</p>\n                <p>Likes: {likes}</p>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <h4>Details</h4>\n                <p>No Selected song</p>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import React, {Component} from 'react';\nimport Song from \"./Song\";\nimport {connect} from \"react-redux\";\nimport {selectSong} from \"../../store/actions\";\nimport SongDetails from \"./SongDetails\";\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className={'song-list'}>\n                    {this.getSongsList()}\n                </ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const {songs, selectedSong, selectSong} = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong ? selectedSong.song.title === song.title : null;\n\n            return (\n                <li key={index}>\n                    <Song {...song} selected={isSelected} onSelect={selectSong.bind(this, song)} />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: (song) => {\n        // console.log(ownProps);\n        dispatch(selectSong(song))\n    }\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","import React from \"react\";\n\nexport default ({name, progress, onChange}) => (\n    <div className={'framework'}>\n        <p>Name: {name}</p>\n        <label>Progress:\n            <input type=\"checkbox\"\n                   checked={progress === \"done\"}\n                   onChange={onChange}\n                   ref={el => el && (el.indeterminate = progress === \"indeterminate\")}\n            />\n        </label>\n    </div>\n);\n","import React, {Component} from \"react\";\nimport Framework from \"./Framework\";\nimport {connect} from \"react-redux\";\nimport * as fromActions from \"../../store/actions\"\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.getFrameworkList()}\n            </ul>\n        );\n    }\n\n    getFrameworkList() {\n        const {frameworks, changeFrameworkStatus} = this.props;\n\n        return (\n            frameworks.map((framework, index) => {\n                return (\n                    <li key={index}>\n                        <Framework onChange={changeFrameworkStatus.bind(this, framework)} {...framework} />\n                    </li>\n                );\n            })\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: (framework) => {\n        switch (framework.progress) {\n            case \"done\": {\n                framework.progress = null;\n                break;\n            }\n            case \"indeterminate\": {\n                framework.progress = \"done\";\n                break;\n            }\n            default: {\n                framework.progress = \"indeterminate\";\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import React, {Component} from 'react';\nimport {TabsComponent} from \"../tabs/Tabs\";\nimport PostsAndUsers from \"../posts-and-users/PostsAndUsers\";\nimport PostList from \"../post/PostList\";\nimport SongList from \"../song/SongList\";\nimport FrameworkList from \"../framework/FrameworkList\";\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <TabsComponent>\n                <div tabName=\"PostsAndUsers\">\n                    <PostsAndUsers />\n                </div>\n\n                <div tabName=\"Post\">\n                    <PostList />\n                </div>\n\n                <div tabName=\"SongList\">\n                    <SongList prop={'test'}/>\n                </div>\n\n                <div tabName=\"Frameworks\">\n                    <FrameworkList />\n                </div>\n            </TabsComponent>\n        );\n    }\n}\n\n\n","import React from \"react\";\n\nexport default () => <h4>RouterExactRoute</h4>;\n","import React from \"react\";\n\nexport default () => <h4>RouterRoute1</h4>;\n","import React from \"react\";\nimport NotFound from \"../components/NotFound\";\nimport {Route, Switch} from \"react-router-dom\";\nimport MainMenu from \"../components/menu/MainMenu\";\nimport RouterExactRoute from \"../components/router/RouterExactRoute\";\nimport RouterRoute1 from \"../components/router/RouterRoute1\";\n\nconst RouterLazyRoute = React.lazy(() => import('../components/router/RouterLazyRoute'));\n\nexport default () => {\n    return (\n        <>\n            <h3>Router examples</h3>\n\n            <MainMenu routes={[\n                {to: \"/router/exact\", title: \"RouterExactRoute\"},\n                {to: \"/router/route1\", title: \"RouterRoute1\"},\n                {to: \"/router/lazy\", title: \"RouterLazyRoute\"},\n                {to: \"/router/*\", title: \"RouterLazyNotFound\"},\n            ]}/>\n            {/*покажет только первый найденный роут*/}\n            <Switch>\n\n                {/* Этот роутер закомментировал так как если раскоментить то он будет\n                    покажется сразу при переходе на /router как и RouterExactRoute\n                    это чисто для примера что такое exact\n                    <Route path=\"/router\" exact component={RouterExactRoute}/>\n                */}\n                <Route path=\"/router/exact\" exact component={RouterExactRoute}/>\n                <Route path=\"/router/route1\" component={RouterRoute1}/>\n                <Route path=\"/router/lazy\" component={RouterLazyRoute}/>\n                <Route path=\"/router/*\">\n                    <NotFound>\n                        Router not found\n                    </NotFound>\n                </Route>\n            </Switch>\n\n        </>\n    );\n}\n","import React from 'react';\n\nexport default React.createContext(\"ru\");\n","import React, {useContext} from 'react';\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const text = language === \"en\" ? \"Submit\" : \"Подтвердить\";\n\n    return (\n        <button type=\"button\">{text}</button>\n    );\n}\n\n\n// раньше надо было делать через класс или consumer но с 16.8 можно использовать useContext\n// export default class ContextButton extends Component {\n//     static contextType = LanguageContext;\n//\n//     render() {\n//         console.log(this.context);\n//\n//         const text = this.context === \"en\" ? \"Submit\" : \"Подтвердить\";\n//\n//         return (\n//             <button type=\"button\">{text}</button>\n//         );\n//     }\n// }\n\n// вариант как делалось раньше через LanguageContext.Consumer\n// export default () => {\n//     return (\n//         <button type=\"button\">\n//             <LanguageContext.Consumer>\n//                 {(value) => value === \"en\" ? \"Submit\" : \"Подтвердить\"}\n//             </LanguageContext.Consumer>\n//\n//         </button>\n//     );\n// }\n\n","import React, {useContext} from 'react';\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const label = language === \"en\" ? \"Name\" : \"Имя\";\n\n    return (\n        <p>\n            <label htmlFor=\"contextFieldName\">{label}</label>\n            <input type=\"text\" id=\"contextFieldName\"/>\n        </p>\n    );\n}\n","import React from 'react';\nimport ContextButton from \"./ContextButton\";\nimport ContextField from \"./ContextField\";\n\nexport default () => (\n    <div>\n        <ContextField/>\n        <ContextButton/>\n    </div>\n);\n","import React, {Component} from 'react';\nimport \"./ContextTest.scss\";\nimport ContextCreate from \"./ContextCreate\";\nimport LanguageContext from \"../../context/LanguageContext\";\n\nexport default class ContextTest extends Component {\n    state = {\n        language: \"en\"\n    };\n    render() {\n        return (\n            <div className=\"context-test\">\n                Select language:\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, \"en\")}>en</a>\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, \"ru\")}>ru</a>\n\n                <LanguageContext.Provider value={this.state.language}>\n                    <ContextCreate/>\n                </LanguageContext.Provider>\n            </div>\n        );\n    }\n\n    onLanguageChange = (language, event) => {\n        event.preventDefault();\n\n        this.setState({\n            language\n        });\n    }\n}\n","// сделаю пример на контексте потом перепишу на хуки\nimport React from \"react\";\n\nexport default React.createContext(\"default\");\n","import ThemeContext from \"../../context/ThemeContext\";\nimport React, {Component} from \"react\";\n\nexport class ThemeContextStore extends Component {\n    state = {\n        theme: \"default\"\n    };\n\n    render() {\n        return (\n            <ThemeContext.Provider value={{...this.state, onThemeChange: this.onThemeChange}}>\n                {this.props.children}\n            </ThemeContext.Provider>\n        );\n    }\n\n    onThemeChange = (event) => {\n        const htmlElement = document.documentElement;\n        const theme = event.target.value;\n\n        switch (theme) {\n            case \"default\": {\n                htmlElement.classList.remove(\"theme1\", \"theme2\");\n                break;\n            }\n\n            default: {\n                htmlElement.classList.remove(\"theme1\", \"theme2\");\n                htmlElement.classList.add(theme);\n            }\n        }\n\n        this.setState({theme});\n    }\n}\n","import React, {useContext} from \"react\";\nimport ThemeContext from \"../../context/ThemeContext\";\n\nexport default () => {\n    const {value, onThemeChange} = useContext(ThemeContext);\n\n    return (\n        <select value={value} onChange={onThemeChange}>\n            <option value=\"default\">default</option>\n            <option value=\"theme1\">theme1</option>\n            <option value=\"theme2\">theme2</option>\n        </select>\n    );\n}\n","import React, {Component, Suspense} from 'react';\nimport './App.scss';\n// просто для примера инжекчу доки\nimport {ReduxComponent} from \"./components/redux/Redux\";\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport MaterialLoaderComponent from \"./components/loader/MaterialLoader\";\nimport NotFound from \"./components/NotFound\";\nimport MainMenu from \"./components/menu/MainMenu\";\nimport RouterPage from \"./pages/RouterPage\";\nimport history from \"./history\";\nimport ContextTest from \"./components/context/ContextTest\";\nimport {ThemeContextStore} from \"./components/theme/ThemeContextStore\";\nimport ThemeSelector from \"./components/theme/ThemeSelector\";\n\n\nconst ReactPage = React.lazy(() => import('./pages/ReactPage'));\nconst LazyPage = React.lazy(() => import('./pages/LazyPage'));\nconst StreamPage = React.lazy(() => import('./pages/StreamPage'));\nconst HooksPage = React.lazy(() => import('./pages/HooksPage'));\nconst ShopPage = React.lazy(() => import('./pages/ShopPage'));\n\n\nclass App extends Component {\n\n\n    render() {\n        return (\n            <ThemeContextStore>\n                {/*Связываю ThemeContextStore с ThemeSelector через context*/}\n                <ThemeSelector/>\n\n                <div className=\"app\">\n                    <main className=\"app__main\">\n                        {/*Если хочу иметь возможность кастомно переключать роуты из кода а не по кликам то\n                    меняю BrowserRouter, который не поддерживает свойство history={history} (кастомный объект\n                     history, а умеет только свой) на Router*/}\n                        <Router history={history}>\n                            <MainMenu routes={\n                                [\n                                    {to: \"/shop\", title: \"Shop\"},\n                                    {to: \"/redux\", title: \"Redux\"},\n                                    {to: \"/react\", title: \"React\"},\n                                    {to: \"/router\", title: \"Router\"},\n                                    {to: \"/stream\", title: \"Stream\"},\n                                    {to: \"/lazy\", title: \"Lazy\"},\n                                    {to: \"/context\", title: \"Context\"},\n                                    {to: \"/hooks\", title: \"Hooks\"},\n                                    {to: \"/unknown\", title: \"Unknown\"},\n                                ]\n                            }/>\n                            {/*При переключении роутера будет показываться MaterialLoaderComponent, за это отвечает Suspense*/}\n                            <Suspense fallback={<MaterialLoaderComponent/>}>\n                                {/*покажет только первый найденный роут*/}\n                                <Switch>\n                                    <Route path=\"/shop\" component={ShopPage}/>\n                                    <Route path=\"/redux\" exact component={ReduxComponent}/>\n                                    <Route path=\"/react\" component={ReactPage}/>\n                                    <Route path=\"/router\" component={RouterPage}/>\n                                    <Route path=\"/hooks\" component={HooksPage}/>\n                                    <Route path=\"/stream\" component={StreamPage}/>\n                                    <Route path=\"/lazy\" component={LazyPage}/>\n                                    <Route path=\"/context\" component={ContextTest}/>\n                                    <Route path=\"*\">\n                                        <NotFound history={history}/>\n                                    </Route>\n                                </Switch>\n                            </Suspense>\n                        </Router>\n                    </main>\n                </div>\n            </ThemeContextStore>\n        );\n    }\n}\n\nexport default App;\n\n\n// disable back navigation\n// window.history.pushState(null, null, window.location.href);\n// window.onpopstate = function() {\n//     window.history.go(1);\n// };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_POSTS} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case FETCH_POSTS: {\n            return [...action.payload];\n        }\n\n        default: {\n            return state;\n        }\n    }\n\n};\n","import {CHANGE_FRAMEWORK_STATUS, FETCH_FRAMEWORKS} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_FRAMEWORKS: {\n            return action.payload;\n        }\n\n        case CHANGE_FRAMEWORK_STATUS: {\n            const currentFramework = action.payload;\n\n            // вариант через преобразование в объект и обратно\n            // const entities = convertArrayToObjById(state);\n            // entities[currentFramework.id] = {...currentFramework};\n            // return convertObjToArrById(entities);\n\n            // вариант через массив\n            const index = state.indexOf(currentFramework);\n            state[index] = {...action.payload};\n            return [...state];\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {FETCH_USER} from \"../actions/types\";\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_USER: {\n            return [...state, action.payload];\n        }\n        default: {\n            return state;\n        }\n    }\n};\n","import {SIGN_IN, SIGN_OUT} from \"../actions/types\";\n\nconst initialState = {\n    isSignedIn: null,\n    userId: null\n};\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case SIGN_IN: {\n            return {\n                ...state,\n                isSignedIn: true,\n                userId: action.payload\n            };\n        }\n\n        case SIGN_OUT: {\n            return {\n                ...state,\n                isSignedIn: false,\n                userId: null\n            };\n        }\n\n        default: {\n            return state;\n        }\n    }\n\n}\n","import {CREATE_STREAM, DELETE_STREAM, EDIT_STREAM, FETCH_STREAM, FETCH_STREAMS} from \"../actions/types\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_STREAM:\n        case EDIT_STREAM:\n        case FETCH_STREAM: {\n            if (action.payload.id) {\n                return {...state, [action.payload.id]: action.payload};\n            }\n\n            return state;\n        }\n\n        case FETCH_STREAMS: {\n            return {...state, ...action.payload};\n        }\n\n        case DELETE_STREAM: {\n            const {[action.payload.id]: removed, ...newState} = state;\n            return {...newState};\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import {SHOP_USER_TYPES} from \"../actions/types\";\n\nconst initialState = {\n    currentUser: null\n};\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n        case SHOP_USER_TYPES.SET_CURRENT_USER: {\n            return {\n                ...state,\n                currentUser: action.payload\n            }\n        }\n\n        default:\n            return state;\n\n    }\n\n}\n","import {SHOP_CART_TYPES} from \"../actions/types\";\n\nconst initialState = {\n    visibleDropdown: null,\n    cartItems: {}\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SHOP_CART_TYPES.TOGGLE_DROPDOWN: {\n            return {\n                ...state,\n                visibleDropdown: !state.visibleDropdown\n            }\n        }\n\n        case SHOP_CART_TYPES.ADD_ITEM: {\n            const currentItems = state.cartItems;\n            const newItem = action.payload;\n\n            let currentItem = currentItems[newItem.id];\n\n            if (currentItem) {\n                currentItem.quantity += 1;\n                currentItem = {...currentItem};\n            } else {\n                currentItems[newItem.id] = {\n                    ...newItem,\n                    quantity: 1\n                };\n            }\n\n            return {\n                ...state,\n                cartItems: {...currentItems}\n            }\n        }\n\n        case SHOP_CART_TYPES.REMOVE_ITEMS: {\n            const {[action.payload.id]: removed, ...restItems} = state.cartItems;\n\n            return {\n                ...state,\n                cartItems: {...restItems}\n            }\n        }\n\n        case SHOP_CART_TYPES.REMOVE_ITEM: {\n            let currentCartItems = state.cartItems;\n            const currentCartItem = currentCartItems[action.payload.id];\n\n            currentCartItem.quantity -= 1;\n\n            if (currentCartItem.quantity <= 0) {\n                delete currentCartItems[action.payload.id];\n            } else {\n                currentCartItems[action.payload.id] = {...currentCartItem};\n            }\n\n            return {\n                ...state,\n                cartItems: {...currentCartItems}\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n","import {combineReducers} from \"redux\";\nimport {reducer as form} from \"redux-form\";\nimport songs from \"./songs\";\nimport selectedSong from \"./selectSong\";\nimport posts from \"./posts\";\nimport frameworks from \"./frameworks\";\nimport users from \"./users\";\nimport auth from \"./auth\";\nimport streams from \"./streams\";\nimport shopUser from \"./shopUser\";\nimport shopCart from \"./shopCart\";\n\n\n// простой вызов combineReducers({}) вызовет ошибку, поэтому передаю в него пустую функцию для стабы пока не\n// будет нормальных редьюсеров, например combineReducers({replaceMe: () => 1})\nexport default combineReducers({\n    songs,\n    selectedSong,\n    posts,\n    frameworks,\n    users,\n    auth,\n    form,\n    streams,\n    shopUser,\n    shopCart,\n});\n","export default () => [\n    {title: \"Imagine dragons\", duration: \"4:05\", likes: 100},\n    {title: \"Animal instinct\", duration: \"4:13\", likes: 110},\n    {title: \"Daemons\", duration: \"3:45\", likes: 120},\n    {title: \"Radioactive\", duration: \"1:45\", likes: 130},\n];\n","import {SELECT_SONG} from \"../actions/types\";\n\nconst selectedSongReducerInitialState = null;\n\nexport default (state = selectedSongReducerInitialState, action) => {\n    switch (action.type) {\n        case SELECT_SONG: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n","import thunk from \"redux-thunk\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport reducers from \"./reducers\";\nimport {loadState, saveState} from \"./session-storage\";\nimport {throttle} from \"lodash\";\nimport storage from 'redux-persist/lib/storage'\nimport {persistReducer, persistStore} from \"redux-persist\"; // defaults to localStorage for web\n\n// для того чтобы кучу логики не хранить в index.js про стор, вынес в отдельный файл\nfunction configureStore() {\n    const initState = {};\n    // забираю стор из локалстораджа\n    const persistedState = loadState();\n\n    // logger выводит в консоль все изменения стора, пока закомментирую чтобы не мешал\n    // const middlewares = [thunk, logger];\n    const middlewares = [thunk];\n    const middlewareEnhancer = applyMiddleware(...middlewares);\n\n    // monitorReducerEnhancer - выводит время работы каждого редьюсера\n    // const enhancers = [middlewareEnhancer, monitorReducerEnhancer];\n    const enhancers = [middlewareEnhancer];\n\n    // нужно чтобы заработали дев тулы\n    const composedEnhancers = process.env.NODE_ENV !== 'production'\n        ? composeWithDevTools(...enhancers)\n        : compose(applyMiddleware(...[thunk]));\n\n    // Creates a Redux store that holds the state tree.\n    const store = createStore(\n        reducers,\n        // либо беру из локалстораджа либо инит\n        persistedState || initState,\n        // должен все enhancers объединять в один, так как createStore может принимать только 1 аргумент enhancers\n        composedEnhancers,\n    );\n\n    // throttle чтобы часто не вызывать дорогую JSON.parse хотябы 1 раз в секунду\n    store.subscribe(throttle(() => {\n        const state = store.getState();\n\n        saveState({\n            // сохраняю только дату которую получил с бе но не сохраняю вью дату\n            songs: state.songs,\n            shopCart: state.shopCart\n        });\n    }, 1000));\n\n    return store\n}\n\n\n// как альтернатива прямой записи в session и local storage, но на мой взгляд чище то что Дэн Абрамов предложил через сабскрайб, см выше\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: [\"shopCart\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\nconst persistedStore = createStore(persistedReducer);\nconst persistor = persistStore(persistedStore);\n\nexport { persistedStore, persistor };\n/////////////////////////////\n\n\n\nconst store = configureStore();\n\nexport default store;\n","export function loadState() {\n    try {\n        const serializedState = sessionStorage.getItem(\"state\");\n\n        if (serializedState === null) return undefined;\n\n        return JSON.parse(serializedState);\n    } catch (e) {\n        return undefined;\n    }\n}\n\nexport function saveState(state) {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem('state', serializedState);\n    } catch (e) {\n        console.log(\"saveState in sessionStorage error \", e);\n    }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store/configureStore\";\n\n\n// обычно с редаксом\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n/*\n// пример использования redux-persist, но использую прямую запись в локал/сешшион сторадж\n<Provider store={persistedStore}>\n    <PersistGate loading={null} persistor={persistor}>\n        <App/>\n    </PersistGate>\n</Provider>\n */\n","/*Если хочу иметь возможность кастомно переключать роуты из кода а не по кликам то\nменяю BrowserRouter, который не поддерживает свойство history={history} (кастомный объект\n history, а умеет только свой) на Router*/\nimport {createBrowserHistory} from 'history';\n\nexport default createBrowserHistory();\n","import React from 'react';\n\nexport default ({children}) => children ? children : <div>Page not found</div>;\n","import {NavLink} from \"react-router-dom\";\nimport React from 'react';\nimport \"./MainMenu.scss\";\n\nexport default ({routes, exact}) => {\n\n    if (Array.isArray(routes)) {\n        return (\n            <ul className=\"main-menu\">\n                {\n                    routes.map((route, index) => {\n                        return (\n                            <li className=\"main-menu__item\" key={index}>\n                                {/*тоже что и Link только с возможностью стилизации*/}\n                                <NavLink\n                                    exact={!!exact}\n                                    strict\n                                    activeClassName=\"_active\"\n                                    className=\"main-menu__link\"\n                                    to={route.to}\n                                >\n                                    {route.title}\n                                </NavLink>\n                            </li>\n                        );\n                    })\n                }\n            </ul>\n        );\n    } else {\n        return (\n            <p>\n                there are no routes for you\n            </p>\n        );\n    }\n\n}\n","export function convertArrayToObjById(arr) {\n    return arr.reduce((acc, current) => {\n        return {\n            ...acc,\n            [current.id]: current\n        }\n    }, {})\n}\n\nexport function convertObjToArrById(obj) {\n    return Object.keys(obj).map(id => obj[id]);\n}\n\nexport function onlyUnique(value, index, array) {\n    return array.indexOf(value) === index;\n}\n","import React from 'react';\nimport './MaterialLoader.scss';\n\nexport default function MaterialLoaderComponent(props) {\n    return (\n        <div className=\"material-loader\" style={props.customStyles}>\n            <svg className=\"material-loader__svg\" viewBox=\"25 25 50 50\">\n                <circle className=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\"\n                        strokeMiterlimit=\"10\"/>\n            </svg>\n            <p className=\"material-loader__text\">{props.message}</p>\n        </div>\n    );\n}\n\n// Так задаю дефолтные проперти для компоненты (класса или функции)\nMaterialLoaderComponent.defaultProps = {\n    message: \"Loading...\"\n};\n","import {SIGN_IN, SIGN_OUT} from \"./types\";\n\nexport const signIn = (userId) => ({\n    type: SIGN_IN,\n    payload: userId\n});\n\nexport const signOut = () => ({\n    type: SIGN_OUT\n});\n","import React, {Component} from 'react';\nimport './Tabs.scss'\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0\n    };\n\n    render() {\n        let tabsHeader;\n        let tabsBody;\n\n        if (this.props.children) {\n\n            // get header\n            tabsHeader = this.props.children.map((child, index) => {\n                return (\n                    <div\n                        onClick={this.onClick.bind(this, index)}\n                        key={index}\n                        className={\n                            \"tabs__header-item\" +\n                            (index === this.state.activeTab ? ' _active' : '')\n                        }\n                    >\n                        {child.props.tabName}\n                    </div>\n                );\n            });\n\n            // get body\n            tabsBody = this.props.children.map((child, index) => {\n                if (index === this.state.activeTab) {\n                    return (\n                        <div\n                            className=\"tabs__content-item\"\n                            key={index}\n                        >\n                            {child.props.children}\n                        </div>\n                    );\n                } else {\n                    return \"\";\n                }\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">\n                        {tabsHeader}\n                    </div>\n                    <div className=\"tabs__content\">\n                        {tabsBody}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    onClick = (index) => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index\n        }));\n    }\n\n}\n"],"sourceRoot":""}