{"version":3,"sources":["../node_modules/redux-form/es/index.js","../node_modules/reselect/es/index.js","store/selectors/shopUser.js","store/selectors/shopCart.js","store/selectors/streams.js","store/selectors/auth.js","store/selectors/users.js","components/google-auth/GoogleAuth.js","components/stream/StreamForm.js","components/stream/StreamCreateHooks.js","components/stream/StreamEditHooks.js","components/stream/StreamShowHooks.js","components/stream/Stream.js","components/stream/stream-list-hooks/StreamControls.js","components/portals/modal/ModalPortal.js","components/stream/stream-list-hooks/StreamList.js","components/stream/StreamListHooks.js","pages/StreamPage.js"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","i","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","push","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","createStructuredSelector","selectors","selectorCreator","objectKeys","Object","keys","key","_len3","values","_key3","reduce","composition","value","index","selectShopCurrentUser","state","shopUser","shopuser","currentUser","selectShopCart","shopCart","selectShopCartItems","cartItems","selectShopCartQuantity","acc","quantity","selectShopCartVisibleDropdown","visibleDropdown","selectShopCartTotal","price","selectStreams","streams","selectStreamsById","id","selectAuth","auth","selectAuthIsSignedIn","isSignedIn","selectAuthUserId","userId","selectUsers","users","selectIsLoadingUsers","isLoadingUsers","selectUsersArray","GoogleAuth","Component","authStatusChange","this","props","signIn","get","getId","signOut","e","preventDefault","signInData","console","log","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","render","href","onClick","connect","ownProps","StreamForm","onSubmit","formValues","dispatch","renderTextField","input","meta","label","mandatory","htmlFor","form","name","type","autoComplete","style","color","visited","error","renderMemoField","touched","handleSubmit","valid","Field","component","disabled","reduxForm","validate","errors","title","memo","useDispatch","useCallback","createStream","to","match","stream","useSelector","useEffect","cancelToken","customAxios","CancelToken","source","fetchStream","token","cancel","editStream","description","initialValues","className","currentUserId","onDeleteClick","controls","ReactDOM","createPortal","document","querySelector","useState","streamToDelete","setStreamToDelete","onModalDeleteButtonClick","deleteStream","onModalHideButtonClick","entries","Stream","StreamControls","fetchStreams","StreamList","MainMenu","exact","routes","path","StreamListHooks","StreamCreateHooks","StreamEditHooks","StreamShowHooks","NotFound"],"mappings":"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","file":"static/js/11.d1a8c5d3.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\n\nconst selectShopUser = state => state.shopUser;\n\nexport const selectShopCurrentUser = createSelector(\n    [selectShopUser],\n    shopuser => shopuser.currentUser\n);\n","import { createSelector } from \"reselect\";\n\nconst selectShopCart = state => state.shopCart;\n\nexport const selectShopCartItems = createSelector(\n    // прямо как в ngrx, первый аргумент - предыдущие стейты, второй собственно сам селектор\n    [selectShopCart],\n    shopCart => shopCart.cartItems\n);\n\nexport const selectShopCartQuantity = createSelector(\n    [selectShopCartItems],\n    cartItems =>\n        Object.values(cartItems).reduce(\n            (acc, { quantity }) => acc + quantity,\n            0\n        )\n);\n\nexport const selectShopCartVisibleDropdown = createSelector(\n    [selectShopCart],\n    shopCart => shopCart.visibleDropdown\n);\n\nexport const selectShopCartTotal = createSelector(\n    [selectShopCartItems],\n    cartItems =>\n        Object.values(cartItems).reduce(\n            (acc, { quantity, price }) => acc + quantity * price,\n            0\n        )\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectStreams = state => state.streams;\n\nexport const selectStreamsById = createSelector(\n    [selectStreams, (state, id) => id],\n    (selectStreams, id) => selectStreams[id]\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectAuth = state => state.auth;\n\nexport const selectAuthIsSignedIn = createSelector(\n    [selectAuth],\n    selectAuth => selectAuth.isSignedIn\n);\n\nexport const selectAuthUserId = createSelector(\n    [selectAuth],\n    selectAuth => selectAuth.userId\n);\n","import { createSelector } from \"reselect\";\n\nexport const selectUsers = state => state.users;\n\nexport const selectIsLoadingUsers = createSelector(\n    [selectUsers],\n    selectUsers => selectUsers.isLoadingUsers\n);\n\nexport const selectUsersArray = createSelector([selectUsers], selectUsers =>\n    Object.values(selectUsers.users)\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn, signOut } from \"../../store/actions/auth\";\n\nclass GoogleAuth extends Component {\n    // так как перевел на редакс, то стейт хранить уже не нужно, но для примера оставлю и в стейте!!!\n    // state = {\n    //     isSignedIn: null\n    // };\n\n    componentDidMount() {\n        window.gapi &&\n            window.gapi.load(\"client:auth2\", () => {\n                window.gapi.client\n                    .init({\n                        clientId:\n                            \"356527932784-volcn5md0nd1eg5nc2hn30cd6a6oeclf.apps.googleusercontent.com\",\n                        scope: \"email\"\n                    })\n                    .then(\n                        () => {\n                            this.auth = window.gapi.auth2.getAuthInstance();\n\n                            this.auth.isSignedIn.listen(this.authStatusChange);\n\n                            // так как перевел на редакс, то стейт хранить уже не нужно, но для примера оставлю и в стейте!!!\n                            // this.setState({isSignedIn: this.auth.isSignedIn.get()});\n\n                            // кидаю экшены в редакс на коллбек auth\n                            this.authStatusChange(this.auth.isSignedIn.get());\n\n                            // console.log(\"GoogleAuth gapi.client.init inited\");\n                        },\n                        () => console.log(\"GoogleAuth gapi.client.init error\")\n                    );\n            });\n    }\n\n    authStatusChange = isSignedIn => {\n        // сохраняю в стейт\n        // логиню юзера по id\n        isSignedIn\n            ? this.props.signIn(this.auth.currentUser.get().getId())\n            : this.props.signOut();\n\n        // так как перевел на редакс, то стейт хранить уже не нужно, но для примера оставлю и в стейте!!!\n        // this.setState({\n        //     isSignedIn\n        // });\n\n        // console.log(\"User auth status changed to: \", isSignedIn);\n    };\n\n    signIn = async e => {\n        e.preventDefault();\n\n        try {\n            const signInData = await this.auth.signIn();\n            console.log(\"User signed in \", signInData);\n        } catch (e) {\n            console.log(\"GoogleAuth signIn error \", e);\n        }\n    };\n\n    signOut = async e => {\n        e.preventDefault();\n\n        try {\n            await this.auth.signOut();\n            console.log(\"User signed out.\");\n        } catch (e) {\n            console.log(\"GoogleAuth signed out error \", e);\n        }\n    };\n\n    render() {\n        // const {isSignedIn} = this.state;\n\n        // так как перевел на редакс, то стейт хранить уже не нужно, но для примера оставлю и в стейте!!!\n        const { isSignedIn } = this.props;\n\n        if (isSignedIn === null) {\n            return \"Auth is loading...\";\n        }\n\n        return (\n            <>\n                {isSignedIn ? (\n                    <a href=\"/\" onClick={this.signOut}>\n                        Sign out\n                    </a>\n                ) : (\n                    <a href=\"/\" onClick={this.signIn}>\n                        Sign in\n                    </a>\n                )}\n\n                <div>Google auth</div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    isSignedIn: state.auth.isSignedIn\n});\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import React, { Component } from \"react\";\nimport { Field, reduxForm, reset } from \"redux-form\";\n\nclass StreamForm extends Component {\n    render() {\n        const { handleSubmit, valid } = this.props;\n\n        return (\n            <form onSubmit={handleSubmit(this.onSubmit)}>\n                <Field\n                    component={this.renderTextField}\n                    name=\"title\"\n                    label=\"Enter title\"\n                    mandatory\n                />\n                <Field\n                    component={this.renderMemoField}\n                    name=\"description\"\n                    label=\"Enter description\"\n                    mandatory={false}\n                />\n                <button type=\"submit\" disabled={!valid}>\n                    Submit\n                </button>\n            </form>\n        );\n    }\n\n    onSubmit = formValues => {\n        this.props.onSubmit(formValues);\n        // clear form fields\n        this.props.dispatch(reset(\"streamCreate\"));\n    };\n\n    renderTextField = ({ input, meta, label, mandatory }) => {\n        // input и meta - это набор свойств от redux-form для полей, прикольно что input даже initialValue есть\n        // input - инфаа об инпуте\n        // meta - метаинфа о филде\n        // console.log(input, meta);\n\n        return (\n            <>\n                <label htmlFor={meta.form + input.name}>\n                    {label}\n                    {mandatory && <sup>*</sup>}\n                </label>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    id={meta.form + input.name}\n                    {...input}\n                />\n                <p style={{ color: \"red\" }}>{meta.visited && meta.error}</p>\n            </>\n        );\n    };\n\n    renderMemoField = ({ input, meta, label, mandatory }) => {\n        return (\n            <>\n                <label htmlFor={meta.form + input.name}>\n                    {label}\n                    {mandatory && <sup>*</sup>}\n                </label>\n                <textarea id={meta.form + input.name} {...input} />\n                <p style={{ color: \"red\" }}>{meta.touched && meta.error}</p>\n            </>\n        );\n    };\n}\n\nfunction validate(formValues) {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = \"Please fill title\";\n    }\n\n    return errors;\n}\n\nexport default reduxForm({\n    form: \"streamForm\",\n    validate\n})(StreamForm);\n","import React, { memo, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStream } from \"../../store/actions\";\nimport StreamForm from \"./StreamForm\";\n\nexport default memo(() => {\n    const dispatch = useDispatch();\n    // хоть чайлд и использует memo(() => {}) все равно должен использовать useCallback, чтобы замемоизировать функцию которую прокидываю\n    // в проперти чайлда, иначе чайлд будет постоянно ререндериться\n    const onSubmit = useCallback(\n        formValues => dispatch(createStream(formValues)),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <StreamForm onSubmit={onSubmit} />\n\n            <p>\n                <Link to=\"/stream\">Go to stream list -&gt;</Link>\n            </p>\n        </>\n    );\n});\n","import React, { memo, useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { editStream, fetchStream } from '../../store/actions';\nimport StreamForm from './StreamForm';\nimport customAxios from '../../common/api/axios';\n\nexport default memo(({ match }) => {\n    const dispatch = useDispatch();\n    const stream = useSelector(state => state.streams[match.params.id]);\n\n    useEffect(() => {\n        const cancelToken = customAxios.CancelToken.source();\n        dispatch(fetchStream(match.params.id, cancelToken.token));\n\n        return () => {\n            cancelToken.cancel(`Cancel fetchStream ${match.params.id}`);\n        };\n    }, [dispatch, match.params.id]);\n\n    const onSubmit = useCallback(formValues => dispatch(editStream(match.params.id, formValues)), [\n        dispatch,\n        match.params.id\n    ]);\n\n    if (stream) {\n        const { title, description } = stream;\n\n        return (\n            <>\n                <h3>Edit stream</h3>\n                <StreamForm initialValues={{ title, description }} onSubmit={onSubmit} />\n\n                <p>\n                    <Link to=\"/stream\">Go to stream list -&gt;</Link>\n                </p>\n            </>\n        );\n    }\n    return <div>...Loading</div>;\n});\n","import React, { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStream } from '../../store/actions';\nimport { selectStreamsById } from '../../store/selectors';\n\nexport default memo(({ match }) => {\n    const dispatch = useDispatch();\n    const stream = useSelector(state => selectStreamsById(state, match.params.id));\n\n    useEffect(() => {\n        dispatch(fetchStream(match.params.id));\n    }, [dispatch, match]);\n\n    if (stream) {\n        return (\n            <>\n                <h3>Stream show</h3>\n                <p>\n                    Stream title:\n                    {stream.title}\n                </p>\n                <p>\n                    Stream description:\n                    {stream.description}\n                </p>\n                <Link to=\"/stream\">Go to stream list</Link>\n            </>\n        );\n    }\n    return <div>...Loading</div>;\n});\n","import React from \"react\";\n\nexport default ({ title, description }) => (\n    <div className=\"stream\">\n        <p className=\"stream__title\">{title}</p>\n        <p className=\"stream__description\">{description}</p>\n    </div>\n);\n","import { Link } from \"react-router-dom\";\nimport React, { memo } from \"react\";\n\nexport default memo(({ stream, currentUserId, onDeleteClick }) => {\n    const { userId, id } = stream;\n\n    if (userId === currentUserId) {\n        return (\n            <div className=\"stream-list__controls\">\n                <Link to={`/stream/edit/${id}`}>Edit</Link>\n                <button type=\"button\" onClick={onDeleteClick}>\n                    Delete\n                </button>\n            </div>\n        );\n    }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./ModalPortal.scss\";\n\n// если в названии поставить [name].module.scss то соберется как css модуль а не просто jsка\n\nexport default ({ title, controls }) => {\n    // если передать 2м аргументом document.body, то этот портал перетрет все что есть в боди, поэтому\n    // создаю див с id в index.html куда хочу рендерить этот портал\n    return ReactDOM.createPortal(\n        <div className=\"modal-portal\">\n            <div className=\"modal-portal__inner\">\n                <p>{title}</p>\n\n                <div className=\"modal-portal__controls\">{controls}</div>\n            </div>\n        </div>,\n        document.querySelector(\"#modal\")\n    );\n};\n","import { Link } from \"react-router-dom\";\nimport React, { memo, useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Stream from \"../Stream\";\nimport StreamControls from \"./StreamControls\";\nimport { deleteStream } from \"../../../store/actions\";\nimport ModalPortal from \"../../portals/modal/ModalPortal\";\nimport { selectAuthUserId, selectStreams } from \"../../../store/selectors\";\n\nexport default memo(() => {\n    const dispatch = useDispatch();\n    const streams = useSelector(selectStreams);\n    const currentUserId = useSelector(selectAuthUserId);\n    const [streamToDelete, setStreamToDelete] = useState(null);\n\n    const onDeleteClick = useCallback(\n        stream => () => {\n            setStreamToDelete(stream);\n        },\n        []\n    );\n\n    const onModalDeleteButtonClick = useCallback(() => {\n        dispatch(deleteStream(streamToDelete.id));\n        setStreamToDelete(null);\n    }, [dispatch, streamToDelete]);\n\n    const onModalHideButtonClick = useCallback(() => {\n        setStreamToDelete(null);\n    }, []);\n\n    const controls = (\n        <>\n            <button type=\"button\" onClick={onModalDeleteButtonClick}>\n                Delete\n            </button>\n            <button type=\"button\" onClick={onModalHideButtonClick}>\n                Cancel\n            </button>\n        </>\n    );\n\n    return (\n        <>\n            <ul className=\"stream-list\">\n                {Object.entries(streams).map(([id, stream]) => {\n                    return (\n                        <li key={id} className=\"stream-list__item\">\n                            <Stream\n                                {...stream}\n                                title={\n                                    <Link to={`/stream/${stream.id}`}>\n                                        {stream.title}\n                                    </Link>\n                                }\n                            />\n\n                            <StreamControls\n                                stream={stream}\n                                currentUserId={currentUserId}\n                                onDeleteClick={onDeleteClick(stream)}\n                            />\n                        </li>\n                    );\n                })}\n            </ul>\n\n            {streamToDelete && (\n                <ModalPortal\n                    title=\"Are u sure u wanna delete this stream?\"\n                    controls={controls}\n                />\n            )}\n        </>\n    );\n});\n","import React, { memo, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { fetchStreams } from \"../../store/actions\";\nimport StreamList from \"./stream-list-hooks/StreamList\";\nimport { selectAuthIsSignedIn } from \"../../store/selectors\";\n\nexport default memo(() => {\n    const dispatch = useDispatch();\n    const auth = useSelector(selectAuthIsSignedIn);\n\n    useEffect(() => {\n        dispatch(fetchStreams());\n    }, [dispatch]);\n\n    return (\n        <>\n            <StreamList />\n            {auth && (\n                <p>\n                    <Link to=\"/stream/create\">Create stream -&gt;</Link>\n                </p>\n            )}\n        </>\n    );\n});\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotFound from \"../components/NotFound\";\nimport MainMenu from \"../components/menu/MainMenu\";\nimport GoogleAuth from \"../components/google-auth/GoogleAuth\";\nimport StreamCreateHooks from \"../components/stream/StreamCreateHooks\";\nimport StreamEditHooks from \"../components/stream/StreamEditHooks\";\nimport StreamShowHooks from \"../components/stream/StreamShowHooks\";\nimport StreamListHooks from \"../components/stream/StreamListHooks\";\n\n// const RouterLazyRoute = React.lazy(() => import('../components/router/RouterLazyRoute'));\n\nexport default () => {\n    return (\n        <>\n            <h3>Router examples</h3>\n\n            <GoogleAuth />\n\n            <MainMenu\n                exact\n                routes={[\n                    { to: \"/stream\", title: \"StreamList\" },\n                    { to: \"/stream/create\", title: \"StreamCreate\" }\n                ]}\n            />\n\n            {/* по умолчанию если роуты не обернуть в Switch в случае /stream/create покажется также /stream/:id, чтобы\n            этого избежать оборачиваю в Switch, покажется только первый подходящий роут*/}\n            <Switch>\n                <Route path=\"/stream\" exact component={StreamListHooks} />\n                <Route\n                    path=\"/stream/create\"\n                    exact\n                    component={StreamCreateHooks}\n                />\n                <Route\n                    path=\"/stream/edit/:id\"\n                    exact\n                    component={StreamEditHooks}\n                />\n                <Route path=\"/stream/:id\" exact component={StreamShowHooks} />\n                <Route path=\"/stream/*\">\n                    <NotFound>Stream not found</NotFound>\n                </Route>\n            </Switch>\n        </>\n    );\n};\n"],"sourceRoot":""}