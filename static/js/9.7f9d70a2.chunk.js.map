{"version":3,"sources":["../node_modules/@formatjs/intl/lib/src/error.js","../node_modules/react-intl/lib/src/components/injectIntl.js","../node_modules/@formatjs/intl/lib/src/utils.js","../node_modules/react-intl/lib/src/utils.js","../node_modules/intl-messageformat-parser/lib/src/types.js","../node_modules/@formatjs/intl/lib/src/message.js","../node_modules/@formatjs/intl/lib/src/number.js","../node_modules/@formatjs/intl/lib/src/relativeTime.js","../node_modules/@formatjs/intl/lib/src/dateTime.js","../node_modules/@formatjs/intl/lib/src/plural.js","../node_modules/@formatjs/intl/lib/src/list.js","../node_modules/@formatjs/intl/lib/src/displayName.js","../node_modules/@formatjs/intl/lib/src/create-intl.js","../node_modules/react-intl/lib/src/components/provider.js","../node_modules/intl-messageformat-parser/lib/src/skeleton.js","../node_modules/intl-messageformat-parser/lib/src/parser.js","../node_modules/intl-messageformat-parser/lib/src/normalize.js","../node_modules/intl-messageformat-parser/lib/index.js","../node_modules/react-intl/lib/src/components/createFormattedComponent.js","../node_modules/react-intl/lib/index.js","../node_modules/fast-memoize/src/index.js","../node_modules/react-intl/lib/src/components/useIntl.js","../node_modules/intl-messageformat/lib/src/formatters.js","../node_modules/intl-messageformat/lib/src/error.js","../node_modules/shallow-equal/objects/index.js","../node_modules/i18n-js/app/assets/javascripts/i18n.js","../node_modules/@formatjs/ecma402-abstract/lib/src/utils.js","../node_modules/intl-messageformat/lib/src/core.js"],"names":["IntlErrorCode","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","IntlError","_super","code","message","exception","_this","call","stack","Error","captureStackTrace","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","locale","descriptor","id","defaultMessage","description","MissingTranslationError","hoistNonReactStatics_","default","IntlContext","React","Provider","Consumer","Context","__assign","assign","t","s","i","n","arguments","length","apply","__spreadArrays","il","r","k","a","j","jl","filterProps","props","whitelist","defaults","reduce","filtered","name","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","defaultLocale","defaultFormats","onError","error","process","createIntlCache","dateTime","number","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","has","key","get","set","value","memoizeIntl","memoize","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","_a","args","_i","DateTimeFormat","bind","strategy","strategies","variadic","getNumberFormat","NumberFormat","getPluralRules","PluralRules","getMessageFormat","locales","overrideFormats","opts","IntlMessageFormat","formatters","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","type","format","formatType","invariantIntlContext","intl","invariant","CORE_DEFAULT_INTL_CONFIG","textComponent","assignUniqueKeysToParts","formatXMLElementFn","parts","toArray","TYPE","SKELETON_TYPE","isLiteralElement","el","literal","isArgumentElement","argument","isNumberElement","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","setTimeZoneInOptions","keys","all","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","formatMessage","state","messageDescriptor","values","defaultRichTextElements","msgId","String","isArray","console","replace","toLowerCase","e","NUMBER_FORMAT_OPTIONS","getFormatter","options","formatNumber","config","formatNumberToParts","formatToParts","RELATIVE_TIME_FORMAT_OPTIONS","formatRelativeTime","unit","FormatError","DATE_TIME_FORMAT_OPTIONS","filteredOptions","hour","minute","second","formatDate","Date","formatTime","formatDateToParts","formatTimeToParts","PLURAL_FORMAT_OPTIONS","formatPlural","LIST_FORMAT_OPTIONS","now","formatList","richValues_1","serializedValues","map","v","generateToken","val","push","DISPLAY_NAMES_OPTONS","formatDisplayName","of","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","shallowEquals","shallowEquals_","processIntlConfig","wrapRichTextChunksInFragment","assignUniqueKeysToFormatXMLElementFnArgument","acc","isFormatXMLElementFn","rawValues","chunks","coreFormatMessage","createIntl","rawDefaultRichTextElements","coreIntl","resolvedConfig","supportedLocalesOf","coreCreateIntl","IntlProvider","prevConfig","getDerivedStateFromProps","render","children","displayName","defaultProps","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","result","match","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","opt","signOpts","parseNumberSkeleton","tokens","tokens_1","token","stem","style","currency","useGrouping","maximumFractionDigits","notation","compactDisplay","currencyDisplay","unitDisplay","test","g3","g4","g5","minimumFractionDigits","SyntaxError","expected","found","location","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","text","escapedParts","part","inverted","expected1","descriptions","sort","slice","join","describeExpected","found1","pegParse","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c23","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c39","peg$c42","messageCtx","pop","peg$c44","peg$c46","peg$c47","insertLocation","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c87","peg$c90","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","ignoreTag","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","parsedOptions","shouldParseSkeleton","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","charAt","peg$parsenumberSkeletonTokenOption","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation","PLURAL_HASHTAG_REGEX","parse","normalizeHashtagInPlural","els","forEach","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","DisplayName","DisplayNameParts","createFormattedDateTimePartsComponent","ComponentParts","formatProps","createFormattedComponent","Component","formattedValue","Text","defineMessages","msgs","monadic","fn","serializer","arg","cacheKey","computedValue","assemble","context","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","exports","useIntl","PART_TYPE","currentPluralValue","originalMessage","els_1","varName","MissingValueError","value_1","formatFn","InvalidValueTypeError","c","other","InvalidValueError","rule","lastPart","mergeLiteral","ErrorCode","msg","variableId","objA","objB","aKeys","bKeys","root","define","global","I18n","padding","isObject","obj","isFunction","func","isSet","isNumber","isBoolean","isNull","decimalAdjust","exp","Math","isNaN","NaN","split","lazyEvaluate","scope","DATE","day_names","abbr_day_names","month_names","abbr_month_names","meridian","NUMBER_FORMAT","precision","separator","delimiter","strip_insignificant_zeros","CURRENCY_FORMAT","sign_first","PERCENTAGE_FORMAT","SIZE_UNITS","DEFAULT_OPTIONS","defaultSeparator","placeholder","fallbacks","translations","missingBehaviour","missingTranslationPrefix","reset","initializeOptions","localeParts","firstFallback","secondFallback","nullableFallbackLocale","pluralization","count","currentLocale","lookup","scopes","fullScope","getFullScope","shift","defaultValue","pluralizationLookupWithoutFallback","pluralizerKey","pluralizerKeys","pluralizer","pluralizationLookup","am","pm","prepareOptions","subject","attr","createTranslationOptions","translationOptions","concat","translate","translation","usedScope","optionsWithoutDefault","some","translationOption","interpolate","pluralize","missingTranslation","regex","matches","nullPlaceholder","missingPlaceholder","RegExp","p1","p2","toNumber","formattedNumber","toFixed","abs","buffer","sign","unshift","max","toCurrency","localize","toPercentage","localizedValue","toTime","parseDate","convertedDate","fraction","UTC","setTime","$1","$2","$3","$6","$4","$5","strftime","meridianOptions","getTime","weekDay","getDay","getDate","getFullYear","getMonth","getHours","secs","getSeconds","mins","getMinutes","getTimezoneOffset","absOffsetHours","floor","absOffsetMinutes","timezoneoffset","dateString","date_string","toHumanSize","size","iterations","extend","obj1","obj2","merge","dest","l","factory","condition","Err","mergeConfigs","defaultConfig","configs","c1","c2","formatterCache","ast","resolvedOptions","getAst","__parse","TypeError","defineProperty","memoizedDefaultLocale","enumerable","configurable","percent","short","medium","long","full"],"mappings":"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","file":"static/js/9.7f9d70a2.chunk.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var IntlErrorCode;\n(function (IntlErrorCode) {\n    IntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    IntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    IntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    IntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    IntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(IntlErrorCode || (IntlErrorCode = {}));\nvar IntlError = /** @class */ (function (_super) {\n    __extends(IntlError, _super);\n    function IntlError(code, message, exception) {\n        var _this = _super.call(this, \"[@formatjs/intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, IntlError);\n        }\n        return _this;\n    }\n    return IntlError;\n}(Error));\nexport { IntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(IntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(IntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(IntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(IntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(IntlError));\nexport { MissingTranslationError };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { IntlMessageFormat, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from './error';\nimport { TYPE } from 'intl-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function formatMessage(_a, state, messageDescriptor, values) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, defaultRichTextElements = _a.defaultRichTextElements;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, '[@formatjs/intl] An `id` must be provided to format a message.');\n    var id = String(msgId);\n    var message = \n    // In case messages is Object.create(null)\n    // e.g import('foo.json') from webpack)\n    // See https://github.com/formatjs/formatjs/issues/1914\n    messages &&\n        Object.prototype.hasOwnProperty.call(messages, id) &&\n        messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        defaultRichTextElements) {\n        console.error(\"[@formatjs/intl] \\\"defaultRichTextElements\\\" was specified but \\\"message\\\" was not pre-compiled. \\nPlease consider using \\\"@formatjs/cli\\\" to pre-compile your messages for performance.\\nFor more details see https://formatjs.io/docs/getting-started/message-distribution\");\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values &&\n        message &&\n        typeof message === 'string' &&\n        !defaultRichTextElements) {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    values = __assign(__assign({}, defaultRichTextElements), (values || {}));\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n                return formatter.format(values);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return typeof defaultMessage === 'string' ? defaultMessage : id;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, {\n            formatters: state,\n        });\n        return formatter.format(values);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            return formatter.format(values);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    if (typeof message === 'string') {\n        return message;\n    }\n    if (typeof defaultMessage === 'string') {\n        return defaultMessage;\n    }\n    return id;\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { IntlError } from './error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from './utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from './error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { filterProps, getNamedFormat } from './utils';\nimport { IntlError } from './error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from './utils';\nimport { MessageFormatError } from './error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","import { filterProps } from './utils';\nimport { FormatError } from 'intl-messageformat';\nimport { IntlError } from './error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    // @ts-ignore\n    return values;\n}\n","import { filterProps } from './utils';\nimport { FormatError } from 'intl-messageformat';\nimport { IntlError } from './error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new IntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createFormatters, DEFAULT_INTL_CONFIG } from './utils';\nimport { InvalidConfigError, MissingDataError } from './error';\nimport { formatNumber, formatNumberToParts } from './number';\nimport { formatRelativeTime } from './relativeTime';\nimport { formatDate, formatDateToParts, formatTime, formatTimeToParts, } from './dateTime';\nimport { formatPlural } from './plural';\nimport { formatMessage } from './message';\nimport { formatList } from './list';\nimport { formatDisplayName } from './displayName';\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage(config, formatters, descriptor, values);\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), cache);\n    return __assign(__assign({}, coreIntl), { formatMessage: formatMessage.bind(null, {\n            locale: coreIntl.locale,\n            timeZone: coreIntl.timeZone,\n            formats: coreIntl.formats,\n            defaultLocale: coreIntl.defaultLocale,\n            defaultFormats: coreIntl.defaultFormats,\n            messages: coreIntl.messages,\n            onError: coreIntl.onError,\n            defaultRichTextElements: defaultRichTextElements,\n        }, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) patterns are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","// @ts-nocheck\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// @generated\nimport { TYPE, } from './types';\nimport { parseDateTimeSkeleton, parseNumberSkeleton } from './skeleton';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens, parsedOptions: shouldParseSkeleton ? parseNumberSkeleton(tokens) : {} }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern, parsedOptions: shouldParseSkeleton ? parseDateTimeSkeleton(pattern) : {} }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    var shouldParseSkeleton = options && options.shouldParseSkeleton;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport function parse(input, opts) {\n    opts = __assign({ normalizeHashtagInPlural: true, shouldParseSkeleton: true }, (opts || {}));\n    var els = pegParse(input, opts);\n    if (opts.normalizeHashtagInPlural) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nexport { createIntlCache, UnsupportedFormatterError, InvalidConfigError, MissingDataError, MessageFormatError, MissingTranslationError, IntlErrorCode as ReactIntlErrorCode, IntlError as ReactIntlError, } from '@formatjs/intl';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nexport { default as useIntl } from './src/components/useIntl';\nexport { default as IntlProvider, createIntl } from './src/components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './src/components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './src/components/relative';\nexport { default as FormattedPlural } from './src/components/plural';\nexport { default as FormattedMessage } from './src/components/message';\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","import { isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? el.style.parsedOptions\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","// I18n.js\n// =======\n//\n// This small library provides the Rails I18n API on the Javascript.\n// You don't actually have to use Rails (or even Ruby) to use I18n.js.\n// Just make sure you export all translations in an object like this:\n//\n//     I18n.translations.en = {\n//       hello: \"Hello World\"\n//     };\n//\n// See tests for specific formatting like numbers and dates.\n//\n\n// Using UMD pattern from\n// https://github.com/umdjs/umd#regular-module\n// `returnExports.js` version\n;(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(\"i18n\", function(){ return factory(root);});\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(root);\n  } else {\n    // Browser globals (root is window)\n    root.I18n = factory(root);\n  }\n}(this, function(global) {\n  \"use strict\";\n\n  // Use previously defined object if exists in current scope\n  var I18n = global && global.I18n || {};\n\n  // Just cache the Array#slice function.\n  var slice = Array.prototype.slice;\n\n  // Apply number padding.\n  var padding = function(number) {\n    return (\"0\" + number.toString()).substr(-2);\n  };\n\n  // Improved toFixed number rounding function with support for unprecise floating points\n  // JavaScript's standard toFixed function does not round certain numbers correctly (for example 0.105 with precision 2).\n  var toFixed = function(number, precision) {\n    return decimalAdjust('round', number, -precision).toFixed(precision);\n  };\n\n  // Is a given variable an object?\n  // Borrowed from Underscore.js\n  var isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object'\n  };\n\n  var isFunction = function(func) {\n    var type = typeof func;\n    return type === 'function'\n  };\n\n  // Check if value is different than undefined and null;\n  var isSet = function(value) {\n    return typeof(value) !== 'undefined' && value !== null;\n  };\n\n  // Is a given value an array?\n  // Borrowed from Underscore.js\n  var isArray = function(val) {\n    if (Array.isArray) {\n      return Array.isArray(val);\n    }\n    return Object.prototype.toString.call(val) === '[object Array]';\n  };\n\n  var isString = function(val) {\n    return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';\n  };\n\n  var isNumber = function(val) {\n    return typeof val === 'number' || Object.prototype.toString.call(val) === '[object Number]';\n  };\n\n  var isBoolean = function(val) {\n    return val === true || val === false;\n  };\n\n  var isNull = function(val) {\n    return val === null;\n  };\n\n  var decimalAdjust = function(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math[type](value);\n    }\n    value = +value;\n    exp = +exp;\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  };\n\n  var lazyEvaluate = function(message, scope) {\n    if (isFunction(message)) {\n      return message(scope);\n    } else {\n      return message;\n    }\n  };\n\n  var merge = function (dest, obj) {\n    var key, value;\n    for (key in obj) if (obj.hasOwnProperty(key)) {\n      value = obj[key];\n      if (isString(value) || isNumber(value) || isBoolean(value) || isArray(value) || isNull(value)) {\n        dest[key] = value;\n      } else {\n        if (dest[key] == null) dest[key] = {};\n        merge(dest[key], value);\n      }\n    }\n    return dest;\n  };\n\n  // Set default days/months translations.\n  var DATE = {\n      day_names: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    , abbr_day_names: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\n    , month_names: [null, \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    , abbr_month_names: [null, \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    , meridian: [\"AM\", \"PM\"]\n  };\n\n  // Set default number format.\n  var NUMBER_FORMAT = {\n      precision: 3\n    , separator: \".\"\n    , delimiter: \",\"\n    , strip_insignificant_zeros: false\n  };\n\n  // Set default currency format.\n  var CURRENCY_FORMAT = {\n      unit: \"$\"\n    , precision: 2\n    , format: \"%u%n\"\n    , sign_first: true\n    , delimiter: \",\"\n    , separator: \".\"\n  };\n\n  // Set default percentage format.\n  var PERCENTAGE_FORMAT = {\n      unit: \"%\"\n    , precision: 3\n    , format: \"%n%u\"\n    , separator: \".\"\n    , delimiter: \"\"\n  };\n\n  // Set default size units.\n  var SIZE_UNITS = [null, \"kb\", \"mb\", \"gb\", \"tb\"];\n\n  // Other default options\n  var DEFAULT_OPTIONS = {\n    // Set default locale. This locale will be used when fallback is enabled and\n    // the translation doesn't exist in a particular locale.\n      defaultLocale: \"en\"\n    // Set the current locale to `en`.\n    , locale: \"en\"\n    // Set the translation key separator.\n    , defaultSeparator: \".\"\n    // Set the placeholder format. Accepts `{{placeholder}}` and `%{placeholder}`.\n    , placeholder: /(?:\\{\\{|%\\{)(.*?)(?:\\}\\}?)/gm\n    // Set if engine should fallback to the default locale when a translation\n    // is missing.\n    , fallbacks: false\n    // Set the default translation object.\n    , translations: {}\n    // Set missing translation behavior. 'message' will display a message\n    // that the translation is missing, 'guess' will try to guess the string\n    , missingBehaviour: 'message'\n    // if you use missingBehaviour with 'message', but want to know that the\n    // string is actually missing for testing purposes, you can prefix the\n    // guessed string by setting the value here. By default, no prefix!\n    , missingTranslationPrefix: ''\n  };\n\n  // Set default locale. This locale will be used when fallback is enabled and\n  // the translation doesn't exist in a particular locale.\n  I18n.reset = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n\n  // Much like `reset`, but only assign options if not already assigned\n  I18n.initializeOptions = function() {\n    var key;\n    for (key in DEFAULT_OPTIONS) if (!isSet(this[key])) {\n      this[key] = DEFAULT_OPTIONS[key];\n    }\n  };\n  I18n.initializeOptions();\n\n  // Return a list of all locales that must be tried before returning the\n  // missing translation message. By default, this will consider the inline option,\n  // current locale and fallback locale.\n  //\n  //     I18n.locales.get(\"de-DE\");\n  //     // [\"de-DE\", \"de\", \"en\"]\n  //\n  // You can define custom rules for any locale. Just make sure you return a array\n  // containing all locales.\n  //\n  //     // Default the Wookie locale to English.\n  //     I18n.locales[\"wk\"] = function(locale) {\n  //       return [\"en\"];\n  //     };\n  //\n  I18n.locales = {};\n\n  // Retrieve locales based on inline locale, current locale or default to\n  // I18n's detection.\n  I18n.locales.get = function(locale) {\n    var result = this[locale] || this[I18n.locale] || this[\"default\"];\n\n    if (isFunction(result)) {\n      result = result(locale);\n    }\n\n    if (isArray(result) === false) {\n      result = [result];\n    }\n\n    return result;\n  };\n\n  // The default locale list.\n  I18n.locales[\"default\"] = function(locale) {\n    var locales = []\n      , list = []\n    ;\n\n    // Handle the inline locale option that can be provided to\n    // the `I18n.t` options.\n    if (locale) {\n      locales.push(locale);\n    }\n\n    // Add the current locale to the list.\n    if (!locale && I18n.locale) {\n      locales.push(I18n.locale);\n    }\n\n    // Add the default locale if fallback strategy is enabled.\n    if (I18n.fallbacks && I18n.defaultLocale) {\n      locales.push(I18n.defaultLocale);\n    }\n\n    // Locale code format 1:\n    // According to RFC4646 (http://www.ietf.org/rfc/rfc4646.txt)\n    // language codes for Traditional Chinese should be `zh-Hant`\n    //\n    // But due to backward compatibility\n    // We use older version of IETF language tag\n    // @see http://www.w3.org/TR/html401/struct/dirlang.html\n    // @see http://en.wikipedia.org/wiki/IETF_language_tag\n    //\n    // Format: `language-code = primary-code ( \"-\" subcode )*`\n    //\n    // primary-code uses ISO639-1\n    // @see http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n    // @see http://www.iso.org/iso/home/standards/language_codes.htm\n    //\n    // subcode uses ISO 3166-1 alpha-2\n    // @see http://en.wikipedia.org/wiki/ISO_3166\n    // @see http://www.iso.org/iso/country_codes.htm\n    //\n    // @note\n    //   subcode can be in upper case or lower case\n    //   defining it in upper case is a convention only\n\n\n    // Locale code format 2:\n    // Format: `code = primary-code ( \"-\" region-code )*`\n    // primary-code uses ISO 639-1\n    // script-code uses ISO 15924\n    // region-code uses ISO 3166-1 alpha-2\n    // Example: zh-Hant-TW, en-HK, zh-Hant-CN\n    //\n    // It is similar to RFC4646 (or actually the same),\n    // but seems to be limited to language, script, region\n\n    // Compute each locale with its country code.\n    // So this will return an array containing\n    // `de-DE` and `de`\n    // or\n    // `zh-hans-tw`, `zh-hans`, `zh`\n    // locales.\n    locales.forEach(function(locale) {\n      var localeParts = locale.split(\"-\");\n      var firstFallback = null;\n      var secondFallback = null;\n      if (localeParts.length === 3) {\n        firstFallback = [\n          localeParts[0],\n          localeParts[1]\n        ].join(\"-\");\n        secondFallback = localeParts[0];\n      }\n      else if (localeParts.length === 2) {\n        firstFallback = localeParts[0];\n      }\n\n      if (list.indexOf(locale) === -1) {\n        list.push(locale);\n      }\n\n      if (! I18n.fallbacks) {\n        return;\n      }\n\n      [\n        firstFallback,\n        secondFallback\n      ].forEach(function(nullableFallbackLocale) {\n        // We don't want null values\n        if (typeof nullableFallbackLocale === \"undefined\") { return; }\n        if (nullableFallbackLocale === null) { return; }\n        // We don't want duplicate values\n        //\n        // Comparing with `locale` first is faster than\n        // checking whether value's presence in the list\n        if (nullableFallbackLocale === locale) { return; }\n        if (list.indexOf(nullableFallbackLocale) !== -1) { return; }\n\n        list.push(nullableFallbackLocale);\n      });\n    });\n\n    // No locales set? English it is.\n    if (!locales.length) {\n      locales.push(\"en\");\n    }\n\n    return list;\n  };\n\n  // Hold pluralization rules.\n  I18n.pluralization = {};\n\n  // Return the pluralizer for a specific locale.\n  // If no specify locale is found, then I18n's default will be used.\n  I18n.pluralization.get = function(locale) {\n    return this[locale] || this[I18n.locale] || this[\"default\"];\n  };\n\n  // The default pluralizer rule.\n  // It detects the `zero`, `one`, and `other` scopes.\n  I18n.pluralization[\"default\"] = function(count) {\n    switch (count) {\n      case 0: return [\"zero\", \"other\"];\n      case 1: return [\"one\"];\n      default: return [\"other\"];\n    }\n  };\n\n  // Return current locale. If no locale has been set, then\n  // the current locale will be the default locale.\n  I18n.currentLocale = function() {\n    return this.locale || this.defaultLocale;\n  };\n\n  // Check if value is different than undefined and null;\n  I18n.isSet = isSet;\n\n  // Find and process the translation using the provided scope and options.\n  // This is used internally by some functions and should not be used as an\n  // public API.\n  I18n.lookup = function(scope, options) {\n    options = options || {};\n\n    var locales = this.locales.get(options.locale).slice()\n      , locale\n      , scopes\n      , fullScope\n      , translations\n    ;\n\n    fullScope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = fullScope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n\n        if (translations === undefined || translations === null) {\n          break;\n        }\n      }\n\n      if (translations !== undefined && translations !== null) {\n        return translations;\n      }\n    }\n\n    if (isSet(options.defaultValue)) {\n      return lazyEvaluate(options.defaultValue, scope);\n    }\n  };\n\n  // lookup pluralization rule key into translations\n  I18n.pluralizationLookupWithoutFallback = function(count, locale, translations) {\n    var pluralizer = this.pluralization.get(locale)\n      , pluralizerKeys = pluralizer(count)\n      , pluralizerKey\n      , message;\n\n    if (isObject(translations)) {\n      while (pluralizerKeys.length) {\n        pluralizerKey = pluralizerKeys.shift();\n        if (isSet(translations[pluralizerKey])) {\n          message = translations[pluralizerKey];\n          break;\n        }\n      }\n    }\n\n    return message;\n  };\n\n  // Lookup dedicated to pluralization\n  I18n.pluralizationLookup = function(count, scope, options) {\n    options = options || {};\n    var locales = this.locales.get(options.locale).slice()\n      , locale\n      , scopes\n      , translations\n      , message\n    ;\n    scope = this.getFullScope(scope, options);\n\n    while (locales.length) {\n      locale = locales.shift();\n      scopes = scope.split(this.defaultSeparator);\n      translations = this.translations[locale];\n\n      if (!translations) {\n        continue;\n      }\n\n      while (scopes.length) {\n        translations = translations[scopes.shift()];\n        if (!isObject(translations)) {\n          break;\n        }\n        if (scopes.length === 0) {\n          message = this.pluralizationLookupWithoutFallback(count, locale, translations);\n        }\n      }\n      if (typeof message !== \"undefined\" && message !== null) {\n        break;\n      }\n    }\n\n    if (typeof message === \"undefined\" || message === null) {\n      if (isSet(options.defaultValue)) {\n        if (isObject(options.defaultValue)) {\n          message = this.pluralizationLookupWithoutFallback(count, options.locale, options.defaultValue);\n        } else {\n          message = options.defaultValue;\n        }\n        translations = options.defaultValue;\n      }\n    }\n\n    return { message: message, translations: translations };\n  };\n\n  // Rails changed the way the meridian is stored.\n  // It started with `date.meridian` returning an array,\n  // then it switched to `time.am` and `time.pm`.\n  // This function abstracts this difference and returns\n  // the correct meridian or the default value when none is provided.\n  I18n.meridian = function() {\n    var time = this.lookup(\"time\");\n    var date = this.lookup(\"date\");\n\n    if (time && time.am && time.pm) {\n      return [time.am, time.pm];\n    } else if (date && date.meridian) {\n      return date.meridian;\n    } else {\n      return DATE.meridian;\n    }\n  };\n\n  // Merge serveral hash options, checking if value is set before\n  // overwriting any value. The precedence is from left to right.\n  //\n  //     I18n.prepareOptions({name: \"John Doe\"}, {name: \"Mary Doe\", role: \"user\"});\n  //     #=> {name: \"John Doe\", role: \"user\"}\n  //\n  I18n.prepareOptions = function() {\n    var args = slice.call(arguments)\n      , options = {}\n      , subject\n    ;\n\n    while (args.length) {\n      subject = args.shift();\n\n      if (typeof(subject) != \"object\") {\n        continue;\n      }\n\n      for (var attr in subject) {\n        if (!subject.hasOwnProperty(attr)) {\n          continue;\n        }\n\n        if (isSet(options[attr])) {\n          continue;\n        }\n\n        options[attr] = subject[attr];\n      }\n    }\n\n    return options;\n  };\n\n  // Generate a list of translation options for default fallbacks.\n  // `defaultValue` is also deleted from options as it is returned as part of\n  // the translationOptions array.\n  I18n.createTranslationOptions = function(scope, options) {\n    var translationOptions = [{scope: scope}];\n\n    // Defaults should be an array of hashes containing either\n    // fallback scopes or messages\n    if (isSet(options.defaults)) {\n      translationOptions = translationOptions.concat(options.defaults);\n    }\n\n    // Maintain support for defaultValue. Since it is always a message\n    // insert it in to the translation options as such.\n    if (isSet(options.defaultValue)) {\n      translationOptions.push({ message: options.defaultValue });\n    }\n\n    return translationOptions;\n  };\n\n  // Translate the given scope with the provided options.\n  I18n.translate = function(scope, options) {\n    options = options || {};\n\n    var translationOptions = this.createTranslationOptions(scope, options);\n\n    var translation;\n    var usedScope = scope;\n\n    var optionsWithoutDefault = this.prepareOptions(options)\n    delete optionsWithoutDefault.defaultValue\n\n    // Iterate through the translation options until a translation\n    // or message is found.\n    var translationFound =\n      translationOptions.some(function(translationOption) {\n        if (isSet(translationOption.scope)) {\n          usedScope = translationOption.scope;\n          translation = this.lookup(usedScope, optionsWithoutDefault);\n        } else if (isSet(translationOption.message)) {\n          translation = lazyEvaluate(translationOption.message, scope);\n        }\n\n        if (translation !== undefined && translation !== null) {\n          return true;\n        }\n      }, this);\n\n    if (!translationFound) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof(translation) === \"string\") {\n      translation = this.interpolate(translation, options);\n    } else if (isArray(translation)) {\n      translation = translation.map(function(t) {\n        return (typeof(t) === \"string\" ? this.interpolate(t, options) : t);\n      }, this);\n    } else if (isObject(translation) && isSet(options.count)) {\n      translation = this.pluralize(options.count, usedScope, options);\n    }\n\n    return translation;\n  };\n\n  // This function interpolates the all variables in the given message.\n  I18n.interpolate = function(message, options) {\n    if (message == null) {\n      return message;\n    }\n\n    options = options || {};\n    var matches = message.match(this.placeholder)\n      , placeholder\n      , value\n      , name\n      , regex\n    ;\n\n    if (!matches) {\n      return message;\n    }\n\n    while (matches.length) {\n      placeholder = matches.shift();\n      name = placeholder.replace(this.placeholder, \"$1\");\n\n      if (isSet(options[name])) {\n        value = options[name].toString().replace(/\\$/gm, \"_#$#_\");\n      } else if (name in options) {\n        value = this.nullPlaceholder(placeholder, message, options);\n      } else {\n        value = this.missingPlaceholder(placeholder, message, options);\n      }\n\n      regex = new RegExp(placeholder.replace(/{/gm, \"\\\\{\").replace(/}/gm, \"\\\\}\"));\n      message = message.replace(regex, value);\n    }\n\n    return message.replace(/_#\\$#_/g, \"$\");\n  };\n\n  // Pluralize the given scope using the `count` value.\n  // The pluralized translation may have other placeholders,\n  // which will be retrieved from `options`.\n  I18n.pluralize = function(count, scope, options) {\n    options = this.prepareOptions({count: String(count)}, options)\n    var pluralizer, result;\n\n    result = this.pluralizationLookup(count, scope, options);\n    if (typeof result.translations === \"undefined\" || result.translations == null) {\n      return this.missingTranslation(scope, options);\n    }\n\n    if (typeof result.message !== \"undefined\" && result.message != null) {\n      return this.interpolate(result.message, options);\n    }\n    else {\n      pluralizer = this.pluralization.get(options.locale);\n      return this.missingTranslation(scope + '.' + pluralizer(count)[0], options);\n    }\n  };\n\n  // Return a missing translation message for the given parameters.\n  I18n.missingTranslation = function(scope, options) {\n    //guess intended string\n    if(this.missingBehaviour === 'guess'){\n      //get only the last portion of the scope\n      var s = scope.split('.').slice(-1)[0];\n      //replace underscore with space && camelcase with space and lowercase letter\n      return (this.missingTranslationPrefix.length > 0 ? this.missingTranslationPrefix : '') +\n          s.replace(/_/g,' ').replace(/([a-z])([A-Z])/g,\n          function(match, p1, p2) {return p1 + ' ' + p2.toLowerCase()} );\n    }\n\n    var localeForTranslation = (options != null && options.locale != null) ? options.locale : this.currentLocale();\n    var fullScope           = this.getFullScope(scope, options);\n    var fullScopeWithLocale = [localeForTranslation, fullScope].join(this.defaultSeparator);\n\n    return '[missing \"' + fullScopeWithLocale + '\" translation]';\n  };\n\n  // Return a missing placeholder message for given parameters\n  I18n.missingPlaceholder = function(placeholder, message, options) {\n    return \"[missing \" + placeholder + \" value]\";\n  };\n\n  I18n.nullPlaceholder = function() {\n    return I18n.missingPlaceholder.apply(I18n, arguments);\n  };\n\n  // Format number using localization rules.\n  // The options will be retrieved from the `number.format` scope.\n  // If this isn't present, then the following options will be used:\n  //\n  // - `precision`: `3`\n  // - `separator`: `\".\"`\n  // - `delimiter`: `\",\"`\n  // - `strip_insignificant_zeros`: `false`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toNumber = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.format\")\n      , NUMBER_FORMAT\n    );\n\n    var negative = number < 0\n      , string = toFixed(Math.abs(number), options.precision).toString()\n      , parts = string.split(\".\")\n      , precision\n      , buffer = []\n      , formattedNumber\n      , format = options.format || \"%n\"\n      , sign = negative ? \"-\" : \"\"\n    ;\n\n    number = parts[0];\n    precision = parts[1];\n\n    while (number.length > 0) {\n      buffer.unshift(number.substr(Math.max(0, number.length - 3), 3));\n      number = number.substr(0, number.length -3);\n    }\n\n    formattedNumber = buffer.join(options.delimiter);\n\n    if (options.strip_insignificant_zeros && precision) {\n      precision = precision.replace(/0+$/, \"\");\n    }\n\n    if (options.precision > 0 && precision) {\n      formattedNumber += options.separator + precision;\n    }\n\n    if (options.sign_first) {\n      format = \"%s\" + format;\n    }\n    else {\n      format = format.replace(\"%n\", \"%s%n\");\n    }\n\n    formattedNumber = format\n      .replace(\"%u\", options.unit)\n      .replace(\"%n\", formattedNumber)\n      .replace(\"%s\", sign)\n    ;\n\n    return formattedNumber;\n  };\n\n  // Format currency with localization rules.\n  // The options will be retrieved from the `number.currency.format` and\n  // `number.format` scopes, in that order.\n  //\n  // Any missing option will be retrieved from the `I18n.toNumber` defaults and\n  // the following options:\n  //\n  // - `unit`: `\"$\"`\n  // - `precision`: `2`\n  // - `format`: `\"%u%n\"`\n  // - `delimiter`: `\",\"`\n  // - `separator`: `\".\"`\n  //\n  // You can also override these options by providing the `options` argument.\n  //\n  I18n.toCurrency = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.currency.format\", options)\n      , this.lookup(\"number.format\", options)\n      , CURRENCY_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Localize several values.\n  // You can provide the following scopes: `currency`, `number`, or `percentage`.\n  // If you provide a scope that matches the `/^(date|time)/` regular expression\n  // then the `value` will be converted by using the `I18n.toTime` function.\n  //\n  // It will default to the value's `toString` function.\n  //\n  I18n.localize = function(scope, value, options) {\n    options || (options = {});\n\n    switch (scope) {\n      case \"currency\":\n        return this.toCurrency(value, options);\n      case \"number\":\n        scope = this.lookup(\"number.format\", options);\n        return this.toNumber(value, scope);\n      case \"percentage\":\n        return this.toPercentage(value, options);\n      default:\n        var localizedValue;\n\n        if (scope.match(/^(date|time)/)) {\n          localizedValue = this.toTime(scope, value, options);\n        } else {\n          localizedValue = value.toString();\n        }\n\n        return this.interpolate(localizedValue, options);\n    }\n  };\n\n  // Parse a given `date` string into a JavaScript Date object.\n  // This function is time zone aware.\n  //\n  // The following string formats are recognized:\n  //\n  //    yyyy-mm-dd\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ss\n  //    yyyy-mm-dd[ T]hh:mm::ssZ\n  //    yyyy-mm-dd[ T]hh:mm::ss+0000\n  //    yyyy-mm-dd[ T]hh:mm::ss+00:00\n  //    yyyy-mm-dd[ T]hh:mm::ss.123Z\n  //\n  I18n.parseDate = function(date) {\n    var matches, convertedDate, fraction;\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date;\n    }\n    // we have a date, so just return it.\n    if (typeof(date) === \"object\") {\n      return date;\n    }\n\n    matches = date.toString().match(/(\\d{4})-(\\d{2})-(\\d{2})(?:[ T](\\d{2}):(\\d{2}):(\\d{2})([\\.,]\\d{1,3})?)?(Z|\\+00:?00)?/);\n\n    if (matches) {\n      for (var i = 1; i <= 6; i++) {\n        matches[i] = parseInt(matches[i], 10) || 0;\n      }\n\n      // month starts on 0\n      matches[2] -= 1;\n\n      fraction = matches[7] ? 1000 * (\"0\" + matches[7]) : null;\n\n      if (matches[8]) {\n        convertedDate = new Date(Date.UTC(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction));\n      } else {\n        convertedDate = new Date(matches[1], matches[2], matches[3], matches[4], matches[5], matches[6], fraction);\n      }\n    } else if (typeof(date) == \"number\") {\n      // UNIX timestamp\n      convertedDate = new Date();\n      convertedDate.setTime(date);\n    } else if (date.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\\d+) (\\d+:\\d+:\\d+) ([+-]\\d+) (\\d+)/)) {\n      // This format `Wed Jul 20 13:03:39 +0000 2011` is parsed by\n      // webkit/firefox, but not by IE, so we must parse it manually.\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse([\n        RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5\n      ].join(\" \")));\n    } else if (date.match(/\\d+ \\d+:\\d+:\\d+ [+-]\\d+ \\d+/)) {\n      // a valid javascript format with timezone info\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    } else {\n      // an arbitrary javascript string\n      convertedDate = new Date();\n      convertedDate.setTime(Date.parse(date));\n    }\n\n    return convertedDate;\n  };\n\n  // Formats time according to the directives in the given format string.\n  // The directives begins with a percent (%) character. Any text not listed as a\n  // directive will be passed through to the output string.\n  //\n  // The accepted formats are:\n  //\n  //     %a     - The abbreviated weekday name (Sun)\n  //     %A     - The full weekday name (Sunday)\n  //     %b     - The abbreviated month name (Jan)\n  //     %B     - The full month name (January)\n  //     %c     - The preferred local date and time representation\n  //     %d     - Day of the month (01..31)\n  //     %-d    - Day of the month (1..31)\n  //     %H     - Hour of the day, 24-hour clock (00..23)\n  //     %-H/%k - Hour of the day, 24-hour clock (0..23)\n  //     %I     - Hour of the day, 12-hour clock (01..12)\n  //     %-I/%l - Hour of the day, 12-hour clock (1..12)\n  //     %m     - Month of the year (01..12)\n  //     %-m    - Month of the year (1..12)\n  //     %M     - Minute of the hour (00..59)\n  //     %-M    - Minute of the hour (0..59)\n  //     %p     - Meridian indicator (AM  or  PM)\n  //     %P     - Meridian indicator (am  or  pm)\n  //     %S     - Second of the minute (00..60)\n  //     %-S    - Second of the minute (0..60)\n  //     %w     - Day of the week (Sunday is 0, 0..6)\n  //     %y     - Year without a century (00..99)\n  //     %-y    - Year without a century (0..99)\n  //     %Y     - Year with century\n  //     %z/%Z  - Timezone offset (+0545)\n  //\n  I18n.strftime = function(date, format, options) {\n    var options = this.lookup(\"date\", options)\n      , meridianOptions = I18n.meridian()\n    ;\n\n    if (!options) {\n      options = {};\n    }\n\n    options = this.prepareOptions(options, DATE);\n\n    if (isNaN(date.getTime())) {\n      throw new Error('I18n.strftime() requires a valid date object, but received an invalid date.');\n    }\n\n    var weekDay = date.getDay()\n      , day = date.getDate()\n      , year = date.getFullYear()\n      , month = date.getMonth() + 1\n      , hour = date.getHours()\n      , hour12 = hour\n      , meridian = hour > 11 ? 1 : 0\n      , secs = date.getSeconds()\n      , mins = date.getMinutes()\n      , offset = date.getTimezoneOffset()\n      , absOffsetHours = Math.floor(Math.abs(offset / 60))\n      , absOffsetMinutes = Math.abs(offset) - (absOffsetHours * 60)\n      , timezoneoffset = (offset > 0 ? \"-\" : \"+\") +\n          (absOffsetHours.toString().length < 2 ? \"0\" + absOffsetHours : absOffsetHours) +\n          (absOffsetMinutes.toString().length < 2 ? \"0\" + absOffsetMinutes : absOffsetMinutes)\n    ;\n\n    if (hour12 > 12) {\n      hour12 = hour12 - 12;\n    } else if (hour12 === 0) {\n      hour12 = 12;\n    }\n\n    format = format.replace(\"%a\", options.abbr_day_names[weekDay]);\n    format = format.replace(\"%A\", options.day_names[weekDay]);\n    format = format.replace(\"%b\", options.abbr_month_names[month]);\n    format = format.replace(\"%B\", options.month_names[month]);\n    format = format.replace(\"%d\", padding(day));\n    format = format.replace(\"%e\", day);\n    format = format.replace(\"%-d\", day);\n    format = format.replace(\"%H\", padding(hour));\n    format = format.replace(\"%-H\", hour);\n    format = format.replace(\"%k\", hour);\n    format = format.replace(\"%I\", padding(hour12));\n    format = format.replace(\"%-I\", hour12);\n    format = format.replace(\"%l\", hour12);\n    format = format.replace(\"%m\", padding(month));\n    format = format.replace(\"%-m\", month);\n    format = format.replace(\"%M\", padding(mins));\n    format = format.replace(\"%-M\", mins);\n    format = format.replace(\"%p\", meridianOptions[meridian]);\n    format = format.replace(\"%P\", meridianOptions[meridian].toLowerCase());\n    format = format.replace(\"%S\", padding(secs));\n    format = format.replace(\"%-S\", secs);\n    format = format.replace(\"%w\", weekDay);\n    format = format.replace(\"%y\", padding(year));\n    format = format.replace(\"%-y\", padding(year).replace(/^0+/, \"\"));\n    format = format.replace(\"%Y\", year);\n    format = format.replace(\"%z\", timezoneoffset);\n    format = format.replace(\"%Z\", timezoneoffset);\n\n    return format;\n  };\n\n  // Convert the given dateString into a formatted date.\n  I18n.toTime = function(scope, dateString, options) {\n    var date = this.parseDate(dateString)\n      , format = this.lookup(scope, options)\n    ;\n\n    // A date input of `null` or `undefined` will be returned as-is\n    if (date == null) {\n      return date;\n    }\n\n    var date_string = date.toString()\n    if (date_string.match(/invalid/i)) {\n      return date_string;\n    }\n\n    if (!format) {\n      return date_string;\n    }\n\n    return this.strftime(date, format, options);\n  };\n\n  // Convert a number into a formatted percentage value.\n  I18n.toPercentage = function(number, options) {\n    options = this.prepareOptions(\n        options\n      , this.lookup(\"number.percentage.format\", options)\n      , this.lookup(\"number.format\", options)\n      , PERCENTAGE_FORMAT\n    );\n\n    return this.toNumber(number, options);\n  };\n\n  // Convert a number into a readable size representation.\n  I18n.toHumanSize = function(number, options) {\n    var kb = 1024\n      , size = number\n      , iterations = 0\n      , unit\n      , precision\n    ;\n\n    while (size >= kb && iterations < 4) {\n      size = size / kb;\n      iterations += 1;\n    }\n\n    if (iterations === 0) {\n      unit = this.t(\"number.human.storage_units.units.byte\", {count: size});\n      precision = 0;\n    } else {\n      unit = this.t(\"number.human.storage_units.units.\" + SIZE_UNITS[iterations]);\n      precision = (size - Math.floor(size) === 0) ? 0 : 1;\n    }\n\n    options = this.prepareOptions(\n        options\n      , {unit: unit, precision: precision, format: \"%n%u\", delimiter: \"\"}\n    );\n\n    return this.toNumber(size, options);\n  };\n\n  I18n.getFullScope = function(scope, options) {\n    options = options || {};\n\n    // Deal with the scope as an array.\n    if (isArray(scope)) {\n      scope = scope.join(this.defaultSeparator);\n    }\n\n    // Deal with the scope option provided through the second argument.\n    //\n    //    I18n.t('hello', {scope: 'greetings'});\n    //\n    if (options.scope) {\n      scope = [options.scope, scope].join(this.defaultSeparator);\n    }\n\n    return scope;\n  };\n  /**\n   * Merge obj1 with obj2 (shallow merge), without modifying inputs\n   * @param {Object} obj1\n   * @param {Object} obj2\n   * @returns {Object} Merged values of obj1 and obj2\n   *\n   * In order to support ES3, `Object.prototype.hasOwnProperty.call` is used\n   * Idea is from:\n   * https://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8\n   */\n  I18n.extend = function ( obj1, obj2 ) {\n    if (typeof(obj1) === \"undefined\" && typeof(obj2) === \"undefined\") {\n      return {};\n    }\n    return merge(obj1, obj2);\n  };\n\n  // Set aliases, so we can save some typing.\n  I18n.t = I18n.translate.bind(I18n);\n  I18n.l = I18n.localize.bind(I18n);\n  I18n.p = I18n.pluralize.bind(I18n);\n\n  return I18n;\n}));\n","/**\n * Cannot do Math.log(x) / Math.log(10) bc if IEEE floating point issue\n * @param x number\n */\nexport function getMagnitude(x) {\n    // Cannot count string length via Number.toString because it may use scientific notation\n    // for very small or very large numbers.\n    return Math.floor(Math.log(x) * Math.LOG10E);\n}\nexport function repeat(s, times) {\n    if (typeof s.repeat === 'function') {\n        return s.repeat(times);\n    }\n    var arr = new Array(times);\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = s;\n    }\n    return arr.join('');\n}\nexport function setInternalSlot(map, pl, field, value) {\n    if (!map.get(pl)) {\n        map.set(pl, Object.create(null));\n    }\n    var slots = map.get(pl);\n    slots[field] = value;\n}\nexport function setMultiInternalSlots(map, pl, props) {\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n        var k = _a[_i];\n        setInternalSlot(map, pl, k, props[k]);\n    }\n}\nexport function getInternalSlot(map, pl, field) {\n    return getMultiInternalSlots(map, pl, field)[field];\n}\nexport function getMultiInternalSlots(map, pl) {\n    var fields = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        fields[_i - 2] = arguments[_i];\n    }\n    var slots = map.get(pl);\n    if (!slots) {\n        throw new TypeError(pl + \" InternalSlot has not been initialized\");\n    }\n    return fields.reduce(function (all, f) {\n        all[f] = slots[f];\n        return all;\n    }, Object.create(null));\n}\nexport function isLiteralPart(patternPart) {\n    return patternPart.type === 'literal';\n}\n/*\n  17 ECMAScript Standard Built-in Objects:\n    Every built-in Function object, including constructors, that is not\n    identified as an anonymous function has a name property whose value\n    is a String.\n\n    Unless otherwise specified, the name property of a built-in Function\n    object, if it exists, has the attributes { [[Writable]]: false,\n    [[Enumerable]]: false, [[Configurable]]: true }.\n*/\nexport function defineProperty(target, name, _a) {\n    var value = _a.value;\n    Object.defineProperty(target, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value,\n    });\n}\nexport var UNICODE_EXTENSION_SEQUENCE_REGEX = /-u(?:-[0-9a-z]{2,8})+/gi;\nexport function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n"],"sourceRoot":""}