{"version":3,"sources":["components/component/Component.js","context/LanguageContext.js","components/context/test/ContextButton.js","components/context/test/ContextField.js","components/context/test/ContextCreate.js","components/context/test/ContextTest.js","context/OutsideChangeContext.js","components/context/outside-change/OutsideChangeContextInner.js","components/context/outside-change/OutsideChangeContextWrapper.js","pages/ContextPage.js"],"names":["title","children","className","React","createContext","text","useContext","LanguageContext","type","label","htmlFor","id","ContextField","ContextButton","ContextTest","state","language","onLanguageChange","event","preventDefault","setState","href","onClick","this","bind","Provider","value","ContextCreate","Component","setValue","memo","OutsideChangeContext","JSON","stringify","name","onChange","useState","contextValue","setContextValue","target","OutsideChangeContextInner","OutsideChangeContextWrapper"],"mappings":"iHAAA,2BAGe,oBAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACX,yBAAKC,UAAU,aACX,wBAAIA,UAAU,oBAAoBF,GAClC,yBAAKE,UAAU,mBAAmBD,M,wICJ3BE,G,OAAAA,IAAMC,cAAc,OCCpB,aACX,IACMC,EAAoB,OADTC,qBAAWC,GACK,SAAW,qEAE5C,OAAO,4BAAQC,KAAK,UAAUH,ICJnB,aACX,IACMI,EAAqB,OADVH,qBAAWC,GACM,OAAS,qBAE3C,OACI,2BACI,2BAAOG,QAAQ,oBAAoBD,GACnC,2BAAOD,KAAK,OAAOG,GAAG,uBCNnB,oBACX,6BACI,kBAACC,EAAD,MACA,kBAACC,EAAD,QCFaC,E,4MACjBC,MAAQ,CACJC,SAAU,M,EAoBdC,iBAAmB,SAACD,EAAUE,GAC1BA,EAAMC,iBAEN,EAAKC,SAAS,CACVJ,c,4CArBR,WACI,OACI,yBAAKd,UAAU,gBAAf,mBAEI,uBAAGA,UAAU,qBAAqBmB,KAAK,IAAIC,QAASC,KAAKN,iBAAiBO,KAAKD,KAAM,OAArF,MAGA,uBAAGrB,UAAU,qBAAqBmB,KAAK,IAAIC,QAASC,KAAKN,iBAAiBO,KAAKD,KAAM,OAArF,MAGA,kBAAChB,EAAgBkB,SAAjB,CAA0BC,MAAOH,KAAKR,MAAMC,UACxC,kBAACW,EAAD,Y,GAhBqBC,a,iBCH1BzB,MAAMC,cAAc,CAAEsB,MAAO,GAAIG,SAAU,eCC3CC,kBAAK,WAChB,MAA4BxB,qBAAWyB,GAA/BF,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,MAElB,OACI,sDACoBM,KAAKC,UAAUP,GAC/B,4BAAQQ,KAAK,uBAAuBC,SAAUN,GAC1C,4BAAQH,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,UCRDI,kBAAK,WAChB,MAAwCM,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAMA,OACI,oCACI,kBAACP,EAAqBN,SAAtB,CAA+BC,MAAO,CAAEA,MAAOW,EAAcR,SANpD,SAAAX,GACboB,EAAgBpB,EAAMqB,OAAOb,UAMrB,kBAACc,EAAD,WCTDV,0BAAK,WAChB,OACI,oCACI,kBAACF,EAAA,EAAD,CAAW5B,MAAM,gBACb,kBAACyC,EAAD,OAGJ,kBAACb,EAAA,EAAD,CAAW5B,MAAM,oBACb,kBAAC,EAAD","file":"static/js/17.25f69edc.chunk.js","sourcesContent":["import React from 'react';\nimport './Component.scss';\n\nexport default ({ title, children }) => (\n    <div className=\"component\">\n        <h3 className=\"component__title\">{title}</h3>\n        <div className=\"component__body\">{children}</div>\n    </div>\n);\n","import React from 'react';\n\nexport default React.createContext('ru');\n","import React, { useContext } from 'react';\nimport LanguageContext from '../../../context/LanguageContext';\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const text = language === 'en' ? 'Submit' : 'Подтвердить';\n\n    return <button type=\"button\">{text}</button>;\n};\n\n// раньше надо было делать через класс или consumer но с 16.8 можно использовать useContext\n// export default class ContextButton extends Component {\n//     static contextType = LanguageContext;\n//\n//     render() {\n//         console.log(this.context);\n//\n//         const text = this.context === \"en\" ? \"Submit\" : \"Подтвердить\";\n//\n//         return (\n//             <button type=\"button\">{text}</button>\n//         );\n//     }\n// }\n\n// вариант как делалось раньше через LanguageContext.Consumer\n// export default () => {\n//     return (\n//         <button type=\"button\">\n//             <LanguageContext.Consumer>\n//                 {(value) => value === \"en\" ? \"Submit\" : \"Подтвердить\"}\n//             </LanguageContext.Consumer>\n//\n//         </button>\n//     );\n// }\n","import React, { useContext } from 'react';\nimport LanguageContext from '../../../context/LanguageContext';\n\nexport default () => {\n    const language = useContext(LanguageContext);\n    const label = language === 'en' ? 'Name' : 'Имя';\n\n    return (\n        <p>\n            <label htmlFor=\"contextFieldName\">{label}</label>\n            <input type=\"text\" id=\"contextFieldName\" />\n        </p>\n    );\n};\n","import React from 'react';\nimport ContextButton from './ContextButton';\nimport ContextField from './ContextField';\n\nexport default () => (\n    <div>\n        <ContextField />\n        <ContextButton />\n    </div>\n);\n","import React, { Component } from 'react';\nimport './ContextTest.scss';\nimport ContextCreate from './ContextCreate';\nimport LanguageContext from '../../../context/LanguageContext';\n\nexport default class ContextTest extends Component {\n    state = {\n        language: 'en',\n    };\n\n    render() {\n        return (\n            <div className=\"context-test\">\n                Select language:\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, 'en')}>\n                    en\n                </a>\n                <a className=\"context-test__link\" href=\"/\" onClick={this.onLanguageChange.bind(this, 'ru')}>\n                    ru\n                </a>\n                <LanguageContext.Provider value={this.state.language}>\n                    <ContextCreate />\n                </LanguageContext.Provider>\n            </div>\n        );\n    }\n\n    onLanguageChange = (language, event) => {\n        event.preventDefault();\n\n        this.setState({\n            language,\n        });\n    };\n}\n","import React from 'react';\n\nexport default React.createContext({ value: {}, setValue: () => {} });\n","import React, { memo, useContext } from 'react';\nimport OutsideChangeContext from '../../../context/OutsideChangeContext';\n\nexport default memo(() => {\n    const { setValue, value } = useContext(OutsideChangeContext);\n\n    return (\n        <>\n            Context value: {JSON.stringify(value)}\n            <select name=\"outsideContextSelect\" onChange={setValue}>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n            </select>\n        </>\n    );\n});\n","import React, { memo, useState } from 'react';\nimport OutsideChangeContext from '../../../context/OutsideChangeContext';\nimport OutsideChangeContextInner from './OutsideChangeContextInner';\n\nexport default memo(() => {\n    const [contextValue, setContextValue] = useState(null);\n\n    const setValue = event => {\n        setContextValue(event.target.value);\n    };\n\n    return (\n        <>\n            <OutsideChangeContext.Provider value={{ value: contextValue, setValue }}>\n                <OutsideChangeContextInner />\n            </OutsideChangeContext.Provider>\n        </>\n    );\n});\n","import React, { memo } from 'react';\nimport ContextTest from '../components/context/test/ContextTest';\nimport Component from '../components/component/Component';\nimport OutsideChangeContextWrapper from '../components/context/outside-change/OutsideChangeContextWrapper';\n\nexport default memo(() => {\n    return (\n        <>\n            <Component title=\"OusideChange\">\n                <OutsideChangeContextWrapper />\n            </Component>\n\n            <Component title=\"Language example\">\n                <ContextTest />\n            </Component>\n        </>\n    );\n});\n"],"sourceRoot":""}