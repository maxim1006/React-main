{"version":3,"sources":["components/tabs/Tabs.js","components/search/SearchBar.js","components/search/SearchList.js","components/forms/Forms.js","components/jsx/JsxList.js","components/jsx/JsxFragment.js","components/jsx/JsxExamples.js","components/forms/ReduxForm.js","pages/ReactPage.js"],"names":["TabsComponent","Component","state","activeTab","onClick","index","this","setState","prevState","prevProps","componentDidMount","props","undefined","render","children","tabsHeader","tabsBody","Children","map","child","push","getTabsHeaderView","getTabsBody","className","bind","key","tabName","SearchBarComponent","inputValue","checkboxValue","selectValue","textareaValue","radioValue","dateValue","onInputChange","event","target","value","onInput","onCheckboxChange","checked","console","log","onSelectChange","onTextareaChange","onRadioChange","onDateChange","onFormSubmit","preventDefault","stringifiedState","JSON","stringify","onSubmit","onChange","type","cols","rows","name","SearchListComponent","getSearchListBody","items","id","age","FormsComponent","filteredItems","isFamilyLoading","cancelGetFamilyRequest","filter","toLowerCase","includes","customAxios","CancelToken","source","get","cancelToken","token","data","slice","renderContent","renderLoader","componentWillUnmount","cancel","style","transform","MaterialLoader","message","JsxListComponent","family","member","FamilyMember","occupation","prop1","prop2","backgroundColor","color","htmlFor","ReduxForm","renderInput","input","meta","label","mandatory","inputClassName","visited","error","form","renderMandatory","autoComplete","formValues","handleSubmit","valid","Field","component","disabled","reduxForm","validate","errors","title","ReactPage","Tabs","JsxFragment"],"mappings":"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","file":"static/js/8.996c6f94.chunk.js","sourcesContent":["import React, { Component, Children } from \"react\";\nimport \"./Tabs.scss\";\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">{tabsHeader}</div>\n                    <div className=\"tabs__content\">{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={index}\n                className={`tabs__header-item${index === this.state.activeTab ? \" _active\" : \"\"}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className=\"tabs__content-item\" key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return \"\";\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index\n        }));\n    };\n}\n","import React, { Component } from \"react\";\nimport \"./SearchBar.scss\";\n\n// все event которые передаются, в реакт оборачиваются в SyntheticEvent для косистенси, к примеру onChange работает\n// на всех контролах при их изменении.\n\n// также в <select> появляется атрибут value, в который можно проставить инит стейт\n\n// В реакт существуют controlled и uncontrolled form элементы. Разница в том, что controlled элемент всегда хранит\n// стейт и в каждый момент времени мы можем сказать какой стейт у компонента, поэтому храню в стейте состояние контролов\nexport class SearchBarComponent extends Component {\n    state = {\n        inputValue: \"\",\n        checkboxValue: false,\n        selectValue: \"2\",\n        textareaValue: \"\",\n        radioValue: \"1\",\n        dateValue: \"2019-10-06\" // always to YYYY-MM-DD\n    };\n\n    onInputChange = event => {\n        this.setState({\n            inputValue: event.target.value\n        });\n\n        this.props.onInput(event);\n    };\n\n    onCheckboxChange = event => {\n        this.setState({\n            checkboxValue: event.target.checked\n        });\n        console.log(\"onCheckboxChange \", event.target.checked);\n    };\n\n    onSelectChange = event => {\n        this.setState({\n            selectValue: event.target.value\n        });\n        console.log(\"onSelectChange \", event.target.value);\n    };\n\n    onTextareaChange = event => {\n        console.log(\"onTextareaChange \", event.target.value);\n        this.setState({\n            textareaValue: event.target.value\n        });\n    };\n\n    onRadioChange = event => {\n        console.log(\"onRadioChange \", event.target.value);\n        this.setState({\n            radioValue: event.target.value\n        });\n    };\n\n    onDateChange = event => {\n        console.log(\"onDateChange \", event.target.value);\n        this.setState({\n            dateValue: event.target.value\n        });\n    };\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        console.log(\"onFormSubmit \", this.state);\n    };\n\n    // onChange: Fires when there’s a change in any of the form’s input elements.\n    // так как onChange это обертка надо onInput команда реакта советует использовать\n    // onChange который срабатывает при каждом изменении каждого контрола\n    render() {\n        const {\n            inputValue,\n            checkboxValue,\n            selectValue,\n            textareaValue,\n            radioValue,\n            dateValue\n        } = this.state;\n        const stringifiedState = JSON.stringify(this.state);\n\n        return (\n            <form onSubmit={this.onFormSubmit}>\n                <div className=\"search-bar\">\n                    <input\n                        className=\"search-bar__input\"\n                        value={inputValue}\n                        onChange={this.onInputChange}\n                        type=\"text\"\n                    />\n                    {this.props.children}\n                    <br />\n                    <input\n                        className=\"search-bar__input\"\n                        onChange={this.onCheckboxChange}\n                        type=\"checkbox\"\n                        checked={checkboxValue}\n                    />\n                    <br />\n                    <select value={selectValue} onChange={this.onSelectChange}>\n                        <option value=\"1\">option 1</option>\n                        <option value=\"2\">option 2</option>\n                        <option value=\"3\">option 3</option>\n                    </select>\n                    <br />\n                    <textarea\n                        cols=\"30\"\n                        rows=\"10\"\n                        onChange={this.onTextareaChange}\n                        value={textareaValue}\n                    />\n                    <br />\n                    <input\n                        type=\"radio\"\n                        name=\"test\"\n                        value=\"1\"\n                        checked={radioValue === \"1\"}\n                        onChange={this.onRadioChange}\n                    />\n                    radio 1\n                    <br />\n                    <input\n                        type=\"radio\"\n                        name=\"test\"\n                        value=\"2\"\n                        checked={radioValue === \"2\"}\n                        onChange={this.onRadioChange}\n                    />\n                    radio 2\n                    <br />\n                    <input\n                        type=\"radio\"\n                        name=\"test\"\n                        value=\"3\"\n                        checked={radioValue === \"3\"}\n                        onChange={this.onRadioChange}\n                    />\n                    radio 3\n                    <br />\n                    <input\n                        type=\"date\"\n                        value={dateValue}\n                        onChange={this.onDateChange}\n                    />\n                </div>\n\n                <p>{stringifiedState}</p>\n            </form>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport \"./SearchList.scss\";\n\nexport class SearchListComponent extends Component {\n    getSearchListBody() {\n        return this.props.items.map(({ id, name, age }) => {\n            return (\n                <li className=\"search-list__item\" key={id}>\n                    {name} {age}\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return <ul className=\"search-list\">{this.getSearchListBody()}</ul>;\n    }\n}\n","import React, { Component } from \"react\";\nimport { SearchBarComponent } from \"../search/SearchBar\";\nimport { SearchListComponent } from \"../search/SearchList\";\nimport MaterialLoader from \"../loader/MaterialLoader\";\nimport customAxios from \"../../common/api/axios\";\n\nexport class FormsComponent extends Component {\n    state = {\n        items: [],\n        filteredItems: [],\n        isFamilyLoading: false\n    };\n\n    cancelGetFamilyRequest = null;\n\n    async componentDidMount() {\n        // Promise variant\n        // try {\n        //     const family = await fetch('http://localhost:3001/api/family');\n        //     const items = await family.json();\n        //\n        //     const filteredItems = items.slice();\n        //\n        //     this.setState({\n        //         items, filteredItems\n        //     });\n        // } catch (e) {\n        //     console.log('FormsComponent componentDidMount fetch(\\'http://localhost:3001/api/articles\\') error', e);\n        // }\n\n        // axios variant\n        this.cancelGetFamilyRequest = customAxios.CancelToken.source();\n\n        try {\n            const { data: items } = await customAxios.get(\"/family\", {\n                cancelToken: this.cancelGetFamilyRequest.token\n            });\n            const filteredItems = items.slice();\n\n            this.setState({\n                items,\n                filteredItems,\n                isFamilyLoading: true\n            });\n        } catch (e) {\n            console.log(\n                \"FormsComponent componentDidMount fetch /family error\",\n                e\n            );\n        }\n    }\n\n    onInput = event => {\n        const filteredItems = this.state.items.filter(({ name }) =>\n            name.toLowerCase().includes(event.target.value.toLowerCase())\n        );\n        this.setState({ filteredItems });\n    };\n\n    render() {\n        return this.state.isFamilyLoading\n            ? this.renderContent()\n            : this.renderLoader();\n    }\n\n    componentWillUnmount() {\n        // убиваю реквест через axios\n        this.cancelGetFamilyRequest.cancel(\n            \"http://localhost:3001/api/family canceled\"\n        );\n    }\n\n    renderContent() {\n        return (\n            <SearchBarComponent onInput={this.onInput}>\n                <SearchListComponent items={this.state.filteredItems} />\n            </SearchBarComponent>\n        );\n    }\n\n    renderLoader() {\n        return (\n            <div\n                style={{\n                    transform: \"scale3d(0.8, 0.8, 0.8)\"\n                }}\n            >\n                <MaterialLoader message=\"Loading family\" />\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport customAxios from \"../../common/api/axios\";\n\nexport class JsxListComponent extends Component {\n    state = {\n        family: []\n    };\n\n    async componentDidMount() {\n        this.cancelGetFamilyRequest = customAxios.CancelToken.source();\n\n        try {\n            const { data: family } = await customAxios.get(\"/family\", {\n                cancelToken: this.cancelGetFamilyRequest.token\n            });\n\n            this.setState({\n                family\n            });\n        } catch (e) {\n            console.log(\"JsxListComponent get('/family'... \", e);\n        }\n    }\n\n    componentWillUnmount() {\n        this.cancelGetFamilyRequest.cancel(\n            \"JsxListComponent get('/family'... canceled\"\n        );\n    }\n\n    // Тут классный пример деструктуризации входных свойств\n    render() {\n        return (\n            <ul>\n                {this.state.family.map(member => (\n                    <li key={member.id}>\n                        <FamilyMember {...member} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nfunction FamilyMember({ name, age, occupation }) {\n    return (\n        <>\n            Name: {name}, age: {age}, occupation: {occupation}\n        </>\n    );\n}\n","import React from \"react\";\n\nexport default ({ prop1, prop2 }) => {\n    // пример синтаксиса если надо вернуть multiple elements\n    // <></> - shortcut for <React.Fragment></React.Fragment>\n    return (\n        <>\n            <li>{prop1}</li>\n            <li>{prop2}</li>\n        </>\n    );\n};\n","import React from \"react\";\nimport \"./JsxExamples.css\";\n\nexport default () => {\n    const buttonText = \"Click me\";\n    const inlineStyles = { backgroundColor: \"#e8f3e8\", color: \"#333\" };\n\n    return (\n        <div>\n            <h3>Differences from html</h3>\n            <ol>\n                <li className=\"jsx-example__list-item\">\n                    {/* двойные стили пишу camelCase*/}\n                    <div style={{ backgroundColor: \"#e8f3e8\", color: \"#333\" }}>\n                        Inline styles\n                    </div>\n                    <div style={inlineStyles}>Inline styles2</div>\n                </li>\n                <li className=\"jsx-example__list-item\">\n                    {/* className вместо class, htmlFor instead of for*/}\n                    <div className=\"_modifier\">className instead of class</div>\n                    {/* так тоже работает но выдает ошибку с ворнингом*/}\n                    {/* <div class={\"_modifier\"}>class inside JSX also works</div>*/}\n                    <label htmlFor=\"name\">htmlFor instead of for</label>\n                    <input type=\"text\" id=\"name\" />\n                </li>\n                <li className=\"jsx-example__list-item\">\n                    Variables in JSX\n                    <button type=\"button\">{buttonText}</button>\n                </li>\n            </ol>\n        </div>\n    );\n};\n","import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport \"./ReduxForm.scss\";\n\nclass ReduxForm extends Component {\n    // label прокинут из label={\"Enter title\"}\n    renderInput = ({ input, meta, label, mandatory }) => {\n        // console.log(\"control \", input); // инфа о контроле\n        // console.log(\"metaInfo \", meta); // инфа о метадате\n\n        const inputClassName = `redux-form__input ${\n            meta.visited && meta.error ? \"_error\" : \"\"\n        }`;\n\n        return (\n            <>\n                {/* <input type=\"text\" onChange={control.onChange} value={control.value}/>*/}\n                {/* тоже что и*/}\n                <div className=\"redux-form__field\">\n                    <label htmlFor={meta.form + input.name}>\n                        {label}\n                        {this.renderMandatory(mandatory)}\n                    </label>\n                    <input\n                        autoComplete=\"off\"\n                        id={meta.form + input.name}\n                        type=\"text\"\n                        {...input}\n                        className={inputClassName}\n                    />\n                    <p className=\"redux-form__error-message\">\n                        {meta.visited && meta.error}\n                    </p>\n                </div>\n            </>\n        );\n    };\n\n    renderMandatory = mandatory => {\n        return mandatory ? <sup style={{ color: \"darkRed\" }}>*</sup> : null;\n    };\n\n    onSubmit(formValues) {\n        console.log(\"formValues \", formValues);\n    }\n\n    render() {\n        console.log(\"reduxForm props \", this.props);\n\n        const { handleSubmit, valid } = this.props;\n\n        return (\n            <form onSubmit={handleSubmit(this.onSubmit)}>\n                {/* name - обязательное имя филда*/}\n                <Field\n                    name=\"title\"\n                    component={this.renderInput}\n                    label=\"Enter title\"\n                    mandatory\n                />\n                <Field\n                    name=\"description\"\n                    component={this.renderInput}\n                    label=\"Enter description\"\n                />\n                <button type=\"submit\" disabled={!valid}>\n                    Submit\n                </button>\n            </form>\n        );\n    }\n}\n\n// Валидация\n// если вернуть пустой объект то форма валидна\n// для ошибки возвращаю объект с ключ значение, где ключ - имя поля, значение error message\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = \"title should be filled\";\n    }\n\n    return errors;\n};\n\n// после того как сконнектил этот компонент с формой у него появилась куча свойств\nexport default reduxForm({\n    // тут указываю название формы\n    form: \"reduxFormSample\",\n    validate\n})(ReduxForm);\n","import React from 'react';\nimport { FormsComponent } from '../components/forms/Forms';\nimport { JsxListComponent } from '../components/jsx/JsxList';\nimport JsxFragment from '../components/jsx/JsxFragment';\nimport JSXExampleComponent from '../components/jsx/JsxExamples';\nimport { TabsComponent } from '../components/tabs/Tabs';\nimport ReduxForm from '../components/forms/ReduxForm';\n\nexport default function ReactPage() {\n    return (\n        <TabsComponent>\n            <div tabName=\"React\">\n                {/*<Component title=\"ExamplesComponent\">*/}\n                {/*    <VminGrid />*/}\n                {/*</Component>*/}\n\n                {/*<Component title=\"ExamplesComponent\">*/}\n                {/*    <ExamplesComponent />*/}\n                {/*</Component>*/}\n\n                {/* <Component title=\"BroadcastComponent\">*/}\n                {/*    <BroadcastComponent />*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Performance\"> */}\n                {/*    <UploadComponent />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"Performance\"> */}\n                {/*    <Performance />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"JS tips\"> */}\n                {/*  <TipsComponent />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"Hook axios get on callback\"> */}\n                {/*    <GetRequestHookOnCbComponent />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"CSS Modules\"> */}\n                {/*    <CssModuleComponent />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"Mouseover mouseleave\"> */}\n                {/*    <MouseoverMouseleave />*/}\n                {/* </Component> */}\n\n                {/* <Component title=\"Scroll snap align\">*/}\n                {/*    <ScrollSnapAlign />*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Drag'n'drop\">*/}\n                {/*    <DragNDrop />*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Count up\">*/}\n                {/*    <CountupWrapper />*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Error boundary\">*/}\n                {/*    <ErrorBoundary>*/}\n                {/*        <ErrorBoundaryError/>*/}\n                {/*    </ErrorBoundary>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Error boundary\">*/}\n                {/*    <ErrorBoundary>*/}\n                {/*        <ErrorBoundaryError/>*/}\n                {/*    </ErrorBoundary>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Dropdown Menu\">*/}\n                {/*    <NavBar/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Insert HTML\">*/}\n                {/*    <DangerouslySetInnerHTML/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Array\">*/}\n                {/*    <ArrayComponent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Fetch\">*/}\n                {/*    <Fetch/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Skills\">*/}\n                {/*    <Skills/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Family fetch\">*/}\n                {/*    <AxiosFamily/>*/}\n                {/*    <FamilyFetch/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Container example\">*/}\n                {/*    <ContainerClass/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"HOC\">*/}\n                {/*    <HOCClass/>*/}\n                {/*    <HOCHooks/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Ref examples\">*/}\n                {/*    <RefHooks/>*/}\n                {/*    <RefClass/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Styled Components\">*/}\n                {/*    <StyledText isActive>Styled text</StyledText>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Firestore Family\">*/}\n                {/*    <FirestoreFamily/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Firestore\">*/}\n                {/*    <FireStore/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"AsyncSetState\">*/}\n                {/*    <AsyncSetState increaseNumber={1}/>*/}\n                {/*    <AsyncSetStateHooks increaseNumber={1}/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Monsters\">*/}\n                {/*    <Monsters/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Imports\">*/}\n                {/*    <Imports/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Parent\">*/}\n                {/*    <Parent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"Grid\">*/}\n                {/*    <Grid/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"RestApiComponent\">*/}\n                {/*    <RestApiComponent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"LifecycleHooksComponent\">*/}\n                {/*    <LifecycleHooksComponent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"ClassBasedComponent\">*/}\n                {/*    <ClassBasedComponent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"CommentListComponent\">*/}\n                {/*    <CommentListComponent/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"CommentListHooks\">*/}\n                {/*    <CommentListHooks/>*/}\n                {/* </Component>*/}\n\n                {/* <Component title=\"ClassBasedHooks\">*/}\n                {/*    <ClassBasedHooks/>*/}\n                {/* </Component>*/}\n            </div>\n            <div tabName=\"Redux Forms\">\n                <ReduxForm />\n            </div>\n            <div tabName=\"Forms\">\n                <FormsComponent />\n            </div>\n            <div tabName=\"JSX\">\n                <JsxListComponent />\n                <JsxFragment prop1=\"prop1\" prop2=\"prop2\" />\n                <JSXExampleComponent />\n            </div>\n        </TabsComponent>\n    );\n}\n"],"sourceRoot":""}