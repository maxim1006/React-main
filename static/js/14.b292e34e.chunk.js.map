{"version":3,"sources":["components/tabs/Tabs.js","components/component/Component.js","pages/pro-react/pro-react.page.module.scss","components/pro-react/router/components/auth/pro-react-router-auth.component.js","components/pro-react/router/components/admin/pro-react-router-admin.component.js","components/pro-react/router/pro-react-router.component.js","components/pro-react/console/pro-console.component.tsx","pages/pro-react/pro-react.page.js"],"names":["TabsComponent","state","activeTab","onClick","index","setState","prevState","prevProps","this","props","undefined","children","tabsHeader","tabsBody","Children","map","child","push","getTabsHeaderView","getTabsBody","className","bind","key","tabName","Component","title","module","exports","memo","Grid","container","spacing","item","xs","noValidate","autoComplete","style","marginBottom","TextField","id","label","type","MainMenu","routes","to","path","component","ProReactRouterAuthComponent","ProReactRouterAdminComponent","ProConsole","foo","bar","baz","console","log","table","time","i","getHorseInfo","name","age","Array","isArray","timeEnd","trace","ProReactPage","styles","proReactPage","Tabs"],"mappings":"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","file":"static/js/14.b292e34e.chunk.js","sourcesContent":["import React, { Component, Children } from 'react';\nimport './Tabs.scss';\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0,\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className=\"tabs\">\n                    <div className=\"tabs__header\">{tabsHeader}</div>\n                    <div className=\"tabs__content\">{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={index}\n                className={`tabs__header-item${index === this.state.activeTab ? ' _active' : ''}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className=\"tabs__content-item\" key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return '';\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index,\n        }));\n    };\n}\n","import React from 'react';\nimport './Component.scss';\n\nexport default ({ title, children }) => (\n    <div className=\"component\">\n        <h3 className=\"component__title\">{title}</h3>\n        <div className=\"component__body\">{children}</div>\n    </div>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"proReactPage\":\"pro-react.page_proReactPage__o_qfV\"};","import React, { memo } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst ProReactRouterAuthComponent = () => {\n    return (\n        <div>\n            <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    <h3>SignUpForm</h3>\n                    <form noValidate autoComplete=\"off\" style={{ marginBottom: '30px' }}>\n                        <Grid item xs={12}>\n                            <TextField id=\"standard-basic\" label=\"Standard\" />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id=\"filled-password-input\"\n                                label=\"Password\"\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                    </form>\n                </Grid>\n                <Grid item xs={6}>\n                    <h3>SignInForm</h3>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default memo(ProReactRouterAuthComponent);\n","import React, { memo } from 'react';\n\nconst ProReactRouterAdminComponent = () => {\n    return <div>ProReactRouterAdminComponent</div>;\n};\n\nexport default memo(ProReactRouterAdminComponent);\n","import React, { memo } from 'react';\nimport { Route } from 'react-router-dom';\nimport MainMenu from '../../menu/MainMenu';\nimport ProReactRouterAuthComponent from './components/auth/pro-react-router-auth.component';\nimport ProReactRouterAdminComponent from './components/admin/pro-react-router-admin.component';\n\nconst ProReactRouterComponent = () => {\n    return (\n        <div>\n            <MainMenu\n                routes={[\n                    { to: '/pro-react/auth', title: 'Auth' },\n                    { to: '/pro-react/admin', title: 'Admin' },\n                ]}\n            />\n\n            <Route path=\"/pro-react/auth\" component={ProReactRouterAuthComponent} />\n            <Route path=\"/pro-react/admin\" component={ProReactRouterAdminComponent} />\n        </div>\n    );\n};\n\nexport default memo(ProReactRouterComponent);\n","import React, { memo } from 'react';\n\ntype ProConsoleProps = {};\n\nconst ProConsole = memo<ProConsoleProps>(() => {\n    // default console\n    const foo = { foo: 1 };\n    const bar = { bar: 1 };\n    const baz = { baz: 1 };\n    console.log({ foo, bar, baz });\n\n    // вывожу как таблицу так как очень удобно для массива с объектами\n    console.table([foo, bar, baz]);\n\n    // styled console.log !!!\n    console.log('%c Colored console', 'color: orange; font-weight: bold');\n\n    // loop\n    console.time('loop');\n    let i = 0;\n    while (i < 100000) {\n        i++;\n    }\n    console.timeEnd('loop');\n\n    // trace\n    console.trace('The place where the function was triggeres with stack');\n\n    // string literal functions\n    function getHorseInfo(name: string | TemplateStringsArray, age: string) {\n        console.log({ name, age });\n        return `name: ${Array.isArray(name) ? name[0] : name}; age: ${age}`;\n    }\n\n    console.log(getHorseInfo('horsy 1', '3'));\n    // прикольно что то что передаю в ${'2'} будет являться вторым, третьим и тд аргументом, а первый будет массив\n    console.log(getHorseInfo`horsy 2${'2'}`);\n\n    return <>ProConsole</>;\n});\n\nexport default ProConsole;\n","import React from 'react';\nimport { TabsComponent } from '../../components/tabs/Tabs';\nimport Component from '../../components/component/Component';\nimport ProReactRouterComponent from '../../components/pro-react/router/pro-react-router.component';\nimport styles from './pro-react.page.module.scss';\nimport ProConsole from '../../components/pro-react/console/pro-console.component';\n\nconst ProReactPage = () => {\n    return (\n        <div className={styles.proReactPage}>\n            <TabsComponent>\n                <div tabName=\"React\">\n                    <Component title=\"ProConsole\">\n                        <ProConsole />\n                    </Component>\n                </div>\n                <div tabName=\"Router\">\n                    <Component title=\"Router\">\n                        <ProReactRouterComponent />\n                    </Component>\n                </div>\n            </TabsComponent>\n        </div>\n    );\n};\n\nexport default ProReactPage;\n"],"sourceRoot":""}